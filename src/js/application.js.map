{"version":3,"file":"application.js","mappings":"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","sources":["webpack://idiotproof/./src/js/config.js","webpack://idiotproof/./src/js/utils.js","webpack://idiotproof/./src/js/app-core.js","webpack://idiotproof/./src/js/index.js"],"sourcesContent":["// config.js\nexport const CONFIG = {\n    defaultProofingPhase: 'Hamburgers',\n    fontFormats: {\n      truetype: 'ttf',\n      opentype: 'otf',\n    },\n    jsonPath: 'src/js/proof.json',\n  };","import { CONFIG } from './config.js';\n  \n  // utils.js\n  export const getFormattedDate = () => {\n    const now = new Date();\n    return now.toJSON().slice(0, 10).replace(/-/g, '/');\n  };\n  \n  export const preserveUnique = (arr) => {\n    return [...new Set(arr)];\n  };\n  \n  export const showErrorMessage = (message) => {\n    const el = document.getElementById('message');\n    if (el) {\n      el.style.display = message && message.trim().length > 0 ? 'block' : 'none';\n      el.textContent = message;\n    } else {\n      console.error('Message element not found. Error message:', message);\n    }\n  };\n  \n  export const uint8ToBase64 = (buffer) => {\n    const chunk = 8192;\n    let result = '';\n    for (let i = 0; i < buffer.length; i += chunk) {\n      const slice = buffer.subarray(i, i + chunk);\n      result += String.fromCharCode.apply(null, slice);\n    }\n    return btoa(result);\n  };\n  \n  export const sanitizeId = (id) => {\n    return id.replace(/[^a-z0-9]/gi, '_').toLowerCase();\n  };\n\n  export const localStorageClear = () => {\n    localStorage.clear();\n    localStorage.setItem('proofingPhase', CONFIG.defaultProofingPhase);\n    location.reload();\n  };\n\n  export function toggleMode() {\n    const body = document.body;\n    const currentMode = localStorage.getItem('colorMode') || 'light';\n    const newMode = currentMode === 'light' ? 'dark' : 'light';\n    \n    // Save the new mode\n    localStorage.setItem('colorMode', newMode);\n    \n    // Update UI\n    if (newMode === 'light') {\n      body.removeAttribute('data-theme');\n      document.querySelector('#btn__mode-toggle .material-symbols-outlined').textContent = 'light_mode';\n    } else {\n      body.setAttribute('data-theme', 'dark');\n      document.querySelector('#btn__mode-toggle .material-symbols-outlined').textContent = 'dark_mode';\n    }\n  }\n  export function toggleSettingsVisibility() {\n    const settingsToggle = document.getElementById('btn__settings-toggle');\n    const body = document.body;\n    body.classList.toggle('settings-visible');\n    settingsToggle.classList.toggle('settings-visible');\n  }\n\n  export function toggleUi() {\n\tconst toggleUIButton = document.getElementById('btn__ui-toggle');\n\tconst body = document.body;\n  \n\tbody.classList.toggle('ui-hidden');\n\tthis.classList.toggle('ui-hidden');\n\t\n\t// Optionally, you can save the state to localStorage\n\tlocalStorage.setItem('uiHidden', body.classList.contains('ui-hidden'));\n  \n\t// Check if the UI was hidden in a previous session\n\tif (localStorage.getItem('uiHidden') === 'true') {\n\t  body.classList.add('ui-hidden');\n\t  toggleUIButton.classList.add('ui-hidden');\n\t}\n  }\n  \n  export const calculateTypeScale = (baseSize = 14, ratio = 1.618, steps = 6) => {\n    const sizes = {\n      't__size-xxl': Math.round(baseSize * Math.pow(ratio, 5)),\n      't__size-xl':  Math.round(baseSize * Math.pow(ratio, 4)),\n      't__size-l':   Math.round(baseSize * Math.pow(ratio, 3)),\n      't__size-m':   Math.round(baseSize * Math.pow(ratio, 2)),\n      't__size-s':   Math.round(baseSize * Math.pow(ratio, 1)),\n      't__size-xs':  baseSize\n    };\n    return sizes;\n  };\n  \n  export const whichFontSize = (text, baseSize = 14, ratio = 1.618) => {\n    if (!text) return baseSize.toString();\n  \n    const sizes = calculateTypeScale(baseSize, ratio);\n    \n    const charCount = text.length;\n    if (charCount < 25) return sizes['t__size-xxl'];\n    if (charCount < 50) return sizes['t__size-xl'];\n    if (charCount < 95) return sizes['t__size-l'];\n    if (charCount < 200) return sizes['t__size-m'];\n    if (charCount < 1000) return sizes['t__size-s'];\n    return sizes['t__size-xs'];\n  };\n  \n  export const removeElementsByClass = (className) => {\n    document.querySelectorAll(`.${className}`).forEach(el => el.remove());\n  };\n  \n  export const removeElementById = (id) => {\n    const element = document.getElementById(id);\n    if (element) {\n      element.style.transition = 'opacity 0.5s ease';\n      element.style.opacity = '0';\n      setTimeout(() => element.remove(), 500);\n    }\n  };\n  \n  export const saveData = (id, value) => {\n    if (typeof Storage !== 'undefined') {\n      if (value !== 'thisContent') {\n        localStorage.setItem(id, value);\n      } else {\n        const content = document.getElementById(id).textContent;\n        localStorage.setItem(id, content);\n      }\n    }\n  };\n  \n  // Save content of a contenteditable element to localStorage\n  export const saveEditableContent = (elementId) => {\n    const element = document.getElementById(elementId);\n    if (!element) {\n      console.warn(`Element with ID ${elementId} not found`);\n      return;\n    }\n    \n    const content = element.innerText;\n    localStorage.setItem(elementId, content);\n  };\n\n  // Save value of an input element to localStorage\n  export const saveInputValue = (elementId) => {\n    const element = document.getElementById(elementId);\n    if (!element) {\n      console.warn(`Element with ID ${elementId} not found`);\n      return;\n    }\n    \n    localStorage.setItem(elementId, element.value);\n  };\n\n  // Get content from localStorage or return default\n  export const getStoredContent = (elementId, defaultContent = '') => {\n    return localStorage.getItem(elementId) || defaultContent;\n  };\n  \n  export function initColorMode() {\n\tconst savedMode = localStorage.getItem('colorMode') || 'light';\n\tconst body = document.body;\n  \n\tif (savedMode === 'dark') {\n\t  body.setAttribute('data-theme', 'dark');\n\t  document.querySelector('#btn__mode-toggle .material-symbols-outlined').textContent = 'dark_mode';\n\t} else {\n\t  body.removeAttribute('data-theme');\n\t  document.querySelector('#btn__mode-toggle .material-symbols-outlined').textContent = 'light_mode';\n\t}\n  }\n  ","import { CONFIG } from './config.js';\nimport { getFormattedDate,\n\tpreserveUnique,\n\tshowErrorMessage,\n\tuint8ToBase64,\n\tlocalStorageClear,\n\twhichFontSize,\n\tremoveElementsByClass,\n\tsaveData,\n\ttoggleMode,\n\ttoggleSettingsVisibility,\n\ttoggleUi,\n\tsaveEditableContent,\n\tsaveInputValue,\n\tgetStoredContent,\n\tcalculateTypeScale,\n\tinitColorMode  } from './utils.js';\n\nlet font = null;\nconst fontFormats = {\n    truetype: 'ttf',\n    opentype: 'otf',\n};\n\nexport const onFontLoaded = (loadedFont, fontFamilySource, fontFamily) => {\n\treturn new Promise(async (resolve, reject) => {\n\t  try {\n\t\tfont = loadedFont;\n\t\tconsole.log(`Font assigned globally: ${fontFamily}`);\n\t\t\n\t\t// Create and load the font face first\n\t\tif ('FontFace' in window) {\n\t\t  const fontFace = new FontFace(\n\t\t\tfontFamily,\n\t\t\t`url('${fontFamilySource}')`,\n\t\t\t{ format: loadedFont.outlinesFormat === 'truetype' ? 'truetype' : 'opentype' }\n\t\t  );\n\n\t\t  // Wait for the font to load\n\t\t  await fontFace.load();\n\t\t  document.fonts.add(fontFace);\n\t\t  console.log(`Font loaded successfully: ${fontFamily}`);\n\t\t}\n\n\t\t// Create and apply the font-face rule for browsers without FontFace API\n\t\tconst fontFaceRule = `\n\t\t  @font-face {\n\t\t\tfont-family: '${fontFamily}';\n\t\t\tsrc: url('${fontFamilySource}') format('${loadedFont.outlinesFormat === 'truetype' ? 'truetype' : 'opentype'}');\n\t\t  }\n\t\t`;\n\t\tconst style = document.createElement('style');\n\t\tstyle.textContent = fontFaceRule;\n\t\tdocument.head.appendChild(style);\n\t\tconsole.log(`Font-face rule applied: ${fontFaceRule}`);\n  \n\t\twindow.fontFamily = fontFamily;\n\t\tconsole.log(`Window.fontFamily set to: ${fontFamily}`);\n  \n\t\t// Wait for font to be ready before displaying data\n\t\tawait document.fonts.ready;\n\t\tawait displayFontData(fontFamily);\n  \n\t\tif (['localhost', '127.0.0.1', ''].includes(location.hostname)) {\n\t\t  localStorage.setItem('fontFamily', fontFamily);\n\t\t  localStorage.setItem('fontFamilySource', fontFamilySource);\n\t\t  console.log(`Font information saved to localStorage`);\n\t\t}\n  \n\t\t// Get current stage before setting new one\n\t\tconst currentStage = document.querySelector('.btn__stage.active')?.dataset?.stage \n\t\t\t|| localStorage.getItem('proofingPhase') \n\t\t\t|| window.proofingPhase \n\t\t\t|| 'Hamburgers';\n  \n\t\tawait setStage(currentStage);\n\t\t\n\t\tconsole.log(`Stage set successfully`);\n\t\tresolve();\n\t  } catch (error) {\n\t\tconsole.error('Error in onFontLoaded:', error);\n\t\treject(error);\n\t  }\n\t});\n  };\n\nexport const onReadFile = (event) => {\n\tconst files = event.target.files;\n\tconst fileButtonParent = document.getElementById('section__header-file-buttons');\n\tfileButtonParent.innerHTML = '';\n\n\t// First add navigation\n\tconst navGroup = generateFontNavigation();\n\tfileButtonParent.appendChild(navGroup);\n\n\t// Then add font buttons\n\tgenerateFontButtons(Array.from(files), 'server')\n\t  .then(container => {\n\t\tfileButtonParent.appendChild(container);\n\t\t// Activate the first button automatically\n\t\tconst firstButton = container.querySelector('.btn__setfont');\n\t\tif (firstButton) {\n\t\t  firstButton.click();\n\t\t}\n\t  });\n};\n\n  const readSingleFile = (file) => {\n\treturn new Promise((resolve, reject) => {\n\t  const reader = new FileReader();\n\t  \n\t  reader.onload = async (e) => {\n\t\ttry {\n\t\t  console.log(`File read successfully: ${file.name}`);\n\t\t  const font = opentype.parse(e.target.result);\n\t\t  console.log(`Font parsed successfully: ${font.names.postScriptName.en}`);\n\t\t  const fontFamily = font.names.postScriptName.en;\n\t\t  const fontFamilySource = `fonts/${fontFamily}`;\n\t\t  \n\t\t  await onFontLoaded(font, fontFamilySource, fontFamily);\n  \n\t\t  font.file = {\n\t\t\tname: file.name,\n\t\t\tlastModified: file.lastModified,\n\t\t\tsize: file.size,\n\t\t\ttype: file.type,\n\t\t  };\n\t\t  font.type = 'user:local';\n  \n\t\t  const tempUint8array = new Uint8Array(e.target.result);\n\t\t  const isVariableFont = font.tables.fvar !== undefined;\n  \n\t\t  // Set the @font-face rule\n\t\t  const fontFaceRule = `@font-face {font-family:'${fontFamily}'; src: url('data:font/ttf;base64,${uint8ToBase64(tempUint8array)}') format('truetype');}`;\n\t\t  document.getElementById('style__fontface').innerHTML += fontFaceRule;\n\t\t  console.log(`Font-face rule added: ${fontFaceRule}`);\n  \n\t\t  console.log(`Loaded font: ${fontFamily}, Variable: ${isVariableFont}`);\n  \n\t\t  showErrorMessage('');\n\t\t  resolve();\n\t\t} catch (err) {\n\t\t  console.error('Error parsing font:', err);\n\t\t  showErrorMessage(`Error loading font: ${err.message}`);\n\t\t  reject(err);\n\t\t}\n\t  };\n  \n\t  reader.onerror = (err) => {\n\t\tconsole.error('Error reading file:', err);\n\t\tshowErrorMessage(err.toString());\n\t\treject(err);\n\t  };\n  \n\t  reader.readAsArrayBuffer(file);\n\t});\n  };\n\nexport const setFont = async (fontPath, fontName) => {\n\tconsole.log(`Attempting to load font: ${fontName} from ${fontPath}`);\n\tconsole.log(`Font file extension: ${fontPath.split('.').pop()}`);\n\t\n\topentype.load(fontPath, (err, loadedFont) => {\n\t  if (err) {\n\t\tconsole.error('Error loading font:', err);\n\t\tconsole.error('Font path:', fontPath);\n\t\tconsole.error('Font name:', fontName);\n\t\tshowErrorMessage(`Error loading font: ${err}`);\n\t  } else {\n\t\tconsole.log(`✅ Font loaded successfully: ${fontName}`);\n\t\tconsole.log('📋 Font tables:', Object.keys(loadedFont.tables || {}));\n\t\tconsole.log('🔄 Has fvar table:', !!loadedFont.tables?.fvar);\n\t\tconsole.log('🎛️ Font format:', loadedFont.outlinesFormat);\n\t\t\n\t\tif (loadedFont.tables?.fvar) {\n\t\t  console.log('📊 Variable font axes:', loadedFont.tables.fvar.axes?.length || 0);\n\t\t  console.log('🏷️ Named instances:', loadedFont.tables.fvar.instances?.length || 0);\n\t\t  console.log('🎯 Axes details:', loadedFont.tables.fvar.axes?.map(a => a.tag) || []);\n\t\t} else {\n\t\t  console.warn('❌ No fvar table found - this is not a variable font');\n\t\t}\n\t\t\n\t\tfont = loadedFont; // Ensure this is set globally\n\t\ttry {\n\t\t  onFontLoaded(loadedFont, fontPath, fontName);\n\t\t  // After the font is loaded and processed, set the stage\n\t\t  setStage(localStorage.getItem('proofingPhase') || 'Hamburgers');\n\t\t} catch (error) {\n\t\t  console.error('Error in onFontLoaded:', error);\n\t\t  showErrorMessage(`Error processing font: ${error}`);\n\t\t}\n\t  }\n\t});\n};\n\nexport const displayFontData = async (fontFamily) => {\n    var tablename, table, property, value, tag;\n    var styles = '';\n\n    for (tablename in font.tables) {\n        table = font.tables[tablename];\n        \n        if (tablename === 'name') {\n            let nameHtml = '';\n            if (font.names.postScriptName) {\n                var postScriptName = font.names.postScriptName.en;\n            } else {\n                var postScriptName = \"Untitled Font\";\n            }\n\n            // Get version from head table\n            const version = font.tables.head.fontRevision;\n            // Format version to 2 decimal places\n            const formattedVersion = `Ver ${version}`;\n            \n\t\t\tnameHtml += `<div class=\"section__header-name-font\" spellcheck=\"false\">${postScriptName}</div>`;\n            nameHtml += `<div class=\"section__header-name-version\" spellcheck=\"false\">${formattedVersion}</div>`;\n            styles += `.t__importedfontfamily { font-family: \"${fontFamily}\" }`;\n\n            // Get and format the font's modification date\n            const modifiedDate = font.tables.head.modified;\n            const formattedDate = `Last edited ${new Date(modifiedDate * 1000).toLocaleDateString()}`;\n            nameHtml += `<div class=\"section__header-name-date\">${formattedDate}</div>`;\n            \n            document.getElementById('section__header-names').innerHTML = nameHtml;\n            continue;\n        }\n    }\n\n    // Apply styles only after font is loaded\n    document.getElementById('style__fontfamily').innerHTML = styles;\n    \n    // Set stage after font is ready\n    const currentStage = document.querySelector('.btn__stage.active')?.dataset?.stage \n        || localStorage.getItem('proofingPhase') \n        || window.proofingPhase \n        || 'Hamburgers';\n    \n    setStage(currentStage);\n};\n\nexport const setStage = (stage) => {\n\tconst article = document.getElementById('section__article-app');\n\tconst stageButtons = document.getElementById('section__header-stage-buttons');\n\t\n\tif (!font) {\n\t  console.warn('Font not loaded yet. Deferring stage setting.');\n\t  window.pendingStage = stage;\n\t  return;\n\t}\n  \n\tfetch(CONFIG.jsonPath)\n\t  .then(response => response.json())\n\t  .then(proof => {\n\t\tconst html = generateStageHtml(proof, stage);\n\t\tconst buttonHtml = generateStageButtons(proof, stage);\n  \n\t\tarticle.innerHTML = html;\n\t\tstageButtons.innerHTML = buttonHtml;\n\t\tdocument.getElementById('style__opentype-features').innerHTML = '';\n\t\t\n\t\tsaveData('proofingPhase', stage);\n  \n\t\t// Initialize type scale after rendering\n\t\tinitTypeScale();\n  \n\t\tconst lockDimensions = localStorage.getItem('lockProofDimensions') === 'true';\n\t\tapplyLockProofDimensions(lockDimensions);\n\t  })\n\t  .catch(error => console.error('Error loading JSON:', error));\n  };\n  \nconst generateStageHtml = (proof, stage) => {\n  if (!proof[stage]) {\n    return '<div class=\"item d-flex t__center\"><div class=\"item__proof\">No features found! :...(</div></div>';\n  }\n\n  const fontName = font.names.postScriptName.en;\n  const version = font.tables.head.fontRevision;\n  const formattedVersion = `Ver ${version}`;\n\n  const gsubFeatures = font.tables.gsub?.features || {};\n  const taglist = Object.values(gsubFeatures)\n    .filter(feature => typeof feature === 'object' && feature.tag)\n    .map(feature => feature.tag)\n    .filter(tag => {\n      return proof[\"Features\"][tag] !== undefined || tag.startsWith('ss');\n    });\n\n  let html = '';\n\n  // Generate standard proof windows from JSON\n  for (const title in proof[stage]) {\n    if (stage === \"Features\" && !taglist.includes(title)) {\n      continue;\n    }\n\n    const textClass = whichFontSize(proof[stage][title]);\n    const testAreaID = `section__proofing-${title}`;\n    const itemID = `item--${title}`;\n    const sliderID = `${itemID}`;\n    \n    const { fontSize, lineHeight, letterSpacing, inlineStyle } = getStoredStyles(sliderID, textClass);\n    const fvarStyle = generateFvarStyle(itemID);\n\n    html += `\n      <div id=\"${itemID}\" class=\"item\">\n        <button class=\"btn btn-link add-item-above chip\" onclick=\"insertField('${itemID}')\">+ Add Proof Window</button>\n        <div class=\"item__container d-flex\">\n          <div class=\"item__sliders pt-2\">\n            <div class=\"item__sliders-wrapper\">\n              ${generateSliders(itemID, sliderID, fontSize, lineHeight, letterSpacing)}\n              ${generateVariableSliders(itemID, sliderID)}\n              ${generateStyleButtons(itemID)}\n              ${generateFeatureCheckboxes(itemID, proof, taglist)}\n            </div>\n          </div>\n          <div class=\"item__proof ratio-letter\">\n            <button class=\"btn btn-link remove-item-this invisible\" onclick=\"removeElementsByID('${itemID}')\">×</button>\n            ${generateProofContent(stage, title, proof, testAreaID, fvarStyle, textClass)}\n            <div class=\"item__footer d-flex justify-content-between\">\n              <span class=\"item__footer-name-font\">${fontName}</span>\n              <span class=\"item__footer-name-version\">${formattedVersion}</span>\n            </div>\n          </div>\n        </div>\n      </div>\n    `;\n  }\n  \n  // Add custom proof windows for this stage\n  const customWindows = JSON.parse(localStorage.getItem('customProofWindows') || '{}');\n  if (customWindows[stage] && customWindows[stage].length > 0) {\n    for (const customItemId of customWindows[stage]) {\n      // Fixed: Create correct IDs for custom windows\n      const testAreaID = `section__proofing-custom-${customItemId}`;\n      \n      // Fixed: Use stored values with proper fallbacks\n      const { fontSize, lineHeight, letterSpacing, inlineStyle } = getStoredStyles(customItemId, 'text-xl');\n      const fvarStyle = generateFvarStyle(customItemId);\n      \n      // Fixed: Get stored content with proper fallback values\n      const savedTitle = localStorage.getItem(`${testAreaID}-title`) || 'Custom Proof Window';\n      const savedContent = localStorage.getItem(testAreaID) || 'This is a custom proof window. Type your text here.';\n\n      html += `\n        <div id=\"${customItemId}\" class=\"item custom-item\">\n          <button class=\"btn btn-link add-item-above chip\" onclick=\"insertField('${customItemId}')\">+ Add Proof Window</button>\n          <div class=\"item__container d-flex\">\n            <div class=\"item__sliders pt-2\">\n              <div class=\"item__sliders-wrapper\">\n                ${generateSliders(customItemId, customItemId, fontSize, lineHeight, letterSpacing)}\n                ${generateVariableSliders(customItemId, customItemId)}\n                ${generateStyleButtons(customItemId)}\n                ${generateFeatureCheckboxes(customItemId, proof, taglist)}\n                <div class=\"mt-2\">\n                  <button class=\"btn btn-sm btn-danger d-flex align-items-center g-1\" onclick=\"removeCustomProofWindow('${customItemId}')\">\n                    <span class=\"material-symbols-outlined\">delete</span>\n                    Remove this window\n                  </button>\n                </div>\n              </div>\n            </div>\n            <div class=\"item__proof ratio-letter\">\n              <div class=\"d-flex justify-content-between\">\n                <h6 class=\"h6\" contentEditable=\"true\" \n                    id=\"${testAreaID}-title\"\n                    onkeyup=\"saveEditableContent('${testAreaID}-title')\">${savedTitle}</h6>\n              </div>\n              <div class=\"testarea-container\">\n                <div id=\"${testAreaID}\" \n                     style=\"${inlineStyle} ${fvarStyle}\" \n                     class=\"t__importedfontfamily testarea\" \n                     contenteditable=\"true\" \n                     spellcheck=\"false\" \n                     onkeyup=\"saveEditableContent('${testAreaID}')\">\n                  ${savedContent}\n                </div>\n              </div>\n              <div class=\"item__footer d-flex justify-content-between\">\n                <span class=\"item__footer-name-font\">${fontName}</span>\n                <span class=\"item__footer-name-version\">${formattedVersion}</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      `;\n    }\n  }\n  \n  return html;\n};\n\n// Also add debug logging to troubleshoot any remaining issues\nconst saveCustomProofWindow = (itemId, stage) => {\n  const customWindows = JSON.parse(localStorage.getItem('customProofWindows') || '{}');\n  if (!customWindows[stage]) {\n    customWindows[stage] = [];\n  }\n  if (!customWindows[stage].includes(itemId)) {\n    customWindows[stage].push(itemId);\n    localStorage.setItem('customProofWindows', JSON.stringify(customWindows));\n    console.log(`Added custom window \"${itemId}\" to stage \"${stage}\"`);\n    console.log('Custom windows:', JSON.stringify(customWindows));\n  }\n};\n\nconst getStoredStyles = (itemID, textClass) => {\n  const typeScale = parseFloat(document.getElementById('select__type-scale')?.value || 1.618);\n  const baseSize = parseFloat(document.getElementById('input__base-font-size')?.value || 14);\n  const content = document.querySelector(`#${itemID} .testarea`)?.textContent || textClass;\n  const fontSize = getItemFontSize(itemID, content, baseSize, typeScale);\n  const lineHeight = getItemLineHeight(itemID);\n  const letterSpacing = localStorage.getItem(`${itemID}-letterSpacing`) || '0';\n  const columnCount = localStorage.getItem(`${itemID}-column-count`) || '1';\n  const columnGap = localStorage.getItem(`${itemID}-column-gap`) || '1em';\n\n  const inlineStyle = `\n    font-size: ${fontSize}pt;\n    line-height: ${lineHeight};\n    letter-spacing: ${letterSpacing}em;\n    column-count: ${columnCount};\n    column-gap: ${columnGap};\n  `;\n\n  return { fontSize, lineHeight, letterSpacing, columnCount, columnGap, inlineStyle };\n};\n\nconst generateFvarStyle = (itemID) => {\n  let fvarStyle = '';\n  if (font.tables.fvar) {\n    const fvarSupport = font.tables.fvar.axes.map(axis => axis.tag);\n    fvarStyle = 'font-variation-settings: ' + \n      font.tables.fvar.axes.map(axis => {\n        const storedValue = localStorage.getItem(`${itemID}-${axis.tag}-val`);\n        const value = storedValue !== null ? storedValue : axis.defaultValue;\n        return `'${axis.tag}' ${value}`;\n      }).join(', ') + ';';\n  }\n  return fvarStyle;\n};\n\nconst generateSliders = (itemID, sliderID, fontSize, lineHeight, letterSpacing) => {\n  const hasCustomLineHeight = localStorage.getItem(`${itemID}-lineHeight`) !== null;\n  const hasCustomFontSize = localStorage.getItem(`${itemID}-fontSize`) !== null;\n  const hasCustomLetterSpacing = localStorage.getItem(`${itemID}-letterSpacing`) !== null;\n  \n  return `\n    <div>\n      <label for=\"${sliderID}-fontSize\">Font Size</label>\n      <span class=\"t__right text-small\" id=\"${sliderID}-fontSize-val\">${fontSize}pt</span>\n      <span class=\"t__right material-symbols-outlined remove\" onclick=\"removeStyleValue('${itemID}', 'fontSize')\">clear</span>\n      <input id=\"${sliderID}-fontSize\" type=\"range\" class=\"slider ${hasCustomFontSize ? 'modified' : ''}\" \n        min=\"4\" max=\"160\" step=\"2\" value=\"${fontSize}\" \n        oninput=\"passStyleValue('${itemID}', 'fontSize', this.value)\">\n    </div>\n    <div>\n      <label for=\"${sliderID}-lineHeight\">Line Height</label>\n      <span class=\"t__right text-small\" id=\"${sliderID}-lineHeight-val\">${lineHeight}</span>\n      <span class=\"t__right material-symbols-outlined remove\" onclick=\"removeStyleValue('${itemID}', 'lineHeight')\">clear</span>\n      <input id=\"${sliderID}-lineHeight\" type=\"range\" class=\"slider ${hasCustomLineHeight ? 'modified' : ''}\" \n        min=\"0.6\" max=\"3.0\" step=\"0.01\" value=\"${lineHeight}\" \n        oninput=\"passStyleValue('${itemID}', 'lineHeight', this.value)\">\n    </div>\n    <div>\n      <label for=\"${sliderID}-letterSpacing\">Letter Spacing </label>\n      <span class=\"t__right text-small\" id=\"${sliderID}-letterSpacing-val\">${letterSpacing}em</span>\n      <span class=\"t__right material-symbols-outlined remove\" onclick=\"removeStyleValue('${itemID}', 'letterSpacing')\">clear</span>\n      <input id=\"${sliderID}-letterSpacing\" type=\"range\" class=\"slider ${hasCustomLetterSpacing ? 'modified' : ''}\" \n        min=\"-0.4\" max=\"0.4\" step=\"0.01\" value=\"${letterSpacing}\" \n        oninput=\"passStyleValue('${itemID}', 'letterSpacing', this.value)\">\n    </div>\n  `;\n};\n\nconst generateVariableSliders = (itemID, sliderID) => {\n  if (!font.tables.fvar) return '';\n\n  const allInstances = getAllNamedInstances(); // Get all unique named instances\n  const instanceDropdown = generateMasterInstanceDropdown(itemID, allInstances);\n\n  const axisSliders = font.tables.fvar.axes.map(axis => {\n    const storedValue = localStorage.getItem(`${itemID}-${axis.tag}-val`);\n    const value = storedValue !== null ? storedValue : axis.defaultValue;\n    \n    // Get named instances for this axis (for visual nodes only)\n    const axisInstances = getAxisInstances(axis.tag);\n    const instanceNodes = generateInstanceNodes(axis, axisInstances);\n    \n    return `\n      <div class=\"variable-axis-container\" data-axis=\"${axis.tag}\">\n        <label for=\"${sliderID}-${axis.tag}\">${axis.name.en} </label>\n        <span class=\"t__right text-small\" id=\"${sliderID}-${axis.tag}-val\">${value}</span>\n        <div class=\"slider-container\">\n          <input id=\"${sliderID}-${axis.tag}\" type=\"range\" class=\"slider variable-slider\" \n                 min=\"${axis.minValue}\" max=\"${axis.maxValue}\" value=\"${value}\" \n                 data-axis=\"${axis.tag}\"\n                 oninput=\"handleSliderInput('${itemID}', '${axis.tag}', this.value, '${font.tables.fvar.axes.map(a => a.tag).join(',')}')\"\n                 onchange=\"updateSliderNodes(this)\">\n          ${instanceNodes}\n        </div>\n      </div>\n    `;\n  }).join('');\n\n  return `\n    ${axisSliders}\n    ${instanceDropdown}\n  `;\n};\n\n// Get all unique named instances\nconst getAllNamedInstances = () => {\n  if (!font.tables.fvar || !font.tables.fvar.instances) return [];\n  \n  return font.tables.fvar.instances.map(instance => ({\n    name: instance.name?.en || 'Unnamed Instance',\n    coordinates: instance.coordinates\n  }));\n};\n\n// Generate master instance dropdown that affects all axes\nconst generateMasterInstanceDropdown = (itemID, instances) => {\n  if (!instances.length) return '';\n  \n  const dropdownId = `${itemID}-master-instances`;\n  \n  const options = instances.map(instance => \n    `<option value='${JSON.stringify(instance.coordinates)}'>${instance.name}</option>`\n  ).join('');\n  \n  return `\n    <div class=\"master-instance-dropdown-container\">\n      <label for=\"${dropdownId}\" class=\"text-small\">Named Instances:</label>\n      <select id=\"${dropdownId}\" class=\"instance-dropdown\" \n              onchange=\"applyMasterInstance('${itemID}', this)\">\n        <option value=\"\">Select Instance...</option>\n        ${options}\n      </select>\n    </div>\n  `;\n};\n\n// Helper function to get instances for a specific axis\nconst getAxisInstances = (axisTag) => {\n  if (!font.tables.fvar || !font.tables.fvar.instances) return [];\n  \n  const instances = font.tables.fvar.instances\n    .filter(instance => instance.coordinates && instance.coordinates[axisTag] !== undefined)\n    .map(instance => ({\n      name: instance.name?.en || 'Unnamed Instance',\n      value: instance.coordinates[axisTag],\n      coordinates: instance.coordinates\n    }));\n  \n  // Remove duplicates by value and keep only unique positions\n  const uniqueInstances = [];\n  const seenValues = new Set();\n  \n  instances.forEach(instance => {\n    if (!seenValues.has(instance.value)) {\n      seenValues.add(instance.value);\n      uniqueInstances.push(instance);\n    }\n  });\n  \n  // Sort by axis value and limit to reasonable number of nodes (max 10 per axis)\n  return uniqueInstances\n    .sort((a, b) => a.value - b.value)\n    .slice(0, 10); // Limit to max 10 nodes per axis\n};\n\n// Generate visual nodes on the slider track\nconst generateInstanceNodes = (axis, instances) => {\n  if (!instances.length) return '';\n  \n  // Safety checks for axis values\n  if (!axis || typeof axis.maxValue !== 'number' || typeof axis.minValue !== 'number') {\n    console.warn('Invalid axis values for node generation:', axis);\n    return '';\n  }\n  \n  const range = axis.maxValue - axis.minValue;\n  \n  // Avoid division by zero\n  if (range === 0) {\n    console.warn('Axis range is zero, cannot generate nodes');\n    return '';\n  }\n  \n  console.log(`Generating ${instances.length} nodes for axis ${axis.tag}`);\n  \n  return instances.map(instance => {\n    // Safety check for instance value\n    if (typeof instance.value !== 'number') {\n      console.warn('Invalid instance value:', instance);\n      return '';\n    }\n    \n    const position = ((instance.value - axis.minValue) / range) * 100;\n    \n    // Additional safety check for calculated position\n    if (isNaN(position)) {\n      console.warn('Calculated NaN position for instance:', instance, 'axis:', axis);\n      return '';\n    }\n    \n    // Adjust position to account for thumb width (thumb is typically 16px, so we inset by ~8px on each side)\n    // This assumes a slider width of ~200px, so we adjust by about 4% on each side\n    const thumbOffset = 4; // percentage\n    const adjustedPosition = thumbOffset + (position * (100 - (2 * thumbOffset)) / 100);\n    \n    return `\n      <div class=\"slider-node\" \n           style=\"left: calc(${adjustedPosition}% - 3px)\" \n           title=\"${instance.name}: ${instance.value}\"\n           data-value=\"${instance.value}\"\n           onclick=\"snapToInstanceValue('${axis.tag}', ${instance.value})\">\n      </div>\n    `;\n  }).join('');\n};\n\n// Generate dropdown for manual instance selection\nconst generateInstanceDropdown = (itemID, axisTag, instances) => {\n  if (!instances.length) return '';\n  \n  const dropdownId = `${itemID}-${axisTag}-instances`;\n  \n  const options = instances.map(instance => \n    `<option value=\"${instance.value}\" data-coordinates='${JSON.stringify(instance.coordinates)}'>${instance.name} (${instance.value})</option>`\n  ).join('');\n  \n  return `\n    <div class=\"instance-dropdown-container\">\n      <label for=\"${dropdownId}\" class=\"text-small\">Named Instances:</label>\n      <select id=\"${dropdownId}\" class=\"instance-dropdown\" \n              onchange=\"applyNamedInstance('${itemID}', '${axisTag}', this)\">\n        <option value=\"\">Select Instance...</option>\n        ${options}\n      </select>\n    </div>\n  `;\n};\n\nexport const generateFontButton = async (font, mode = 'local') => {\n\tlet fontName, fontPath, fontType, displayName, isVariable, isSupported = true;\n  \n\tif (mode === 'local') {\n\t  fontName = font.replace('.', '-');\n\t  fontPath = `fonts/${font}`;\n\t  displayName = font.replace('-', ' ').replace(/\\.[^/.]+$/, \"\");\n\t  fontType = font.split('.').pop().toUpperCase();\n\t  \n\t  // Check if font type is supported\n\t  isSupported = !['WOFF2'].includes(fontType);\n\t  \n\t  if (isSupported) {\n\t\tisVariable = await isVariableFont(fontPath);\n\t  } else {\n\t\tisVariable = false;\n\t  }\n\t} else { // server mode\n\t  fontName = font.name.replace('.', '-');\n\t  fontPath = URL.createObjectURL(font);\n\t  displayName = font.name.replace('-', ' ').replace(/\\.[^/.]+$/, \"\");\n\t  fontType = font.name.split('.').pop().toUpperCase();\n\t  \n\t  // Check if font type is supported\n\t  isSupported = !['WOFF2'].includes(fontType);\n\t  \n\t  if (isSupported) {\n\t\tisVariable = await isVariableFont(font);\n\t  } else {\n\t\tisVariable = false;\n\t  }\n\t}\n  \n\tif (isVariable) {\n\t  fontType = 'VF';\n\t}\n  \n\tconst button = document.createElement('div');\n\tbutton.className = 'btn__setfont chip btn d-flex justify-content-between';\n\tbutton.title = mode === 'local' ? font : font.name;\n\tbutton.id = `btn__setfont-${fontName}`;\n\t\n\t// Add strike-through styling for unsupported font types\n\tconst fontTypeDisplay = isSupported ? fontType : `<span style=\"text-decoration: line-through;\">${fontType}</span>`;\n\tbutton.innerHTML = `${displayName}<span class=\"d-flex-grow text-small text-right\">${fontTypeDisplay}</span>`;\n\t\n\t// Modified onclick handler to support shift-click for secondary font\n\tbutton.onclick = (e) => {\n\t  // Check if shift key is pressed\n\t  if (e.shiftKey) {\n\t\t// If shift is pressed, handle as secondary font\n\t\tconst isAlreadySecondary = button.classList.contains('secondary');\n\t\t\n\t\tif (isAlreadySecondary) {\n\t\t  // If clicking the same secondary font button, clear secondary font\n\t\t  clearSecondaryFont();\n\t\t  return;\n\t\t}\n\t\t\n\t\tdocument.querySelectorAll('.btn__setfont').forEach(btn => {\n\t\t  btn.classList.remove('secondary'); // Remove secondary from all buttons\n\t\t});\n\t\tbutton.classList.add('secondary'); // Add secondary to this button\n\t\t\n\t\t// Store and apply the secondary font\n\t\tlocalStorage.setItem('secondaryFontPath', fontPath);\n\t\tlocalStorage.setItem('secondaryFontName', fontName);\n\t\tapplySecondaryFont(fontPath, fontName);\n\t\t\n\t\t// Don't remove the active class from the primary font\n\t\treturn;\n\t  }\n\t  \n\t  // Regular click (primary font) - original behavior\n\t  document.querySelectorAll('.btn__setfont').forEach(btn => {\n\t\tbtn.classList.remove('active');\n\t\tbtn.classList.remove('visited');\n\t\t// Keep secondary font selection if exists\n\t\tif (!btn.classList.contains('secondary')) {\n\t\t  btn.classList.remove('secondary');\n\t\t}\n\t  });\n\t  \n\t  // Add active class to clicked button\n\t  button.classList.add('active');\n\t  button.classList.add('visited');\n\t  \n\t  // Apply as primary font\n\t  setFont(fontPath, fontName);\n\t};\n  \n\treturn button;\n  };\n  \nconst isVariableFont = async (font) => {\n\ttry {\n\t  let arrayBuffer;\n\t  if (typeof font === 'string') {\n\t\t// Local mode: font is a path\n\t\tconst response = await fetch(font);\n\t\tarrayBuffer = await response.arrayBuffer();\n\t  } else {\n\t\t// Server mode: font is a File object\n\t\tarrayBuffer = await font.arrayBuffer();\n\t  }\n\t  \n\t  const parsedFont = opentype.parse(arrayBuffer);\n\t  return parsedFont.tables.fvar !== undefined;\n\t} catch (error) {\n\t  console.error('Error checking if font is variable:', error);\n\t  return false;\n\t}\n  };\n  \nconst generateFontFaces = (fonts) => {\n\treturn fonts.map(font => {\n\t  const fontName = font.replace('.', '-');\n\t  return `@font-face { font-family: \"${fontName}\"; src: url(\"fonts/${font}\");}`;\n\t}).join('\\n');\n  };\n\nwindow.updateColumns = (itemID) => {\n\tconst columnCount = document.getElementById(`${itemID}-column-count`).value;\n\tconst columnGap = document.getElementById(`${itemID}-column-gap`).value;\n\t\n\tpassStyleValue(itemID, 'column-count', columnCount);\n\tpassStyleValue(itemID, 'column-gap', columnGap);\n  };\n\nconst generateStyleButtons = (itemID) => `\n  <div id=\"btn__wrapper-case\">\n    <label>Case</label>\n    <div class=\"d-flex g-1 btn__wrapper\">\n      <button class=\"btn btn-link textTransform-uppercase\" title=\"Uppercase\" onclick=\"passStyleValue('${itemID}','textTransform', 'uppercase')\">TT</button>\n      <button class=\"btn btn-link textTransform-capitalize\" title=\"Capitalize\" onclick=\"passStyleValue('${itemID}','textTransform', 'capitalize')\">Tt</button>\n      <button class=\"btn btn-link textTransform-lowercase\" title=\"Lowercase\" onclick=\"passStyleValue('${itemID}','textTransform', 'lowercase')\">tt</button>\n    </div>\n  </div>\n  <div id=\"btn__wrapper-columns\">\n    <label>Columns</label>\n    <div class=\"d-flex g-1 btn__wrapper\">\n\t<span class=\"text-small\">Count</span>\n      <input class=\"input\" type=\"number\" id=\"${itemID}-column-count\" min=\"1\" max=\"6\" value=\"1\" onchange=\"updateColumns('${itemID}')\" style=\"width: 50px;\">\n\t<span class=\"text-small\">Gap</span>\n      <input class=\"input\" type=\"text\" id=\"${itemID}-column-gap\" value=\"10px\" onchange=\"updateColumns('${itemID}')\" style=\"width: 50px;\">\n    </div>\n  </div>\n`;\n\nconst getFeatureDescription = (font, tag, proof) => {\n    if (tag.startsWith('ss')) {\n        const ssNum = parseInt(tag.slice(2), 10);\n        if (ssNum >= 1 && ssNum <= 20) {\n            const nameID = 256 + (ssNum - 1);\n            const ssName = font?.names?.[nameID]?.en;\n            if (ssName) {\n                return ssName;\n            }\n            return `Stylistic Set ${ssNum}`;\n        }\n    }\n    return proof[\"Features\"]?.[tag]?.[\"abstract\"] || tag;\n};\n\nconst generateFeatureCheckboxes = (itemID, proof, taglist) => {\n    const uniqueTags = [...new Set(taglist)];\n    return `\n      <label>Features</label>  \n      <div class=\"btn__wrapper d-flex flex-wrap g-0\">\n        ${uniqueTags.map(tag => {\n          const featureDescription = getFeatureDescription(font, tag, proof);\n          const definition = proof[\"Features\"]?.[tag]?.[\"definition\"] || '';\n          \n          return `\n            <div title=\"${definition}\" class=\"chip d-flex align-items-center justify-content-between d-flex-grow\" onclick=\"document.getElementById('${itemID}-checkbox-${tag}').click()\">\n              <input id=\"${itemID}-checkbox-${tag}\" type=\"checkbox\" onclick=\"passfeatValue('${itemID}', '${tag}', '${uniqueTags.join(',')}')\">\n              <span class=\"d-flex-grow\">${featureDescription}</span>\n              <span class=\"tag-label text-small\">${tag}</span>\n            </div>\n          `;\n        }).join('')}\n      </div>\n    `;\n};\n  \nconst generateProofContent = (stage, title, proof, testAreaID, fvarStyle, textClass) => {\n    if (!proof || !proof[stage] || !proof[stage][title]) {\n      console.warn('Missing proof data:', { stage, title });\n      return '';\n    }\n\n    let content = proof[stage][title];\n    if (stage === \"Features\") {\n      content = proof[stage][title].sample || '';\n    }\n\n    const savedContent = getStoredContent(testAreaID, content) || '';\n    const savedTitle = getStoredContent(`${testAreaID}-title`, title) || '';\n    const fontSize = whichFontSize(savedContent);\n  \n    const lineHeight = getItemLineHeight(testAreaID);\n    const letterSpacing = localStorage.getItem(`${testAreaID}-letterSpacing`) || '0em';\n    const columnCount = localStorage.getItem(`${testAreaID}-column-count`) || '1';\n    const columnGap = localStorage.getItem(`${testAreaID}-column-gap`) || '1em';\n  \n    const inlineStyle = `\n      font-size: ${fontSize}pt;\n      line-height: ${lineHeight};\n      letter-spacing: ${letterSpacing};\n      column-count: ${columnCount};\n      column-gap: ${columnGap};\n    `;\n    const html = `\n      <div class=\"d-flex justify-content-between\">\n        <h6 class=\"h6\" contentEditable=\"true\" \n            id=\"${testAreaID}-title\"\n            onkeyup=\"saveEditableContent('${testAreaID}-title')\">${savedTitle}</h6>\n      </div>\n      <div class=\"testarea-container\">\n        <div id=\"${testAreaID}\" \n             style=\"${inlineStyle} ${fvarStyle}\" \n             class=\"t__importedfontfamily testarea\" \n             contenteditable=\"true\" \n             spellcheck=\"false\" \n             onkeyup=\"saveEditableContent('${testAreaID}')\">\n          ${savedContent}\n        </div>\n      </div>\n    `;\n  \n    return html;\n  };\n  \nconst formatStyleValue = (property, value) => {\n    switch (property) {\n      case 'font-size':\n        return value;\n      case 'line-height':\n        return value;\n      case 'letter-spacing':\n        return value.replace('em', '');\n      default:\n        return value;\n    }\n  };\n  \nconst updateInlineText = (itemID, property, value) => {\n\tconst container = document.querySelector(`#${itemID} .testarea-values`);\n\tif (!container) return;\n\n\tconst fontSizeSlider = document.querySelector(`#${itemID}-fontSize`);\n\tconst lineHeightSlider = document.querySelector(`#${itemID}-lineHeight`);\n\tconst letterSpacingSlider = document.querySelector(`#${itemID}-letterSpacing`);\n\n\tconst currentStyles = {\n\t\t'font-size': `${fontSizeSlider?.value || '14'}pt`,\n\t\t'line-height': lineHeightSlider?.value || '1.0',\n\t\t'letter-spacing': `${letterSpacingSlider?.value || '0'}em`\n\t};\n\n\tconst inlineStyle = Object.entries(currentStyles)\n\t\t.map(([prop, val]) => `${prop}: ${val}`)\n\t\t.join('; ');\n\n\tcontainer.innerHTML = generateTestAreaValues(inlineStyle);\n  };\n\nexport const insertField = (aboveHere) => {\n  const original = document.getElementById(aboveHere);\n  const clone = original.cloneNode(true);\n  \n  // Create a unique ID for the new proof window\n  const timestamp = Date.now();\n  const newId = `custom-item-${timestamp}`;\n  const originalId = original.id;\n  clone.id = newId;\n  \n  // Update all element IDs\n  clone.querySelectorAll('[id]').forEach(el => {\n    el.id = `${el.id}-clone-${timestamp}`;\n  });\n  \n  // Update all event handlers that reference the original ID\n  clone.querySelectorAll('[oninput]').forEach(el => {\n    // Replace the original itemID with the new one in all event handlers\n    const updatedHandler = el.getAttribute('oninput').replace(\n      new RegExp(`'${originalId}'`, 'g'), \n      `'${newId}'`\n    );\n    el.setAttribute('oninput', updatedHandler);\n  });\n  \n  // Also update onclick attributes that may reference the original ID\n  clone.querySelectorAll('[onclick]').forEach(el => {\n    const updatedHandler = el.getAttribute('onclick').replace(\n      new RegExp(`'${originalId}'`, 'g'), \n      `'${newId}'`\n    );\n    el.setAttribute('onclick', updatedHandler);\n  });\n  \n  // Reset input values\n  clone.querySelectorAll('input').forEach(input => {\n    if (input.type === 'range') {\n      // Don't reset slider values - they'll be handled by the style system\n    } else {\n      input.value = '';\n    }\n  });\n  \n  // Change the content to something new\n  const testarea = clone.querySelector('.testarea');\n  if (testarea) {\n    testarea.innerHTML = \"This is a new custom proof window. Type your text here.\";\n    \n    // Save the content to localStorage\n    saveEditableContent(testarea.id);\n  }\n  \n  // Change the title\n  const title = clone.querySelector('[id$=\"-title\"]');\n  if (title) {\n    title.innerHTML = \"Custom Proof Window\";\n    \n    // Save the title to localStorage\n    saveEditableContent(title.id);\n  }\n  \n  original.parentNode.insertBefore(clone, original);\n  \n  // Animate the insertion\n  clone.style.height = '0px';\n  clone.style.overflow = 'hidden';\n  clone.style.transition = 'height 0.6s ease';\n  \n  setTimeout(() => {\n    clone.style.height = `${clone.scrollHeight}px`;\n  }, 0);\n  \n  setTimeout(() => {\n    clone.style.height = 'auto';\n    clone.style.overflow = 'visible';\n    \n    // Save custom proof window to localStorage\n    saveCustomProofWindow(newId, getCurrentStage());\n  }, 600);\n};\n\nconst getCurrentStage = () => {\n  return localStorage.getItem('proofingPhase') || 'Hamburgers';\n};\n\nexport const passStyleValue = (itemID, property, value) => {\n\tconst elementIdSuffix = `-${property}-val`;\n\tconst element = document.querySelector(`[id$=\"${itemID}${elementIdSuffix}\"]`);\n\t\n    if (['fontSize', 'lineHeight', 'letterSpacing', 'column-count', 'column-gap'].includes(property)) {\n        localStorage.setItem(`${itemID}-${property}`, value);\n        \n        let displayValue = value;\n        if (property === 'fontSize') displayValue += 'pt';\n        if (property === 'letterSpacing') displayValue += 'em';\n        if (element) element.textContent = displayValue;\n\n        const slider = document.querySelector(`#${itemID}-${property}`);\n        if (slider) {\n            slider.classList.add('modified');\n        }\n    }\n\n    const testarea = document.querySelector(`#${itemID} .testarea`);\n    if (testarea) {\n        let styleValue = value;\n        if (property === 'fontSize') styleValue += 'pt';\n        if (property === 'letterSpacing') styleValue += 'em';\n        testarea.style[property] = styleValue;\n    }\n\n    updateInlineText(itemID, property, value);\n  };\n  \nexport const passfvarValue = (itemID, property, value, fvarSupport) => {\n    const element = document.getElementById(`${itemID}-${property}-val`);\n    if (element) {\n        element.textContent = value;\n    } else {\n        console.warn(`Element with ID ${itemID}-${property}-val not found.`);\n    }\n\n    saveData(`${itemID}-${property}-val`, value);\n\n    const fvarSupportArray = fvarSupport.split(',');\n    let fvarcss = fvarSupportArray.map(tag => {\n        const tagValue = tag === property ? value : document.getElementById(`${itemID}-${tag}`)?.value;\n        return `'${tag}' ${tagValue}`;\n    }).join(', ');\n\n    const testarea = document.querySelector(`#${itemID} .testarea`);\n    if (testarea) {\n        testarea.style.fontVariationSettings = fvarcss;\n    } else {\n        console.warn(`Test area with ID ${itemID} not found.`);\n    }\n\n    updateInlineText(itemID, 'fvar', fvarcss);\n};\n  \nexport const passfeatValue = (itemID, feature, featureSupport) => {\n\tconst featSupport = featureSupport.split(',');\n\tlet featcss = \"\";\n  \n\tfor (let f = 0; f < featSupport.length; f++) {\n\t  if (document.getElementById(`${itemID}-checkbox-${featSupport[f]}`).checked) {\n\t\tfeatcss += `'${featSupport[f]}',`;\n\t  }\n\t}\n\tfeatcss = featcss.replace(/,\\s*$/, \"\");\n\tdocument.querySelector(`#${itemID} .testarea`).style.fontFeatureSettings = featcss;\n  };\n\n// Apply a master named instance to all axes\nexport const applyMasterInstance = (itemID, selectElement) => {\n  const selectedOption = selectElement.options[selectElement.selectedIndex];\n  if (!selectedOption || !selectedOption.value) return;\n  \n  try {\n    const coordinates = JSON.parse(selectedOption.value);\n    \n    // Update all axis sliders with the instance coordinates\n    Object.entries(coordinates).forEach(([tag, value]) => {\n      const slider = document.getElementById(`${itemID}-${tag}`);\n      const valueDisplay = document.getElementById(`${itemID}-${tag}-val`);\n      \n      if (slider) {\n        slider.value = value;\n        // Trigger the input event to update the font variation settings\n        passfvarValue(itemID, tag, value, font.tables.fvar.axes.map(a => a.tag).join(','));\n        \n        // Update visual nodes to show active state\n        updateSliderNodes(slider);\n      }\n      \n      if (valueDisplay) {\n        valueDisplay.textContent = value;\n      }\n    });\n    \n  } catch (error) {\n    console.error('Error applying master named instance:', error);\n  }\n};\n\n// Apply a named instance to all axes (keeping for backward compatibility)\nexport const applyNamedInstance = (itemID, axisTag, selectElement) => {\n  const selectedOption = selectElement.options[selectElement.selectedIndex];\n  if (!selectedOption || !selectedOption.value) return;\n  \n  try {\n    const coordinates = JSON.parse(selectedOption.dataset.coordinates);\n    \n    // Update all axis sliders with the instance coordinates\n    Object.entries(coordinates).forEach(([tag, value]) => {\n      const slider = document.getElementById(`${itemID}-${tag}`);\n      const valueDisplay = document.getElementById(`${itemID}-${tag}-val`);\n      \n      if (slider) {\n        // Update slider position\n        slider.value = value;\n        \n        // Update the visual value display\n        if (valueDisplay) {\n          valueDisplay.textContent = value;\n        }\n        \n        // Update any visual nodes on the slider\n        updateSliderNodes(slider);\n        \n        // Trigger the font variation settings update\n        passfvarValue(itemID, tag, value, font.tables.fvar.axes.map(a => a.tag).join(','));\n      }\n    });\n    \n    // Reset other instance dropdowns to show they're not selected\n    font.tables.fvar.axes.forEach(axis => {\n      if (axis.tag !== axisTag) {\n        const otherDropdown = document.getElementById(`${itemID}-${axis.tag}-instances`);\n        if (otherDropdown) {\n          otherDropdown.value = '';\n        }\n      }\n    });\n    \n  } catch (error) {\n    console.error('Error applying named instance:', error);\n  }\n};\n\n// Handle slider input with magnetic snapping to nodes\nexport const handleSliderInput = (itemID, axisTag, value, fvarSupport) => {\n  const slider = document.getElementById(`${itemID}-${axisTag}`);\n  if (!slider) return;\n  \n  // Update nodes and handle snapping\n  updateSliderNodes(slider);\n  \n  // Use the potentially snapped value from the slider\n  const finalValue = slider.value;\n  \n  // Update font variation settings\n  passfvarValue(itemID, axisTag, finalValue, fvarSupport);\n};\n\n// Update slider visual nodes when hovering or programmatically changing value\nexport const updateSliderNodes = (slider) => {\n  const container = slider.closest('.slider-container');\n  if (!container) return;\n  \n  const nodes = container.querySelectorAll('.slider-node');\n  const currentValue = parseFloat(slider.value);\n  const snapTolerance = (slider.max - slider.min) * 0.03; // 3% snap tolerance\n  const axisTag = slider.dataset.axis; // Get axis tag from data attribute\n  const itemID = slider.id.replace(`-${axisTag}`, ''); // Remove the axis tag to get the item ID\n  let snappedToNode = false;\n  \n  nodes.forEach(node => {\n    const nodeValue = parseFloat(node.dataset.value);\n    const distance = Math.abs(currentValue - nodeValue);\n    \n    if (distance <= snapTolerance) {\n      node.classList.add('active');\n      \n      // Snap to the node value if we're close enough\n      if (!snappedToNode && distance > 0) {\n        slider.value = nodeValue;\n        snappedToNode = true;\n        \n        // Update the font variation settings with the snapped value\n        passfvarValue(itemID, axisTag, nodeValue, font.tables.fvar.axes.map(a => a.tag).join(','));\n      }\n    } else {\n      node.classList.remove('active');\n    }\n  });\n  \n  // Update the value display with final value (snapped or original)\n  const valueDisplay = document.getElementById(`${itemID}-${axisTag}-val`);\n  if (valueDisplay) {\n    valueDisplay.textContent = slider.value;\n  }\n};\n\n// Snap to a specific instance value when clicking on a node\nexport const snapToInstanceValue = (axisTag, value) => {\n  // Find all sliders for this axis (there might be multiple items on the page)\n  const sliders = document.querySelectorAll(`input[data-axis=\"${axisTag}\"]`);\n  \n  sliders.forEach(slider => {\n    const itemID = slider.id.replace(`-${axisTag}`, ''); // Remove the axis tag to get the item ID\n    \n    // Update slider value\n    slider.value = value;\n    \n    // Update visual feedback\n    updateSliderNodes(slider);\n    \n    // Update font variation settings\n    passfvarValue(itemID, axisTag, value, font.tables.fvar.axes.map(a => a.tag).join(','));\n    \n    // Check if this value matches any named instance and update dropdown accordingly\n    const dropdown = document.getElementById(`${itemID}-${axisTag}-instances`);\n    if (dropdown) {\n      // Find the option that matches this value\n      const matchingOption = Array.from(dropdown.options).find(option => \n        parseFloat(option.value) === value\n      );\n      if (matchingOption) {\n        dropdown.value = value;\n      } else {\n        dropdown.value = ''; // Reset if no exact match\n      }\n    }\n  });\n};\n  \nconst updateActiveButton = (property, value) => {\n\tdocument.querySelectorAll(`.btn.${property}-${value}`).forEach(btn => {\n\t  btn.classList.add('active');\n\t  \n\t  const wrapper = btn.closest('.btn__wrapper');\n\t  \n\t  if (wrapper) {\n\t\twrapper.querySelectorAll('.btn').forEach(sibling => {\n\t\t  if (sibling !== btn) sibling.classList.remove('active');\n\t\t});\n\t  } else {\n\t\tdocument.querySelectorAll(`.btn[class*=\"${property}-\"]`).forEach(sibling => {\n\t\t  if (sibling !== btn) sibling.classList.remove('active');\n\t\t});\n\t  }\n\t});\n  };\n\nexport const removeStyleValue = (itemID, property) => {\n    localStorage.removeItem(`${itemID}-${property}`);\n    \n    let defaultValue;\n    if (property === 'fontSize') {\n        const testarea = document.querySelector(`#${itemID} .testarea`);\n        const text = testarea?.textContent || '';\n        const ratio = parseFloat(document.getElementById('select__type-scale')?.value || 1.618);\n        const baseSize = parseFloat(document.getElementById('input__base-font-size')?.value || 14);\n        defaultValue = whichFontSize(text, baseSize, ratio);\n    } else if (property === 'lineHeight') {\n        defaultValue = getGlobalLineHeight();\n    } else if (property === 'letterSpacing') {\n        defaultValue = '0';\n    } else {\n        defaultValue = '0';\n    }\n\n    const slider = document.querySelector(`#${itemID}-${property}`);\n    if (slider) {\n        slider.value = defaultValue;\n        slider.classList.remove('modified');\n    }\n\n    const valueDisplay = document.querySelector(`#${itemID}-${property}-val`);\n    if (valueDisplay) {\n        let displayValue = defaultValue;\n        if (property === 'fontSize') displayValue += 'pt';\n        if (property === 'letterSpacing') displayValue += 'em';\n        valueDisplay.textContent = displayValue;\n    }\n\n    const testarea = document.querySelector(`#${itemID} .testarea`);\n    if (testarea) {\n        let styleValue = defaultValue;\n        if (property === 'fontSize') styleValue += 'pt';\n        if (property === 'letterSpacing') styleValue += 'em';\n        testarea.style[property] = styleValue;\n    }\n\n    updateInlineText(itemID, property, defaultValue);\n\n};\n\nwindow.removeStyleValue = removeStyleValue;\n\nexport const generateStageButtons = (proof, currentStage) => {\n  const hiddenTabs = JSON.parse(localStorage.getItem('hiddenTabs') || '[]');\n  const visibleStages = Object.keys(proof).filter(stage => !hiddenTabs.includes(stage));\n  \n  if (visibleStages.length === 0 && Object.keys(proof).length > 0) {\n    const defaultTab = 'Hamburgers' in proof ? 'Hamburgers' : Object.keys(proof)[0];\n    visibleStages.push(defaultTab);\n    const updatedHiddenTabs = hiddenTabs.filter(tab => tab !== defaultTab);\n    localStorage.setItem('hiddenTabs', JSON.stringify(updatedHiddenTabs));\n  }\n  \n  return visibleStages.map(stage => {\n    const isActive = stage === currentStage ? 'active' : '';\n    return `\n      <div class=\"tab-item ${isActive} tab__setstage\" onclick=\"setStage('${stage}')\">\n      <a href=\"#\" class=\"stage-button d-flex justify-content-between g-2\">\n        <span class=\"stage-name\">\n        ${stage}\n        </span>\n        <span class=\"t__right tab-remove material-symbols-outlined remove\" \n          onclick=\"event.stopPropagation(); removeTab('${stage}')\">\n        clear\n        </span>\n      </a>\n      </div>\n    `;\n  }).join('');\n};\n\nexport const removeTab = (stageName) => {\n  const hiddenTabs = JSON.parse(localStorage.getItem('hiddenTabs') || '[]');\n  \n  if (!hiddenTabs.includes(stageName)) {\n    hiddenTabs.push(stageName);\n    localStorage.setItem('hiddenTabs', JSON.stringify(hiddenTabs));\n  }\n  \n  const currentStage = localStorage.getItem('proofingPhase');\n  if (currentStage === stageName) {\n    fetch(CONFIG.jsonPath)\n      .then(response => response.json())\n      .then(proof => {\n        const allTabs = Object.keys(proof);\n        const visibleTabs = allTabs.filter(tab => !hiddenTabs.includes(tab));\n        \n        if (visibleTabs.length > 0) {\n          setStage(visibleTabs[0]);\n        } else {\n          const defaultTab = 'Hamburgers' in proof ? 'Hamburgers' : allTabs[0];\n          hiddenTabs.splice(hiddenTabs.indexOf(defaultTab), 1);\n          localStorage.setItem('hiddenTabs', JSON.stringify(hiddenTabs));\n          setStage(defaultTab);\n        }\n      });\n  } else {\n    fetch(CONFIG.jsonPath)\n      .then(response => response.json())\n      .then(proof => {\n        const stageButtons = document.getElementById('section__header-stage-buttons');\n        stageButtons.innerHTML = generateStageButtons(proof, currentStage);\n      });\n  }\n};\n\nwindow.removeTab = removeTab;\n\nexport const restoreAllTabs = () => {\n  localStorage.removeItem('hiddenTabs');\n  \n  const currentStage = localStorage.getItem('proofingPhase') || 'Hamburgers';\n  setStage(currentStage);\n};\n\nconst originalLocalStorageClear = window.localStorageClear;\nwindow.localStorageClear = () => {\n  originalLocalStorageClear();\n  localStorage.removeItem('hiddenTabs');\n};\n\nexport const localLoad = () => {\n\tconst fileButtonParent = document.getElementById('section__header-file-buttons');\n\t\n\tfetch('../src/txt/fonts.txt')\n\t  .then(response => response.text())\n\t  .then(data => {\n\t\tconst fonts = data.split('fonts/')\n\t\t  .filter(font => font.trim() !== '')\n\t\t  .map(font => font.trim());\n  \n\t\tconst uniqueFonts = preserveUnique(fonts.sort());\n\t\t\n\t\tif (uniqueFonts.length === 0) {\n\t\t  fileButtonParent.innerHTML = 'Place fonts you want to proof into <code>/fonts</code> to begin';\n\t\t} else {\n\t\t  const navGroup = generateFontNavigation();\n\t\t  fileButtonParent.appendChild(navGroup);\n\t\t  \n\t\t  generateFontButtons(uniqueFonts, 'local')\n\t\t    .then(container => {\n\t\t      fileButtonParent.appendChild(container);\n\t\t      const fontFamilySource = localStorage.getItem('fontFamilySource') || \n\t\t        `fonts/${uniqueFonts[uniqueFonts.length - 1]}`;\n\t\t      const fontFamily = localStorage.getItem('fontFamily') || \n\t\t        fontFamilySource.replace('.', '-');\n\t\t      setFont(fontFamilySource, fontFamily);\n\t\t    });\n\t\t}\n\t  })\n\t  .catch(error => {\n\t\tconsole.error('Error loading fonts:', error);\n\t\tfileButtonParent.innerHTML = 'Place fonts you want to proof into <code>/fonts</code> to begin';\n\t  });\n  };\n  \nexport const serverLoad = () => {\n\tconst fileButtonParent = document.getElementById('section__header-file-buttons');\n\t\n\tsetFont('fonts/gooper-VF.ttf', 'gooper-VF-ttf');\n\tdocument.getElementById('style__fontface').innerHTML = '@font-face { font-family: \"gooper-VF-ttf\"; src: url(\"fonts/gooper-VF.ttf\");}';\n  \n\tconst dragDropHtml = `\n\t  <div id=\"drag-drop-area\" class=\"drag-drop-area\">\n\t\t<p>Drag & drop font files here or </p>\n\t\t<label for=\"fontInput\" class=\"file-input-label\">Choose Files</label>\n\t\t<input id=\"fontInput\" type=\"file\" class=\"file-input\" multiple accept=\".ttf,.otf,.woff,.woff2\" />\n    <p class=\"\">.woff2 variable fonts are not currently supported</p>\n\t  </div>\n\t`;\n\n\tfileButtonParent.innerHTML = dragDropHtml;\n  \n\tconst dragDropArea = document.getElementById('drag-drop-area');\n\tconst fileInput = document.getElementById('fontInput');\n  \n\t['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {\n\t  dragDropArea.addEventListener(eventName, preventDefaults, false);\n\t  document.body.addEventListener(eventName, preventDefaults, false);\n\t});\n  \n\t['dragenter', 'dragover'].forEach(eventName => {\n\t  dragDropArea.addEventListener(eventName, highlight, false);\n\t});\n  \n\t['dragleave', 'drop'].forEach(eventName => {\n\t  dragDropArea.addEventListener(eventName, unhighlight, false);\n\t});\n  \n\tdragDropArea.addEventListener('drop', handleDrop, false);\n  \n\tfileInput.addEventListener('change', handleFiles, false);\n  };\n  \nfunction preventDefaults(e) {\n\te.preventDefault();\n\te.stopPropagation();\n  }\n  \nfunction highlight(e) {\n\tdocument.getElementById('drag-drop-area').classList.add('highlight');\n  }\n  \nfunction unhighlight(e) {\n\tdocument.getElementById('drag-drop-area').classList.remove('highlight');\n  }\n  \nfunction handleDrop(e) {\n\tconst dt = e.dataTransfer;\n\tconst files = dt.files;\n\thandleFiles(files);\n  }\n  \nfunction handleFiles(filesOrEvent) {\n\tlet files;\n\tif (filesOrEvent instanceof Event) {\n\t  files = filesOrEvent.target.files;\n\t} else {\n\t  files = filesOrEvent;\n\t}\n  \n\tfiles = Array.from(files);\n\t\n\tconst uploadPromises = files.map(file => uploadFile(file));\n  \n\tPromise.all(uploadPromises).then(() => {\n\t  setTimeout(() => {\n\t\tconst firstButton = document.querySelector('.btn__setfont');\n\t\tif (firstButton) {\n\t\t  firstButton.click();\n\t\t}\n\t  }, 100);\n\t});\n  }\n  \nfunction uploadFile(file) {\n\treturn new Promise((resolve) => {\n\t  onReadFile({ target: { files: [file] } });\n\t  setTimeout(resolve, 50);\n\t});\n  }\n  \nfunction previewFile(file) {\n\tconst reader = new FileReader();\n\treader.readAsDataURL(file);\n\treader.onloadend = function() {\n\t  const img = document.createElement('img');\n\t  img.src = reader.result;\n\t  document.getElementById('drag-drop-area').appendChild(img);\n\t}\n  }\n  \nexport const setupEventListeners = () => {\n\tconst fileButtons = document.getElementById('section__header-file-buttons');\n\tconst stageButtons = document.getElementById('section__header-stage-buttons');\n\tconst toolsToggle = document.getElementById('btn__view-tools-toggle');\n\tconst modeToggle = document.getElementById('btn__mode-toggle');\n\tconst localStorageClearButton = document.getElementById('btn__reset-local-storage');\n\tconst settingsToggle = document.getElementById('btn__settings-toggle');\n\tconst addNameAndVersionCheckbox = document.getElementById('checkbox__add-name-and-version');\n\tconst lockProofDimensionsCheckbox = document.getElementById('checkbox__lock-proof-dimensions');\n\tif (fileButtons) {\n\t  fileButtons.addEventListener('click', handleFileButtonClick);\n\t}\n\tif (stageButtons) {\n\t  stageButtons.addEventListener('click', handleStageButtonClick);\n\t}\n\tif (toolsToggle) {\n\t  toolsToggle.addEventListener('click', toggleToolsVisibility);\n\t}\n\tif (modeToggle) {\n\t\tmodeToggle.addEventListener('click', toggleMode);\n\t}\n\tif (localStorageClearButton) {\n\t\tlocalStorageClearButton.addEventListener('click', localStorageClear);\n\t}\n\tif (settingsToggle) {\n\t\tsettingsToggle.addEventListener('click', toggleSettingsVisibility);\n\t}\n\tif (addNameAndVersionCheckbox) {\n\t\tconst savedState = localStorage.getItem('showNameAndVersion') === 'true';\n\t\taddNameAndVersionCheckbox.checked = savedState;\n\t\tdocument.body.classList.toggle('show-font-details', savedState);\n\t\t\n\t\taddNameAndVersionCheckbox.addEventListener('change', toggleNameAndVersion);\n\t}\n\tif (lockProofDimensionsCheckbox) {\n\t\tconst savedState = localStorage.getItem('lockProofDimensions') === 'true';\n\t\tlockProofDimensionsCheckbox.checked = savedState;\n\t\t\n\t\tapplyLockProofDimensions(savedState);\n\t\t\n\t\tlockProofDimensionsCheckbox.addEventListener('change', toggleLockProofDimensions);\n\t}\n\tsetupPasteHandling();\n\n\tconst aspectRatioSelect = document.getElementById('select__aspect-ratio');\n\tif (aspectRatioSelect) {\n\t\tconst proofs = document.querySelectorAll('.item__proof');\n\t\tproofs.forEach(proof => proof.classList.add('ratio-letter'));\n\n\t\taspectRatioSelect.addEventListener('change', (e) => {\n\t\t\tconst ratio = e.target.value;\n\t\t\tconst proofs = document.querySelectorAll('.item__proof');\n\t\t\t\n\t\t\tproofs.forEach(proof => {\n\t\t\t\tproof.classList.remove('ratio-letter', 'ratio-a4');\n\t\t\t\tproof.classList.add(ratio === '8.5:11' ? 'ratio-letter' : 'ratio-a4');\n\t\t\t});\n\n\t\t\tlocalStorage.setItem('preferred-ratio', ratio);\n\t\t});\n\n\t\tconst savedRatio = localStorage.getItem('preferred-ratio');\n\t\tif (savedRatio) {\n\t\t\taspectRatioSelect.value = savedRatio;\n\t\t\taspectRatioSelect.dispatchEvent(new Event('change'));\n\t\t}\n\t}\n\n\tconst baseFontInput = document.getElementById('input__base-font-size');\n\tif (baseFontInput) {\n\t\tbaseFontInput.addEventListener('change', (e) => {\n\t\t\tconst baseSize = parseFloat(e.target.value);\n\t\t\tlocalStorage.setItem('base-font-size', baseSize);\n\t\t\tupdateAllTypeScales();\n\t\t});\n\n\t\tconst savedBaseSize = localStorage.getItem('base-font-size') || '14';\n\t\tbaseFontInput.value = savedBaseSize;\n\t}\n\n\tconst lineHeightInput = document.getElementById('input__line-height');\n\tif (lineHeightInput) {\n\t\tlineHeightInput.addEventListener('change', (e) => {\n\t\t\tconst lineHeight = parseFloat(e.target.value);\n\t\t\tlocalStorage.setItem('line-height', lineHeight);\n\t\t\tupdateAllLineHeights();\n\t\t});\n\n\t\tconst savedLineHeight = getGlobalLineHeight();\n\t\tlineHeightInput.value = savedLineHeight;\n\t}\n\n\tconst typeScaleSelect = document.getElementById('select__type-scale');\n\tif (typeScaleSelect) {\n\t\ttypeScaleSelect.addEventListener('change', () => {\n\t\t\tupdateAllTypeScales();\n\t\t});\n\t}\n\n\tinitColorMode();\n\n\tsetupCycleSpeedListener();\n  };\n  \nconst handleFileButtonClick = (event) => {\n\tif (event.target.classList.contains('btn__setfont')) {\n\t  event.target.classList.add('active', 'visited');\n\t  const siblings = Array.from(event.target.parentNode.children).filter(child => child !== event.target);\n\t  siblings.forEach(sibling => sibling.classList.remove('active'));\n\t}\n  };\n  \nconst handleStageButtonClick = (event) => {\n\tif (event.target.classList.contains('btn__setstage')) {\n\t  event.target.classList.add('active');\n\t  const siblings = Array.from(event.target.parentNode.children).filter(child => child !== event.target);\n\t  siblings.forEach(sibling => sibling.classList.remove('active'));\n\t}\n  };\n  \nconst toggleToolsVisibility = () => {\n\tdocument.body.classList.toggle('tools-visible');\n  };\n\nconst setupPasteHandling = () => {\n  document.addEventListener('paste', (e) => {\n    if (!e.target.classList.contains('testarea')) {\n      return;\n    }\n\n    e.preventDefault();\n\n    const text = (e.clipboardData || window.clipboardData).getData('text/plain');\n\n    const selection = window.getSelection();\n    if (selection.rangeCount) {\n      const range = selection.getRangeAt(0);\n      range.deleteContents();\n      range.insertNode(document.createTextNode(text));\n    } else {\n      e.target.textContent += text;\n    }\n\n    const event = new Event('keyup');\n    e.target.dispatchEvent(event);\n  });\n\n  // Handle keyboard shortcuts for italic formatting\n  document.addEventListener('keydown', (e) => {\n    // Check for Cmd+I (Mac) or Ctrl+I (Windows/Linux)\n    if ((e.metaKey || e.ctrlKey) && e.key === 'i') {\n      const activeElement = document.activeElement;\n      \n      // Only handle if we're in a testarea and have a secondary font selected\n      if (activeElement && activeElement.classList.contains('testarea')) {\n        const secondaryFontName = localStorage.getItem('secondaryFontName');\n        \n        if (secondaryFontName) {\n          e.preventDefault(); // Prevent default italic behavior\n          \n          // Toggle italic using our secondary font system\n          document.execCommand('italic', false, null);\n          \n          // The CSS we added will handle the font substitution and prevent faux italic\n        }\n      }\n    }\n  });\n};\n\nexport const generateFontButtons = async (fonts, mode = 'local') => {\n  const container = document.createElement('div');\n  container.className = 'font-buttons-container';\n\n  const chipsContainer = document.createElement('div');\n  chipsContainer.className = 'font-chips';\n  \n  for (const font of fonts) {\n    const button = await generateFontButton(font, mode);\n    chipsContainer.appendChild(button);\n  }\n\n  return chipsContainer;\n};\n\nexport const generateFontNavigation = () => {\n  const navGroup = document.createElement('div');\n  navGroup.className = 'btn-group d-flex g-1 mb-2 font-nav-group';\n  \n  const prevButton = document.createElement('button');\n  prevButton.className = 'btn d-flex align-items-center justify-content-between d-flex-grow';\n  prevButton.innerHTML = '<span class=\"material-symbols-outlined\">chevron_left</span> Prev';\n  prevButton.onclick = () => navigateFonts('prev');\n  \n  const playButton = document.createElement('button');\n  playButton.className = 'btn font-play-btn d-flex align-items-center justify-content-center';\n  playButton.title = 'Auto-cycle through fonts';\n  playButton.innerHTML = '<span class=\"material-symbols-outlined\">play_arrow</span>';\n  playButton.setAttribute('data-playing', 'false');\n  playButton.onclick = toggleFontAnimation;\n  \n  const nextButton = document.createElement('button');\n  nextButton.className = 'btn d-flex align-items-center justify-content-between d-flex-grow';\n  nextButton.innerHTML = 'Next <span class=\"material-symbols-outlined\">chevron_right</span>';\n  nextButton.onclick = () => navigateFonts('next');\n  \n  navGroup.appendChild(prevButton);\n  navGroup.appendChild(playButton);\n  navGroup.appendChild(nextButton);\n  \n  return navGroup;\n};\n\nconst navigateFonts = (direction) => {\n  const buttons = document.querySelectorAll('.btn__setfont');\n  const activeButton = document.querySelector('.btn__setfont.active');\n  \n  if (!buttons.length) return;\n  \n  let nextIndex = 0;\n  \n  if (activeButton) {\n    const currentIndex = Array.from(buttons).indexOf(activeButton);\n    \n    if (direction === 'next') {\n      nextIndex = (currentIndex + 1) % buttons.length;\n    } else {\n      nextIndex = (currentIndex - 1 + buttons.length) % buttons.length;\n    }\n  }\n  \n  buttons[nextIndex].click();\n};\n\nconst initAspectRatio = () => {\n  const select = document.getElementById('select__aspect-ratio');\n  const proofs = document.querySelectorAll('.item__proof');\n\n  const normalizeRatio = (ratioStr) => {\n    const [width, height] = ratioStr.split(':').map(Number);\n    return width / height;\n  };\n\n  proofs.forEach(proof => {\n    const ratioStr = select.value;\n    const ratio = normalizeRatio(ratioStr);\n    proof.style.aspectRatio = ratio;\n  });\n\n  select.addEventListener('change', (e) => {\n    const ratioStr = e.target.value;\n    const ratio = normalizeRatio(ratioStr);\n    \n    proofs.forEach(proof => {\n      proof.style.aspectRatio = ratio;\n    });\n    \n    localStorage.setItem('preferred-ratio', ratioStr);\n  });\n\n  const savedRatio = localStorage.getItem('preferred-ratio');\n  if (savedRatio) {\n    select.value = savedRatio;\n    select.dispatchEvent(new Event('change'));\n  }\n};\n\nconst initTypeScale = () => {\n    const ratio = parseFloat(document.getElementById('select__type-scale')?.value || 1.618);\n    const baseSize = parseFloat(document.getElementById('input__base-font-size')?.value || 14);\n    \n    document.querySelectorAll('.item').forEach(item => {\n        const itemID = item.id;\n        const testarea = item.querySelector('.testarea');\n        const text = testarea?.textContent || '';\n        \n        const itemLineHeight = getItemLineHeight(itemID);\n        const itemFontSize = getItemFontSize(itemID, text, baseSize, ratio);\n        \n        if (testarea) {\n            testarea.style.fontSize = `${itemFontSize}pt`;\n            testarea.style.lineHeight = itemLineHeight;\n        }\n        \n        const fontSizeSlider = item.querySelector(`#${itemID}-fontSize`);\n        const fontSizeVal = item.querySelector(`#${itemID}-fontSize-val`);\n        if (fontSizeSlider) {\n            fontSizeSlider.value = itemFontSize;\n            if (localStorage.getItem(`${itemID}-fontSize`)) {\n                fontSizeSlider.classList.add('modified');\n            }\n        }\n        if (fontSizeVal) {\n            fontSizeVal.textContent = `${itemFontSize}pt`;\n        }\n    });\n};\n\nconst updateAllTypeScales = () => {\n    const ratio = parseFloat(document.getElementById('select__type-scale')?.value || 1.618);\n    const baseSize = parseFloat(document.getElementById('input__base-font-size')?.value || 14);\n    \n    localStorage.setItem('preferred-scale', ratio);\n    \n    document.querySelectorAll('.item').forEach(item => {\n        const itemID = item.id;\n        const testarea = item.querySelector('.testarea');\n        const text = testarea?.textContent || '';\n        \n        const fontSize = getItemFontSize(itemID, text, baseSize, ratio);\n        const itemLineHeight = getItemLineHeight(itemID);\n        \n        if (testarea) {\n            testarea.style.fontSize = `${fontSize}pt`;\n            testarea.style.lineHeight = itemLineHeight;\n        }\n        \n        const fontSizeSlider = item.querySelector(`#${itemID}-fontSize`);\n        const fontSizeVal = item.querySelector(`#${itemID}-fontSize-val`);\n        if (fontSizeSlider) {\n            fontSizeSlider.value = fontSize;\n            if (localStorage.getItem(`${itemID}-fontSize`)) {\n                fontSizeSlider.classList.add('modified');\n            }\n        }\n        if (fontSizeVal) {\n            fontSizeVal.textContent = `${fontSize}pt`;\n        }\n\n        updateItemLineHeightDisplay(itemID, itemLineHeight);\n    });\n};\n\nconst updateAllLineHeights = () => {\n    const globalLineHeight = getGlobalLineHeight();\n    localStorage.setItem('line-height', globalLineHeight);\n    \n    document.querySelectorAll('.item').forEach(item => {\n        const itemID = item.id;\n        if (!localStorage.getItem(`${itemID}-lineHeight`)) {\n            updateItemLineHeightDisplay(itemID, globalLineHeight);\n        }\n    });\n};\n\nconst applyNameAndVersion = (isChecked) => {\n  const headerNames = document.getElementById('section__header-names');\n  const proofItems = document.querySelectorAll('.item__proof');\n\n  proofItems.forEach(item => {\n    const existingFooter = item.querySelector('.proof-footer');\n    if (existingFooter) {\n      existingFooter.remove();\n    }\n\n    if (isChecked) {\n      const footer = document.createElement('div');\n      footer.className = 'proof-footer';\n      footer.innerHTML = headerNames.innerHTML;\n      item.appendChild(footer);\n    }\n  });\n};\n\nconst toggleNameAndVersion = (event) => {\n  const isChecked = event.target.checked;\n  localStorage.setItem('showNameAndVersion', isChecked);\n  document.body.classList.toggle('show-font-details', isChecked);\n};\n\nconst applyLockProofDimensions = (isChecked) => {\n  document.querySelectorAll('.item__proof').forEach(proof => {\n    if (isChecked) {\n      proof.classList.add('locked-dimensions');\n    } else {\n      proof.classList.remove('locked-dimensions');\n    }\n  });\n};\nconst toggleLockProofDimensions = (event) => {\n  const isChecked = event.target.checked;\n  localStorage.setItem('lockProofDimensions', isChecked);\n  applyLockProofDimensions(isChecked);\n};\n\nconst getItemFontSize = (itemID, text, baseSize, ratio) => {\n    const storedSize = localStorage.getItem(`${itemID}-fontSize`);\n    if (storedSize !== null) {\n        return parseFloat(storedSize);\n    }\n    return whichFontSize(text, baseSize, ratio);\n};\n\nconst getItemLineHeight = (itemID) => {\n    return parseFloat(\n        localStorage.getItem(`${itemID}-lineHeight`) ||\n        getGlobalLineHeight()\n    );\n};\n\nconst getGlobalLineHeight = () => {\n    return parseFloat(\n        document.getElementById('input__line-height')?.value ||\n        localStorage.getItem('line-height') || 1.0\n    );\n};\n\nconst setItemLineHeight = (itemID, value) => {\n    localStorage.setItem(`${itemID}-lineHeight`, value);\n    updateItemLineHeightDisplay(itemID, value);\n};\n\nconst updateItemLineHeightDisplay = (itemID, value) => {\n    const item = document.getElementById(itemID);\n    if (!item) return;\n\n    const testarea = item.querySelector('.testarea');\n    const lineHeightSlider = item.querySelector(`#${itemID}-lineHeight`);\n    const lineHeightVal = item.querySelector(`#${itemID}-lineHeight-val`);\n    const valuesDisplay = item.querySelector('.testarea-values');\n    \n    if (testarea) testarea.style.lineHeight = value;\n    if (lineHeightSlider) lineHeightSlider.value = value;\n    if (lineHeightVal) lineHeightVal.textContent = value;\n    \n    if (valuesDisplay) {\n        const currentStyles = {\n            'font-size': testarea?.style.fontSize || '14pt',\n            'line-height': `${value}`,\n            'letter-spacing': testarea?.style.letterSpacing || '0em'\n        };\n        valuesDisplay.innerHTML = generateTestAreaValues(\n            Object.entries(currentStyles)\n                .map(([prop, val]) => `${prop}: ${val}`)\n                .join('; ')\n        );\n    }\n};\n\nexport const resetCustomValue = (itemID, property) => {\n    localStorage.removeItem(`${itemID}-${property}`);\n    \n    let globalValue;\n    if (property === 'lineHeight') {\n        globalValue = getGlobalLineHeight();\n    } else if (property === 'fontSize') {\n        const testarea = document.querySelector(`#${itemID} .testarea`);\n        const text = testarea?.textContent || '';\n        const ratio = parseFloat(document.getElementById('select__type-scale')?.value || 1.618);\n        const baseSize = parseFloat(document.getElementById('input__base-font-size')?.value || 14);\n        globalValue = whichFontSize(text, baseSize, ratio);\n    }\n        \n    updateItemDisplay(itemID, property, globalValue);\n    \n    const slider = document.querySelector(`#${itemID}-${property}`);\n    if (slider) {\n        slider.classList.remove('modified');\n    }\n};\n\nexport const applySecondaryFont = (fontPath, fontName) => {\n  console.log(`Applying secondary font: ${fontName} from ${fontPath}`);\n  \n  opentype.load(fontPath, (err, loadedFont) => {\n    if (err) {\n      console.error('Error loading secondary font:', err);\n      showErrorMessage(`Error loading secondary font: ${err}`);\n      return;\n    }\n    \n    window.secondaryFont = loadedFont;\n    \n    if ('FontFace' in window) {\n      const secondaryFontFamily = `${fontName}-secondary`;\n      const fontFace = new FontFace(\n        secondaryFontFamily,\n        `url('${fontPath}')`,\n        { format: loadedFont.outlinesFormat === 'truetype' ? 'truetype' : 'opentype' }\n      );\n      \n      fontFace.load().then(() => {\n        document.fonts.add(fontFace);\n        console.log(`Secondary font loaded successfully: ${secondaryFontFamily}`);\n        \n        const fontFaceRule = `\n          @font-face {\n            font-family: '${secondaryFontFamily}';\n            src: url('${fontPath}') format('${loadedFont.outlinesFormat === 'truetype' ? 'truetype' : 'opentype'}');\n          }\n        `;\n        \n        let secondaryStyleElement = document.getElementById('style__secondary-font');\n        if (!secondaryStyleElement) {\n          secondaryStyleElement = document.createElement('style');\n          secondaryStyleElement.id = 'style__secondary-font';\n          document.head.appendChild(secondaryStyleElement);\n        }\n        \n        secondaryStyleElement.textContent = fontFaceRule;\n        \n        secondaryStyleElement.textContent += `\n          .testarea em, \n          .testarea i, \n          .testarea [style*=\"italic\"],\n          .testarea .emphasis,\n          .font-italic {\n            font-family: '${secondaryFontFamily}', var(--font-secondary, sans-serif) !important;\n            font-style: normal !important;\n          }\n        `;\n        \n        const currentStage = localStorage.getItem('proofingPhase') || 'Hamburgers';\n        setStage(currentStage);\n      });\n    }\n  });\n};\n\nexport const clearSecondaryFont = () => {\n  // Remove secondary font styling\n  const secondaryStyleElement = document.getElementById('style__secondary-font');\n  if (secondaryStyleElement) {\n    secondaryStyleElement.remove();\n  }\n  \n  // Clear localStorage\n  localStorage.removeItem('secondaryFontPath');\n  localStorage.removeItem('secondaryFontName');\n  \n  // Remove secondary class from all buttons\n  document.querySelectorAll('.btn__setfont.secondary').forEach(btn => {\n    btn.classList.remove('secondary');\n  });\n  \n  // Clear global reference\n  window.secondaryFont = null;\n  \n  console.log('Secondary font cleared');\n};\n\nlet fontAnimationInterval = null;\n\nconst toggleFontAnimation = (event) => {\n  const playButton = event.currentTarget;\n  const isPlaying = playButton.getAttribute('data-playing') === 'true';\n  \n  if (isPlaying) {\n    stopFontAnimation();\n    playButton.innerHTML = '<span class=\"material-symbols-outlined\">play_arrow</span>';\n    playButton.setAttribute('data-playing', 'false');\n  } else {\n    startFontAnimation();\n    playButton.innerHTML = '<span class=\"material-symbols-outlined\">pause</span>';\n    playButton.setAttribute('data-playing', 'true');\n  }\n};\n\nconst startFontAnimation = () => {\n  stopFontAnimation();\n  \n  const speedInput = document.getElementById('input__cycle-speed');\n  const speed = speedInput ? parseInt(speedInput.value, 10) : 300;\n  \n  const safeSpeed = Math.max(100, speed);\n  \n  fontAnimationInterval = setInterval(() => {\n    navigateFonts('next');\n  }, safeSpeed);\n};\n\nconst stopFontAnimation = () => {\n  if (fontAnimationInterval) {\n    clearInterval(fontAnimationInterval);\n    fontAnimationInterval = null;\n  }\n};\n\nconst setupCycleSpeedListener = () => {\n  const speedInput = document.getElementById('input__cycle-speed');\n  if (!speedInput) return;\n  \n  const savedSpeed = localStorage.getItem('font-cycle-speed');\n  if (savedSpeed) {\n    speedInput.value = savedSpeed;\n  }\n  \n  speedInput.addEventListener('change', () => {\n    localStorage.setItem('font-cycle-speed', speedInput.value);\n    \n    const playButton = document.querySelector('.font-play-btn');\n    if (playButton && playButton.getAttribute('data-playing') === 'true') {\n      startFontAnimation();\n    }\n  });\n};\n\nexport const removeCustomProofWindow = (itemId) => {\n  const customWindows = JSON.parse(localStorage.getItem('customProofWindows') || '{}');\n  const currentStage = getCurrentStage();\n  \n  if (customWindows[currentStage]) {\n    const index = customWindows[currentStage].indexOf(itemId);\n    if (index !== -1) {\n      customWindows[currentStage].splice(index, 1);\n      localStorage.setItem('customProofWindows', JSON.stringify(customWindows));\n    }\n  }\n  \n  const element = document.getElementById(itemId);\n  if (element) {\n    element.remove();\n  }\n};\n\nwindow.removeCustomProofWindow = removeCustomProofWindow;\n\n","import { CONFIG } from './config.js';\nimport * as AppCore from './app-core.js';\nimport { localStorageClear, saveEditableContent, saveInputValue } from './utils.js';\n\n// Global error handlers\nwindow.addEventListener('unhandledrejection', function(event) {\n  console.error('Unhandled promise rejection:', event.reason);\n});\n\nwindow.addEventListener('error', function(event) {\n  console.error('Uncaught error:', event.error);\n});\n\n// Make functions globally available\nwindow.setFont = AppCore.setFont;\nwindow.onReadFile = AppCore.onReadFile;\nwindow.setStage = AppCore.setStage;\nwindow.passStyleValue = AppCore.passStyleValue;\nwindow.passfvarValue = AppCore.passfvarValue;\nwindow.passfeatValue = AppCore.passfeatValue;\nwindow.handleSliderInput = AppCore.handleSliderInput;\nwindow.updateSliderNodes = AppCore.updateSliderNodes;\nwindow.applyNamedInstance = AppCore.applyNamedInstance;\nwindow.applyMasterInstance = AppCore.applyMasterInstance;\nwindow.snapToInstanceValue = AppCore.snapToInstanceValue;\nwindow.insertField = AppCore.insertField;\nwindow.clearSecondaryFont = AppCore.clearSecondaryFont;\nwindow.localStorageClear = localStorageClear;\nwindow.saveEditableContent = saveEditableContent;\nwindow.saveInputValue = saveInputValue;\n\nconst init = (forceServerLoad = false) => {\n\ttry {\n\t  if (forceServerLoad || !['localhost', '127.0.0.1', ''].includes(location.hostname)) {\n\t\tAppCore.serverLoad();\n\t  } else {\n\t\tAppCore.localLoad();\n\t  }\n  \n\t  AppCore.setupEventListeners();\n\t  document.body.classList.add('loaded');\n  \n\t} catch (error) {\n\t  console.error('Error during initialization:', error);\n\t}\n  };\n\ndocument.addEventListener('DOMContentLoaded', () => init(false));"],"names":["CONFIG","showErrorMessage","message","el","document","getElementById","style","display","trim","length","textContent","console","error","localStorageClear","localStorage","clear","setItem","location","reload","toggleMode","body","newMode","getItem","removeAttribute","querySelector","setAttribute","toggleSettingsVisibility","settingsToggle","classList","toggle","whichFontSize","text","baseSize","arguments","undefined","ratio","toString","sizes","Math","round","pow","calculateTypeScale","charCount","saveData","id","value","Storage","content","saveEditableContent","elementId","element","innerText","warn","concat","getStoredContent","defaultContent","e","t","r","Symbol","n","iterator","o","toStringTag","i","c","prototype","Generator","u","Object","create","_regeneratorDefine2","f","p","y","G","v","a","d","bind","l","TypeError","call","done","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","setPrototypeOf","__proto__","displayName","_regenerator","w","m","defineProperty","_invoke","enumerable","configurable","writable","_OverloadYield","k","asyncGeneratorStep","Promise","resolve","then","_asyncToGenerator","apply","_next","_throw","font","onFontLoaded","loadedFont","fontFamilySource","fontFamily","_ref","_regeneratorRuntime","mark","_callee","reject","_document$querySelect","fontFace","fontFaceRule","currentStage","wrap","_context","prev","next","log","window","FontFace","format","outlinesFormat","load","fonts","add","createElement","head","appendChild","ready","displayFontData","includes","hostname","dataset","stage","proofingPhase","setStage","t0","stop","_x","_x2","onReadFile","event","files","target","fileButtonParent","innerHTML","navGroup","generateFontNavigation","generateFontButtons","Array","from","container","firstButton","click","setFont","_ref3","_callee3","fontPath","fontName","_context3","split","pop","opentype","err","_loadedFont$tables","_loadedFont$tables2","_loadedFont$tables$fv","_loadedFont$tables$fv2","_loadedFont$tables$fv3","keys","tables","fvar","axes","instances","map","tag","_x4","_x5","_ref4","_callee4","_document$querySelect2","tablename","styles","nameHtml","postScriptName","version","formattedVersion","modifiedDate","formattedDate","_context4","t1","names","en","fontRevision","modified","Date","toLocaleDateString","abrupt","_x6","article","stageButtons","pendingStage","fetch","response","json","proof","html","generateStageHtml","buttonHtml","generateStageButtons","initTypeScale","lockDimensions","applyLockProofDimensions","_font$tables$gsub","gsubFeatures","gsub","features","taglist","values","filter","feature","_typeof","startsWith","title","textClass","testAreaID","itemID","sliderID","_getStoredStyles","getStoredStyles","fontSize","lineHeight","letterSpacing","fvarStyle","inlineStyle","generateFvarStyle","generateSliders","generateVariableSliders","generateStyleButtons","generateFeatureCheckboxes","generateProofContent","customWindows","JSON","parse","_step","_iterator","_createForOfIteratorHelper","s","customItemId","_getStoredStyles2","savedTitle","savedContent","_document$getElementB","_document$getElementB2","_document$querySelect3","typeScale","parseFloat","getItemFontSize","getItemLineHeight","columnCount","columnGap","axis","storedValue","defaultValue","join","hasCustomLineHeight","hasCustomFontSize","hasCustomLetterSpacing","allInstances","getAllNamedInstances","instanceDropdown","generateMasterInstanceDropdown","axisSliders","axisInstances","getAxisInstances","instanceNodes","generateInstanceNodes","name","minValue","maxValue","instance","_instance$name","coordinates","dropdownId","options","stringify","axisTag","_instance$name2","uniqueInstances","seenValues","Set","forEach","has","push","sort","b","slice","range","position","isNaN","generateFontButton","_ref5","_callee5","mode","fontType","isVariable","isSupported","button","fontTypeDisplay","_args5","_context5","replace","toUpperCase","isVariableFont","sent","URL","createObjectURL","className","onclick","shiftKey","contains","clearSecondaryFont","querySelectorAll","btn","remove","applySecondaryFont","_x7","_ref6","_callee6","arrayBuffer","parsedFont","_context6","_x8","updateColumns","passStyleValue","uniqueTags","_proof$Features2","featureDescription","_proof$Features","ssNum","parseInt","_font$names","nameID","getFeatureDescription","definition","sample","updateInlineText","property","fontSizeSlider","lineHeightSlider","letterSpacingSlider","currentStyles","entries","_ref7","_ref8","_slicedToArray","prop","val","generateTestAreaValues","getCurrentStage","elementIdSuffix","displayValue","slider","testarea","styleValue","passfvarValue","fvarSupport","fvarcss","_document$getElementB3","tagValue","fontVariationSettings","updateSliderNodes","closest","nodes","currentValue","snapTolerance","max","min","snappedToNode","node","nodeValue","distance","abs","valueDisplay","removeStyleValue","removeItem","_document$getElementB4","_document$getElementB5","getGlobalLineHeight","hiddenTabs","visibleStages","defaultTab","updatedHiddenTabs","tab","removeTab","stageName","allTabs","visibleTabs","splice","indexOf","originalLocalStorageClear","localLoad","data","arr","uniqueFonts","preventDefaults","preventDefault","stopPropagation","highlight","unhighlight","handleDrop","handleFiles","dataTransfer","filesOrEvent","Event","uploadPromises","file","setTimeout","uploadFile","all","handleFileButtonClick","parentNode","children","child","sibling","handleStageButtonClick","toggleToolsVisibility","setupPasteHandling","addEventListener","clipboardData","getData","selection","getSelection","rangeCount","getRangeAt","deleteContents","insertNode","createTextNode","dispatchEvent","metaKey","ctrlKey","key","activeElement","execCommand","_ref13","_callee7","chipsContainer","_iterator2","_step2","_font2","_args7","_context7","finish","_x9","prevButton","navigateFonts","playButton","toggleFontAnimation","nextButton","direction","buttons","activeButton","nextIndex","currentIndex","_document$getElementB6","_document$getElementB7","item","itemLineHeight","itemFontSize","fontSizeVal","updateAllTypeScales","_document$getElementB8","_document$getElementB9","updateItemLineHeightDisplay","updateAllLineHeights","globalLineHeight","toggleNameAndVersion","isChecked","checked","toggleLockProofDimensions","storedSize","_document$getElementB10","lineHeightVal","valuesDisplay","_ref14","_ref15","secondaryFont","secondaryFontFamily","secondaryStyleElement","fontAnimationInterval","currentTarget","getAttribute","stopFontAnimation","startFontAnimation","speedInput","speed","safeSpeed","setInterval","clearInterval","setupCycleSpeedListener","savedSpeed","removeCustomProofWindow","itemId","index","reason","AppCore","passfeatValue","featureSupport","featSupport","featcss","fontFeatureSettings","handleSliderInput","finalValue","applyNamedInstance","selectElement","selectedOption","selectedIndex","_ref11","_ref12","otherDropdown","applyMasterInstance","_ref9","_ref10","snapToInstanceValue","dropdown","matchingOption","find","option","insertField","aboveHere","original","clone","cloneNode","timestamp","now","newId","originalId","updatedHandler","RegExp","input","type","insertBefore","height","overflow","transition","scrollHeight","saveInputValue","init","forceServerLoad","dragDropArea","fileInput","eventName","fileButtons","toolsToggle","modeToggle","localStorageClearButton","addNameAndVersionCheckbox","lockProofDimensionsCheckbox","savedState","aspectRatioSelect","savedRatio","baseFontInput","savedBaseSize","lineHeightInput","savedLineHeight","savedMode","typeScaleSelect"],"sourceRoot":""}