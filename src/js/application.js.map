{"version":3,"file":"application.js","mappings":"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","sources":["webpack://idiotproof/./src/js/utils.js","webpack://idiotproof/./src/js/config.js","webpack://idiotproof/./src/js/app-core.js","webpack://idiotproof/./src/js/index.js"],"sourcesContent":["import { CONFIG } from './config.js';\n  \n  // utils.js\n  export const getFormattedDate = () => {\n    const now = new Date();\n    return now.toJSON().slice(0, 10).replace(/-/g, '/');\n  };\n  \n  export const preserveUnique = (arr) => {\n    return [...new Set(arr)];\n  };\n  \n  export const showErrorMessage = (message) => {\n    const el = document.getElementById('message');\n    if (el) {\n      el.style.display = message && message.trim().length > 0 ? 'block' : 'none';\n      el.textContent = message;\n    } else {\n      console.error('Message element not found. Error message:', message);\n    }\n  };\n  \n  export const uint8ToBase64 = (buffer) => {\n    const chunk = 8192;\n    let result = '';\n    for (let i = 0; i < buffer.length; i += chunk) {\n      const slice = buffer.subarray(i, i + chunk);\n      result += String.fromCharCode.apply(null, slice);\n    }\n    return btoa(result);\n  };\n  \n  export const sanitizeId = (id) => {\n    return id.replace(/[^a-z0-9]/gi, '_').toLowerCase();\n  };\n\n  export const localStorageClear = () => {\n    localStorage.clear();\n    localStorage.setItem('proofingPhase', CONFIG.defaultProofingPhase);\n    location.reload();\n  };\n\n  export function toggleMode() {\n    const body = document.body;\n    const currentMode = localStorage.getItem('colorMode') || 'light';\n    const newMode = currentMode === 'light' ? 'dark' : 'light';\n    \n    // Save the new mode\n    localStorage.setItem('colorMode', newMode);\n    \n    // Update UI\n    if (newMode === 'light') {\n      body.removeAttribute('data-theme');\n      document.querySelector('#btn__mode-toggle .material-symbols-outlined').textContent = 'light_mode';\n    } else {\n      body.setAttribute('data-theme', 'dark');\n      document.querySelector('#btn__mode-toggle .material-symbols-outlined').textContent = 'dark_mode';\n    }\n  }\n  export function toggleSettingsVisibility() {\n    const settingsToggle = document.getElementById('btn__settings-toggle');\n    const body = document.body;\n    body.classList.toggle('settings-visible');\n    settingsToggle.classList.toggle('settings-visible');\n  }\n\n  export function toggleUi() {\n\tconst toggleUIButton = document.getElementById('btn__ui-toggle');\n\tconst body = document.body;\n  \n\tbody.classList.toggle('ui-hidden');\n\tthis.classList.toggle('ui-hidden');\n\t\n\t// Optionally, you can save the state to localStorage\n\tlocalStorage.setItem('uiHidden', body.classList.contains('ui-hidden'));\n  \n\t// Check if the UI was hidden in a previous session\n\tif (localStorage.getItem('uiHidden') === 'true') {\n\t  body.classList.add('ui-hidden');\n\t  toggleUIButton.classList.add('ui-hidden');\n\t}\n  }\n  \n  export const calculateTypeScale = (baseSize = 14, ratio = 1.618, steps = 6) => {\n    const sizes = {\n      't__size-xxl': Math.round(baseSize * Math.pow(ratio, 5)),\n      't__size-xl':  Math.round(baseSize * Math.pow(ratio, 4)),\n      't__size-l':   Math.round(baseSize * Math.pow(ratio, 3)),\n      't__size-m':   Math.round(baseSize * Math.pow(ratio, 2)),\n      't__size-s':   Math.round(baseSize * Math.pow(ratio, 1)),\n      't__size-xs':  baseSize\n    };\n    return sizes;\n  };\n  \n  export const whichFontSize = (text, baseSize = 14, ratio = 1.618) => {\n    if (!text) return baseSize.toString();\n  \n    const sizes = calculateTypeScale(baseSize, ratio);\n    \n    const charCount = text.length;\n    if (charCount < 25) return sizes['t__size-xxl'];\n    if (charCount < 50) return sizes['t__size-xl'];\n    if (charCount < 95) return sizes['t__size-l'];\n    if (charCount < 200) return sizes['t__size-m'];\n    if (charCount < 1000) return sizes['t__size-s'];\n    return sizes['t__size-xs'];\n  };\n  \n  export const removeElementsByClass = (className) => {\n    document.querySelectorAll(`.${className}`).forEach(el => el.remove());\n  };\n  \n  export const removeElementById = (id) => {\n    const element = document.getElementById(id);\n    if (element) {\n      element.style.transition = 'opacity 0.5s ease';\n      element.style.opacity = '0';\n      setTimeout(() => element.remove(), 500);\n    }\n  };\n  \n  export const saveData = (id, value) => {\n    if (typeof Storage !== 'undefined') {\n      if (value !== 'thisContent') {\n        localStorage.setItem(id, value);\n      } else {\n        const content = document.getElementById(id).textContent;\n        localStorage.setItem(id, content);\n      }\n    }\n  };\n  \n  // Save content of a contenteditable element to localStorage\n  export const saveEditableContent = (elementId) => {\n    const element = document.getElementById(elementId);\n    if (!element) {\n      console.warn(`Element with ID ${elementId} not found`);\n      return;\n    }\n    \n    const content = element.innerText;\n    localStorage.setItem(elementId, content);\n  };\n\n  // Save value of an input element to localStorage\n  export const saveInputValue = (elementId) => {\n    const element = document.getElementById(elementId);\n    if (!element) {\n      console.warn(`Element with ID ${elementId} not found`);\n      return;\n    }\n    \n    localStorage.setItem(elementId, element.value);\n  };\n\n  // Get content from localStorage or return default\n  export const getStoredContent = (elementId, defaultContent = '') => {\n    return localStorage.getItem(elementId) || defaultContent;\n  };\n  \n  export function initColorMode() {\n\tconst savedMode = localStorage.getItem('colorMode') || 'light';\n\tconst body = document.body;\n  \n\tif (savedMode === 'dark') {\n\t  body.setAttribute('data-theme', 'dark');\n\t  document.querySelector('#btn__mode-toggle .material-symbols-outlined').textContent = 'dark_mode';\n\t} else {\n\t  body.removeAttribute('data-theme');\n\t  document.querySelector('#btn__mode-toggle .material-symbols-outlined').textContent = 'light_mode';\n\t}\n  }\n  ","// config.js\nexport const CONFIG = {\n    defaultProofingPhase: 'Hamburgers',\n    fontFormats: {\n      truetype: 'ttf',\n      opentype: 'otf',\n    },\n    jsonPath: 'src/js/proof.json',\n  };","import { CONFIG } from './config.js';\nimport { getFormattedDate,\n\tpreserveUnique,\n\tshowErrorMessage,\n\tuint8ToBase64,\n\tlocalStorageClear,\n\twhichFontSize,\n\tremoveElementsByClass,\n\tsaveData,\n\ttoggleMode,\n\ttoggleSettingsVisibility,\n\ttoggleUi,\n\tsaveEditableContent,\n\tsaveInputValue,\n\tgetStoredContent,\n\tcalculateTypeScale,\n\tinitColorMode  } from './utils.js';\n\n// Re-export localStorageClear\nexport { localStorageClear };\n\nlet font = null;\nconst fontFormats = {\n    truetype: 'ttf',\n    opentype: 'otf',\n};\n\nexport const onFontLoaded = (loadedFont, fontFamilySource, fontFamily) => {\n\treturn new Promise(async (resolve, reject) => {\n\t  try {\n\t\tfont = loadedFont;\n\t\tconsole.log(`Font assigned globally: ${fontFamily}`);\n\t\t\n\t\t// Create and load the font face first\n\t\tif ('FontFace' in window) {\n\t\t  const fontFace = new FontFace(\n\t\t\tfontFamily,\n\t\t\t`url('${fontFamilySource}')`,\n\t\t\t{ format: loadedFont.outlinesFormat === 'truetype' ? 'truetype' : 'opentype' }\n\t\t  );\n\n\t\t  // Wait for the font to load\n\t\t  await fontFace.load();\n\t\t  document.fonts.add(fontFace);\n\t\t  console.log(`Font loaded successfully: ${fontFamily}`);\n\t\t}\n\n\t\t// Create and apply the font-face rule for browsers without FontFace API\n\t\tconst fontFaceRule = `\n\t\t  @font-face {\n\t\t\tfont-family: '${fontFamily}';\n\t\t\tsrc: url('${fontFamilySource}') format('${loadedFont.outlinesFormat === 'truetype' ? 'truetype' : 'opentype'}');\n\t\t  }\n\t\t`;\n\t\tconst style = document.createElement('style');\n\t\tstyle.textContent = fontFaceRule;\n\t\tdocument.head.appendChild(style);\n\t\tconsole.log(`Font-face rule applied: ${fontFaceRule}`);\n  \n\t\twindow.fontFamily = fontFamily;\n\t\tconsole.log(`Window.fontFamily set to: ${fontFamily}`);\n  \n\t\t// Wait for font to be ready before displaying data\n\t\tawait document.fonts.ready;\n\t\tawait displayFontData(fontFamily);\n  \n\t\tif (['localhost', '127.0.0.1', ''].includes(location.hostname)) {\n\t\t  localStorage.setItem('fontFamily', fontFamily);\n\t\t  localStorage.setItem('fontFamilySource', fontFamilySource);\n\t\t  console.log(`Font information saved to localStorage`);\n\t\t}\n  \n\t\t// Only set stage after font is fully loaded\n\t\tif (window.pendingStage) {\n\t\t  await setStage(window.pendingStage);\n\t\t  window.pendingStage = null;\n\t\t} else {\n\t\t  await setStage('Hamburgers');\n\t\t}\n\t\t\n\t\tconsole.log(`Stage set successfully`);\n\t\tresolve();\n\t  } catch (error) {\n\t\tconsole.error('Error in onFontLoaded:', error);\n\t\treject(error);\n\t  }\n\t});\n  };\n\nexport const onReadFile = (event) => {\n\tconst files = event.target.files;\n\tconst fileButtonParent = document.getElementById('section__header-file-buttons');\n\tfileButtonParent.innerHTML = '';\n\n\t// First add navigation\n\tconst navGroup = generateFontNavigation();\n\tfileButtonParent.appendChild(navGroup);\n\n\t// Then add font buttons\n\tgenerateFontButtons(Array.from(files), 'server')\n\t  .then(container => {\n\t\tfileButtonParent.appendChild(container);\n\t\t// Activate the first button automatically\n\t\tconst firstButton = container.querySelector('.btn__setfont');\n\t\tif (firstButton) {\n\t\t  firstButton.click();\n\t\t}\n\t  });\n};\n\n  const readSingleFile = (file) => {\n\treturn new Promise((resolve, reject) => {\n\t  const reader = new FileReader();\n\t  \n\t  reader.onload = async (e) => {\n\t\ttry {\n\t\t  console.log(`File read successfully: ${file.name}`);\n\t\t  const font = opentype.parse(e.target.result);\n\t\t  console.log(`Font parsed successfully: ${font.names.postScriptName.en}`);\n\t\t  const fontFamily = font.names.postScriptName.en;\n\t\t  const fontFamilySource = `fonts/${fontFamily}`;\n\t\t  \n\t\t  await onFontLoaded(font, fontFamilySource, fontFamily);\n  \n\t\t  font.file = {\n\t\t\tname: file.name,\n\t\t\tlastModified: file.lastModified,\n\t\t\tsize: file.size,\n\t\t\ttype: file.type,\n\t\t  };\n\t\t  font.type = 'user:local';\n  \n\t\t  const tempUint8array = new Uint8Array(e.target.result);\n\t\t  const isVariableFont = font.tables.fvar !== undefined;\n  \n\t\t  // Set the @font-face rule\n\t\t  const fontFaceRule = `@font-face {font-family:'${fontFamily}'; src: url('data:font/ttf;base64,${uint8ToBase64(tempUint8array)}') format('truetype');}`;\n\t\t  document.getElementById('style__fontface').innerHTML += fontFaceRule;\n\t\t  console.log(`Font-face rule added: ${fontFaceRule}`);\n  \n\t\t  console.log(`Loaded font: ${fontFamily}, Variable: ${isVariableFont}`);\n  \n\t\t  showErrorMessage('');\n\t\t  resolve();\n\t\t} catch (err) {\n\t\t  console.error('Error parsing font:', err);\n\t\t  showErrorMessage(`Error loading font: ${err.message}`);\n\t\t  reject(err);\n\t\t}\n\t  };\n  \n\t  reader.onerror = (err) => {\n\t\tconsole.error('Error reading file:', err);\n\t\tshowErrorMessage(err.toString());\n\t\treject(err);\n\t  };\n  \n\t  reader.readAsArrayBuffer(file);\n\t});\n  };\n\nexport const setFont = async (fontPath, fontName) => {\n\tconsole.log(`Attempting to load font: ${fontName} from ${fontPath}`);\n\topentype.load(fontPath, (err, loadedFont) => {\n\t  if (err) {\n\t\tconsole.error('Error loading font:', err);\n\t\tshowErrorMessage(`Error loading font: ${err}`);\n\t  } else {\n\t\tconsole.log(`Font loaded successfully: ${fontName}`);\n\t\tfont = loadedFont; // Ensure this is set globally\n\t\ttry {\n\t\t  onFontLoaded(loadedFont, fontPath, fontName);\n\t\t  // After the font is loaded and processed, set the stage\n\t\t  setStage(localStorage.getItem('proofingPhase') || 'Hamburgers');\n\t\t} catch (error) {\n\t\t  console.error('Error in onFontLoaded:', error);\n\t\t  showErrorMessage(`Error processing font: ${error}`);\n\t\t}\n\t  }\n\t});\n\n  // After font is loaded and applied, check if we need to show footers\n  const showNameAndVersion = localStorage.getItem('showNameAndVersion') === 'true';\n  if (showNameAndVersion) {\n    const headerNames = document.getElementById('section__header-names');\n    const proofItems = document.querySelectorAll('.item__proof');\n    \n    proofItems.forEach(item => {\n      // Remove any existing footer\n      const existingFooter = item.querySelector('.proof-footer');\n      if (existingFooter) {\n        existingFooter.remove();\n      }\n\n      // Create new footer\n      const footer = document.createElement('div');\n      footer.className = 'proof-footer';\n      footer.innerHTML = headerNames.innerHTML;\n      item.appendChild(footer);\n    });\n  }\n};\n\nexport const displayFontData = async (fontFamily) => {\n    var tablename, table, property, value, tag;\n    var styles = '';\n\n    for (tablename in font.tables) {\n        table = font.tables[tablename];\n        \n        if (tablename === 'name') {\n            let nameHtml = '';\n            if (font.names.postScriptName) {\n                var postScriptName = font.names.postScriptName.en;\n            } else {\n                var postScriptName = \"Untitled Font\";\n            }\n\n            // Get version from head table\n            const version = font.tables.head.fontRevision;\n            // Format version to 2 decimal places\n            const formattedVersion = `Ver ${version}`;\n            \n\t\t\tnameHtml += `<div class=\"section__header-name-font\" spellcheck=\"false\">${postScriptName}</div>`;\n            nameHtml += `<div class=\"section__header-name-version\" spellcheck=\"false\">${formattedVersion}</div>`;\n            styles += `.t__importedfontfamily { font-family: \"${fontFamily}\" }`;\n\n            // Get and format the font's modification date\n            const modifiedDate = font.tables.head.modified;\n            const formattedDate = `Last edited ${new Date(modifiedDate * 1000).toLocaleDateString()}`;\n            nameHtml += `<div class=\"section__header-name-date\">${formattedDate}</div>`;\n            \n            document.getElementById('section__header-names').innerHTML = nameHtml;\n            continue;\n        }\n    }\n\n    // Apply styles only after font is loaded\n    document.getElementById('style__fontfamily').innerHTML = styles;\n    \n    // Set stage after font is ready\n    if (localStorage.getItem('proofingPhase')) {\n        setStage(localStorage.getItem('proofingPhase'));\n    } else {\n        setStage(window.proofingPhase);\n    }\n};\n\nexport const setStage = (stage) => {\n\tconst article = document.getElementById('section__article-app');\n\tconst stageButtons = document.getElementById('section__header-stage-buttons');\n\t\n\tif (!font) {\n\t  console.warn('Font not loaded yet. Deferring stage setting.');\n\t  window.pendingStage = stage;\n\t  return;\n\t}\n  \n\tfetch(CONFIG.jsonPath)\n\t  .then(response => response.json())\n\t  .then(proof => {\n\t\tconst html = generateStageHtml(proof, stage);\n\t\tconst buttonHtml = generateStageButtons(proof, stage);\n  \n\t\tarticle.innerHTML = html;\n\t\tstageButtons.innerHTML = buttonHtml;\n\t\tdocument.getElementById('style__opentype-features').innerHTML = '';\n\t\t\n\t\tsaveData('proofingPhase', stage);\n  \n\t\t// Initialize type scale after rendering\n\t\tinitTypeScale();\n  \n\t\t// Check if we need to add footers\n\t\tconst showNameAndVersion = localStorage.getItem('showNameAndVersion') === 'true';\n\t\tif (showNameAndVersion) {\n\t\t  const headerNames = document.getElementById('section__header-names');\n\t\t  const proofItems = document.querySelectorAll('.item__proof');\n\t\t  \n\t\t  proofItems.forEach(item => {\n\t\t\tconst footer = document.createElement('div');\n\t\t\tfooter.className = 'proof-footer';\n\t\t\tfooter.innerHTML = headerNames.innerHTML;\n\t\t\titem.appendChild(footer);\n\t\t  });\n\t\t}\n  \n\t\t// Apply saved states after rendering new content\n\t\tapplyNameAndVersion(showNameAndVersion);\n  \n\t\tconst lockDimensions = localStorage.getItem('lockProofDimensions') === 'true';\n\t\tapplyLockProofDimensions(lockDimensions);\n\t  })\n\t  .catch(error => console.error('Error loading JSON:', error));\n  };\n  \n  const generateStageHtml = (proof, stage) => {\n    if (!proof[stage]) {\n      return '<div class=\"item d-flex t__center\"><div class=\"item__proof\">No features found! :...(</div></div>';\n    }\n  \n    const gsubFeatures = font.tables.gsub.features;\n    const taglist = Object.values(gsubFeatures)\n\t\t.filter(feature => typeof feature === 'object' && feature.tag)\n\t\t.map(feature => feature.tag)\n\t\t.filter(tag => proof[\"Features\"][tag] !== undefined);\n  \n    let html = '';\n  \n    for (const title in proof[stage]) {\n      if (stage === \"Features\" && !taglist.includes(title)) {\n        continue;\n      }\n  \n      const textClass = whichFontSize(proof[stage][title]);\n      const testAreaID = `section__proofing-${title}`;\n      const itemID = `item--${title}`;\n      const sliderID = `${itemID}`;\n      \n      const { fontSize, lineHeight, letterSpacing, inlineStyle } = getStoredStyles(sliderID, textClass);\n      const fvarStyle = generateFvarStyle(itemID);\n  \n      html += `\n        <div id=\"${itemID}\" class=\"item\">\n          <button class=\"btn btn-link add-item-above chip\" onclick=\"insertField('${itemID}')\">+ Add Proof Window</button>\n          <div class=\"item__container d-flex\">\n            <div class=\"item__sliders pt-2\">\n              <div class=\"item__sliders-wrapper\">\n                ${generateSliders(itemID, sliderID, fontSize, lineHeight, letterSpacing)}\n                ${generateVariableSliders(itemID, sliderID)}\n                ${generateStyleButtons(itemID)}\n                ${generateFeatureCheckboxes(itemID, proof, taglist)}\n              </div>\n            </div>\n            <div class=\"item__proof ratio-letter\">\n              <button class=\"btn btn-link remove-item-this invisible\" onclick=\"removeElementsByID('${itemID}')\">×</button>\n              ${generateProofContent(stage, title, proof, testAreaID, fvarStyle, textClass)}\n            </div>\n          </div>\n        </div>\n      `;\n    }\n\treturn html;\n  };\n  \n// Modify the getStoredStyles function to include column properties\nconst getStoredStyles = (itemID, textClass) => {\n  // Get the current type scale ratio\n  const typeScale = parseFloat(document.getElementById('select__type-scale')?.value || 1.618);\n  \n  // Use whichFontSize to calculate the font size based on the text\n  const content = document.querySelector(`#${itemID} .testarea`)?.textContent || textClass;\n  \n  // Check if there's a stored fontSize, otherwise calculate it\n  const fontSize = localStorage.getItem(`${itemID}-fontSize`) || whichFontSize(content);\n  \n  const lineHeight = localStorage.getItem(`${itemID}-lineHeight`) || '1.2';\n  const letterSpacing = localStorage.getItem(`${itemID}-letterSpacing`) || '0em';\n  const columnCount = localStorage.getItem(`${itemID}-column-count`) || '1';\n  const columnGap = localStorage.getItem(`${itemID}-column-gap`) || '1em';\n\n  const inlineStyle = `\n    font-size: ${fontSize}pt;\n    line-height: ${lineHeight};\n    letter-spacing: ${letterSpacing};\n    column-count: ${columnCount};\n    column-gap: ${columnGap};\n  `;\n\n  return { fontSize, lineHeight, letterSpacing, columnCount, columnGap, inlineStyle };\n};\n  \n  const generateFvarStyle = (itemID) => {\n    let fvarStyle = '';\n    if (font.tables.fvar) {\n      const fvarSupport = font.tables.fvar.axes.map(axis => axis.tag);\n      fvarStyle = 'font-variation-settings: ' + \n        font.tables.fvar.axes.map(axis => {\n          const storedValue = localStorage.getItem(`${itemID}-${axis.tag}-val`);\n          const value = storedValue !== null ? storedValue : axis.defaultValue;\n          return `'${axis.tag}' ${value}`;\n        }).join(', ') + ';';\n    }\n    return fvarStyle;\n  };\n  \n  const generateSliders = (itemID, sliderID, fontSize, lineHeight, letterSpacing) => `\n    <label for=\"${sliderID}-fontSize\">Font Size </label>\n    <span class=\"t__right text-small\" id=\"${sliderID}-fontSize-val\">${fontSize}pt</span>\n    <input id=\"${sliderID}-fontSize\" type=\"range\" class=\"slider\" min=\"4\" max=\"160\" step=\"2\" value=\"${fontSize}\" oninput=\"passStyleValue('${itemID}', 'fontSize', this.value)\">\n    \n    <label for=\"${sliderID}-lineHeight\">Line Height </label>\n    <span class=\"t__right text-small\" id=\"${sliderID}-lineHeight-val\">${lineHeight}</span>\n    <input id=\"${sliderID}-lineHeight\" type=\"range\" class=\"slider\" min=\"0.6\" max=\"3.0\" step=\"0.01\" value=\"${lineHeight}\" oninput=\"passStyleValue('${itemID}', 'lineHeight', this.value)\">\n    \n    <label for=\"${sliderID}-letterSpacing\">Letter Spacing </label>\n    <span class=\"t__right text-small\" id=\"${sliderID}-letterSpacing-val\">${letterSpacing}</span>\n    <input id=\"${sliderID}-letterSpacing\" type=\"range\" class=\"slider\" min=\"-0.4\" max=\"0.4\" step=\"0.01\" value=\"${letterSpacing}\" oninput=\"passStyleValue('${itemID}', 'letterSpacing', this.value)\">\n  `;\n  \n  const generateVariableSliders = (itemID, sliderID) => {\n    if (!font.tables.fvar) return '';\n  \n    return font.tables.fvar.axes.map(axis => {\n      const storedValue = localStorage.getItem(`${itemID}-${axis.tag}-val`);\n      const value = storedValue !== null ? storedValue : axis.defaultValue;\n      return `\n        <label for=\"${sliderID}-${axis.tag}\">${axis.name.en} </label>\n        <span class=\"t__right text-small\" id=\"${sliderID}-${axis.tag}-val\">${value}</span>\n        <input id=\"${sliderID}-${axis.tag}\" type=\"range\" class=\"slider\" min=\"${axis.minValue}\" max=\"${axis.maxValue}\" value=\"${value}\" oninput=\"passfvarValue('${itemID}', '${axis.tag}', this.value, '${font.tables.fvar.axes.map(a => a.tag).join(',')}')\">\n      `;\n    }).join('');\n  };\n  \n  export const generateFontButton = async (font, mode = 'local') => {\n\tlet fontName, fontPath, fontType, displayName, isVariable;\n  \n\tif (mode === 'local') {\n\t  fontName = font.replace('.', '-');\n\t  fontPath = `fonts/${font}`;\n\t  displayName = font.replace('-', ' ').replace(/\\.[^/.]+$/, \"\");\n\t  fontType = font.split('.').pop().toUpperCase();\n\t  isVariable = await isVariableFont(fontPath);\n\t} else { // server mode\n\t  fontName = font.name.replace('.', '-');\n\t  fontPath = URL.createObjectURL(font);\n\t  displayName = font.name.replace('-', ' ').replace(/\\.[^/.]+$/, \"\");\n\t  fontType = font.name.split('.').pop().toUpperCase();\n\t  isVariable = await isVariableFont(font);\n\t}\n  \n\tif (isVariable) {\n\t  fontType = 'VF';\n\t}\n  \n\tconst button = document.createElement('div');\n\tbutton.className = 'btn__setfont chip btn d-flex justify-content-between';\n\tbutton.title = mode === 'local' ? font : font.name;\n\tbutton.id = `btn__setfont-${fontName}`;\n\tbutton.innerHTML = `${displayName}<span class=\"d-flex-grow text-small text-right\">${fontType}</span>`;\n\tbutton.onclick = () => {\n\t  // Remove active class from all buttons\n\t  document.querySelectorAll('.btn__setfont').forEach(btn => {\n\t    btn.classList.remove('active');\n\t    btn.classList.remove('visited'); // Remove visited from all buttons\n\t  });\n\t  // Add active class to clicked button\n\t  button.classList.add('active');\n\t  button.classList.add('visited'); // Add visited only when clicked\n\t  setFont(fontPath, fontName);\n\t};\n  \n\treturn button;\n  };\n  \n  const isVariableFont = async (font) => {\n\ttry {\n\t  let arrayBuffer;\n\t  if (typeof font === 'string') {\n\t\t// Local mode: font is a path\n\t\tconst response = await fetch(font);\n\t\tarrayBuffer = await response.arrayBuffer();\n\t  } else {\n\t\t// Server mode: font is a File object\n\t\tarrayBuffer = await font.arrayBuffer();\n\t  }\n\t  const parsedFont = opentype.parse(arrayBuffer);\n\t  return parsedFont.tables.fvar !== undefined;\n\t} catch (error) {\n\t  console.error('Error checking if font is variable:', error);\n\t  return false;\n\t}\n  };\n  \n  const generateFontFaces = (fonts) => {\n\treturn fonts.map(font => {\n\t  const fontName = font.replace('.', '-');\n\t  return `@font-face { font-family: \"${fontName}\"; src: url(\"fonts/${font}\");}`;\n\t}).join('\\n');\n  };\n\n  // Add new function to handle column updates\nwindow.updateColumns = (itemID) => {\n\tconst columnCount = document.getElementById(`${itemID}-column-count`).value;\n\tconst columnGap = document.getElementById(`${itemID}-column-gap`).value;\n\t\n\tpassStyleValue(itemID, 'column-count', columnCount);\n\tpassStyleValue(itemID, 'column-gap', columnGap);\n  };\n\n  const generateStyleButtons = (itemID) => `\n  <div id=\"btn__wrapper-case\">\n    <label>Case</label>\n    <div class=\"d-flex g-1 btn__wrapper\">\n      <button class=\"btn btn-link textTransform-uppercase\" title=\"Uppercase\" onclick=\"passStyleValue('${itemID}','textTransform', 'uppercase')\">TT</button>\n      <button class=\"btn btn-link textTransform-capitalize\" title=\"Capitalize\" onclick=\"passStyleValue('${itemID}','textTransform', 'capitalize')\">Tt</button>\n      <button class=\"btn btn-link textTransform-lowercase\" title=\"Lowercase\" onclick=\"passStyleValue('${itemID}','textTransform', 'lowercase')\">tt</button>\n    </div>\n  </div>\n  <div id=\"btn__wrapper-columns\">\n    <label>Columns</label>\n    <div class=\"d-flex g-1 btn__wrapper\">\n\t<span class=\"text-small\">Count</span>\n      <input class=\"input\" type=\"number\" id=\"${itemID}-column-count\" min=\"1\" max=\"6\" value=\"1\" onchange=\"updateColumns('${itemID}')\" style=\"width: 50px;\">\n\t<span class=\"text-small\">Gap</span>\n      <input class=\"input\" type=\"text\" id=\"${itemID}-column-gap\" value=\"10px\" onchange=\"updateColumns('${itemID}')\" style=\"width: 50px;\">\n    </div>\n  </div>\n`;\n\n\n  \nconst generateFeatureCheckboxes = (itemID, proof, taglist) => {\n\tconst uniqueTags = [...new Set(taglist)];\n\treturn `\n\t  <label>Features</label>  \n\t  <div class=\"btn__wrapper d-flex flex-wrap g-0\">\n\t\t${uniqueTags.map(tag => {\n\t\t  const name = proof[\"Features\"][tag][\"abstract\"];\n\t\t  return `\n\t\t\t<div class=\"chip d-flex align-items-center justify-content-between d-flex-grow\" onclick=\"document.getElementById('${itemID}-checkbox-${tag}').click()\">\n\t\t\t  <input id=\"${itemID}-checkbox-${tag}\" type=\"checkbox\" onclick=\"passfeatValue('${itemID}', '${tag}', '${uniqueTags.join(',')}')\">\n\t\t\t  <span class=\"d-flex-grow\">${name}</span>\n\t\t\t  <span class=\"tag-label text-small\">${tag}</span>\n\t\t\t</div>\n\t\t  `;\n\t\t}).join('')}\n\t  </div>\n\t`;\n  };\n  \n  \n  const generateProofContent = (stage, title, proof, testAreaID, fvarStyle, textClass) => {\n    // Add safety checks\n    if (!proof || !proof[stage] || !proof[stage][title]) {\n      console.warn('Missing proof data:', { stage, title });\n      return '';\n    }\n\n    // Special handling for Features stage\n    let content = proof[stage][title];\n    if (stage === \"Features\") {\n      // Features content is stored as an object with 'sample', 'definition', and 'abstract' properties\n      content = proof[stage][title].sample || '';\n    }\n\n    const savedContent = getStoredContent(testAreaID, content) || '';\n    const savedTitle = getStoredContent(`${testAreaID}-title`, title) || '';\n    const fontSize = whichFontSize(savedContent);\n  \n    // Get other style values\n    const lineHeight = localStorage.getItem(`${testAreaID}-lineHeight`) || '1.2';\n    const letterSpacing = localStorage.getItem(`${testAreaID}-letterSpacing`) || '0em';\n    const columnCount = localStorage.getItem(`${testAreaID}-column-count`) || '1';\n    const columnGap = localStorage.getItem(`${testAreaID}-column-gap`) || '1em';\n  \n    const inlineStyle = `\n      font-size: ${fontSize}pt;\n      line-height: ${lineHeight};\n      letter-spacing: ${letterSpacing};\n      column-count: ${columnCount};\n      column-gap: ${columnGap};\n    `;\n  \n    const html = `\n      <div class=\"d-flex justify-content-between\">\n        <h6 class=\"h6\" contentEditable=\"true\" \n            id=\"${testAreaID}-title\"\n            onkeyup=\"saveEditableContent('${testAreaID}-title')\">${savedTitle}</h6>\n        <span class=\"testarea-values small\">${generateTestAreaValues(inlineStyle)}</span>\n      </div>\n      <div class=\"testarea-container\">\n        <div id=\"${testAreaID}\" \n             style=\"${inlineStyle} ${fvarStyle}\" \n             class=\"t__importedfontfamily testarea\" \n             contenteditable=\"true\" \n             spellcheck=\"false\" \n             onkeyup=\"saveEditableContent('${testAreaID}')\">\n          ${savedContent}\n        </div>\n      </div>\n    `;\n  \n    return html;\n  };\n  \n  const formatStyleValue = (property, value) => {\n    switch (property) {\n      case 'font-size':\n        return value;\n      case 'line-height':\n        return value;\n      case 'letter-spacing':\n        return value.replace('em', '');\n      default:\n        return value;\n    }\n  };\n  \n  const generateTestAreaValues = (inlineStyle) => {\n    // Only show these core properties\n    const styleMap = {\n      'font-size': 'Size',\n      'line-height': 'Leading',\n      'letter-spacing': 'Tracking'\n    };\n\n    const styles = inlineStyle.split(';')\n      .filter(s => s.trim())\n      // Only process styles that are in our styleMap\n      .filter(style => {\n        const property = style.split(':')[0].trim();\n        return styleMap.hasOwnProperty(property);\n      });\n\n    return styles.map(style => {\n      const [property, value] = style.split(':').map(s => s.trim());\n      const label = styleMap[property];\n      const formattedValue = formatStyleValue(property, value);\n      return `<span class=\"${property}\">${label}: ${formattedValue}</span>`;\n    }).join(' · ');\n  };\n  \n  const updateInlineText = (itemID, property, value) => {\n\tconst container = document.querySelector(`#${itemID} .testarea-values`);\n\tif (!container) return;\n\n\t// Get current values from localStorage\n\tconst fontSize = localStorage.getItem(`${itemID}-fontSize`) || '14';\n\tconst lineHeight = localStorage.getItem(`${itemID}-lineHeight`) || '1.2';\n\tconst letterSpacing = localStorage.getItem(`${itemID}-letterSpacing`) || '0';\n\n\tconst currentStyles = {\n\t  'font-size': `${fontSize}pt`,\n\t  'line-height': lineHeight,\n\t  'letter-spacing': `${letterSpacing}em`\n\t};\n\n\tconst inlineStyle = Object.entries(currentStyles)\n\t  .map(([prop, val]) => `${prop}: ${val}`)\n\t  .join('; ');\n\n\tcontainer.innerHTML = generateTestAreaValues(inlineStyle);\n  };\n\n// Global functions\n\nexport const insertField = (aboveHere) => {\n\tconst original = document.getElementById(aboveHere);\n\tconst clone = original.cloneNode(true);\n\t\n\t// Reset any unique IDs or input values in the clone\n\tclone.id = `${aboveHere}-clone-${Date.now()}`;\n\tclone.querySelectorAll('[id]').forEach(el => {\n\t  el.id = `${el.id}-clone-${Date.now()}`;\n\t});\n\tclone.querySelectorAll('input').forEach(input => {\n\t  input.value = '';\n\t});\n  \n\toriginal.parentNode.insertBefore(clone, original);\n\t\n\t// Animate the insertion\n\tclone.style.height = '0px';\n\tclone.style.overflow = 'hidden';\n\tclone.style.transition = 'height 0.6s ease';\n\t\n\tsetTimeout(() => {\n\t  clone.style.height = `${clone.scrollHeight}px`;\n\t}, 0);\n\t\n\tsetTimeout(() => {\n\t  clone.style.height = 'auto';\n\t  clone.style.overflow = 'visible';\n\t}, 600);\n  };\n  \n  export const passStyleValue = (itemID, property, value) => {\n\tconst elementIdSuffix = `-${property}-val`;\n\tconst element = document.querySelector(`[id$=\"${itemID}${elementIdSuffix}\"]`);\n\t\n\t// Save to localStorage\n\tif (['fontSize', 'lineHeight', 'letterSpacing', 'column-count', 'column-gap'].includes(property)) {\n\t  localStorage.setItem(`${itemID}-${property}`, value);\n\t  if (property === 'fontSize') value += 'pt';\n\t  if (property === 'letterSpacing') value += 'em';\n\t  if (element) element.textContent = value;\n\t}\n\n\t// Update the testarea\n\tconst testarea = document.querySelector(`#${itemID} .testarea`);\n\tif (testarea) {\n\t  testarea.style[property] = value;\n\t}\n\n\t// Update the testarea-values display\n\tupdateInlineText(itemID, property, value);\n  \n\t// Only update active button for non-slider properties\n\tif (!['fontSize', 'lineHeight', 'letterSpacing', 'column-count', 'column-gap'].includes(property)) {\n\t  updateActiveButton(property, value);\n\t}\n  };\n  \n  export const passfvarValue = (itemID, property, value, fvarSupport) => {\n    const element = document.getElementById(`${itemID}-${property}-val`);\n    if (element) {\n        element.textContent = value;\n    } else {\n        console.warn(`Element with ID ${itemID}-${property}-val not found.`);\n    }\n\n    saveData(`${itemID}-${property}-val`, value);\n\n    const fvarSupportArray = fvarSupport.split(',');\n    let fvarcss = fvarSupportArray.map(tag => {\n        const tagValue = tag === property ? value : document.getElementById(`${itemID}-${tag}`)?.value; // Use optional chaining\n        return `'${tag}' ${tagValue}`;\n    }).join(', ');\n\n    const testarea = document.querySelector(`#${itemID} .testarea`);\n    if (testarea) {\n        testarea.style.fontVariationSettings = fvarcss;\n    } else {\n        console.warn(`Test area with ID ${itemID} not found.`);\n    }\n\n    updateInlineText(itemID, 'fvar', fvarcss);\n};\n  \n  export const passfeatValue = (itemID, feature, featureSupport) => {\n\tconst featSupport = featureSupport.split(',');\n\tlet featcss = \"\";\n  \n\tfor (let f = 0; f < featSupport.length; f++) {\n\t  if (document.getElementById(`${itemID}-checkbox-${featSupport[f]}`).checked) {\n\t\tfeatcss += `'${featSupport[f]}',`;\n\t  }\n\t}\n\tfeatcss = featcss.replace(/,\\s*$/, \"\");\n\tdocument.querySelector(`#${itemID} .testarea`).style.fontFeatureSettings = featcss;\n  };\n  \n  const updateActiveButton = (property, value) => {\n\tdocument.querySelectorAll(`.btn.${property}-${value}`).forEach(btn => {\n\t  btn.classList.add('active');\n\t  \n\t  // Find the parent wrapper\n\t  const wrapper = btn.closest('.btn__wrapper');\n\t  \n\t  if (wrapper) {\n\t\t// If we found a wrapper, remove 'active' class from all sibling buttons\n\t\twrapper.querySelectorAll('.btn').forEach(sibling => {\n\t\t  if (sibling !== btn) sibling.classList.remove('active');\n\t\t});\n\t  } else {\n\t\t// Fallback: remove 'active' class from all buttons with the same property\n\t\tdocument.querySelectorAll(`.btn[class*=\"${property}-\"]`).forEach(sibling => {\n\t\t  if (sibling !== btn) sibling.classList.remove('active');\n\t\t});\n\t  }\n\t});\n  };\n\n// generate buttons\nexport const generateStageButtons = (proof, currentStage) => {\n    return Object.keys(proof).map(stage => {\n      const isActive = stage === currentStage ? 'active' : '';\n      return `\n        <div class=\"tab-item ${isActive} tab__setstage\" onclick=\"setStage('${stage}')\">\n          <a href=\"#\" class=\"stage-button\">${stage}</a>\n        </div>\n      `;\n    }).join('');\n  };\n\n  // localload vs server\n\n  export const localLoad = () => {\n\tconst fileButtonParent = document.getElementById('section__header-file-buttons');\n\t\n\tfetch('../src/txt/fonts.txt')\n\t  .then(response => response.text())\n\t  .then(data => {\n\t\tconst fonts = data.split('fonts/')\n\t\t  .filter(font => font.trim() !== '')\n\t\t  .map(font => font.trim());\n  \n\t\tconst uniqueFonts = preserveUnique(fonts.sort());\n\t\t\n\t\tif (uniqueFonts.length === 0) {\n\t\t  // Only show the message if no fonts are found\n\t\t  fileButtonParent.innerHTML = 'Place fonts you want to proof into <code>/fonts</code> to begin';\n\t\t} else {\n\t\t  // First add navigation\n\t\t  const navGroup = generateFontNavigation();\n\t\t  fileButtonParent.appendChild(navGroup);\n\t\t  \n\t\t  // Then add font buttons\n\t\t  generateFontButtons(uniqueFonts, 'local')\n\t\t    .then(container => {\n\t\t      fileButtonParent.appendChild(container);\n\t\t      // Set the default font\n\t\t      const fontFamilySource = localStorage.getItem('fontFamilySource') || \n\t\t        `fonts/${uniqueFonts[uniqueFonts.length - 1]}`;\n\t\t      const fontFamily = localStorage.getItem('fontFamily') || \n\t\t        fontFamilySource.replace('.', '-');\n\t\t      setFont(fontFamilySource, fontFamily);\n\t\t    });\n\t\t}\n\t  })\n\t  .catch(error => {\n\t\tconsole.error('Error loading fonts:', error);\n\t\t// Show the message if there's an error loading fonts\n\t\tfileButtonParent.innerHTML = 'Place fonts you want to proof into <code>/fonts</code> to begin';\n\t  });\n  };\n  \n  export const serverLoad = () => {\n\tconst fileButtonParent = document.getElementById('section__header-file-buttons');\n\t\n\t// Load the default Gooper font\n\tsetFont('fonts/gooper-VF.ttf', 'gooper-VF-ttf');\n\tdocument.getElementById('style__fontface').innerHTML = '@font-face { font-family: \"gooper-VF-ttf\"; src: url(\"fonts/gooper-VF.ttf\");}';\n  \n\tconst dragDropHtml = `\n\t  <div id=\"drag-drop-area\" class=\"drag-drop-area\">\n\t\t<p>Drag & drop font files here</p>\n\t\t<p>or</p>\n\t\t<label for=\"fontInput\" class=\"file-input-label\">Choose Files</label>\n\t\t<input id=\"fontInput\" type=\"file\" class=\"file-input\" multiple accept=\".ttf,.otf\" />\n\t  </div>\n\t`;\n\n\tfileButtonParent.innerHTML = dragDropHtml;\n  \n\tconst dragDropArea = document.getElementById('drag-drop-area');\n\tconst fileInput = document.getElementById('fontInput');\n  \n\t// Prevent default drag behaviors\n\t['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {\n\t  dragDropArea.addEventListener(eventName, preventDefaults, false);\n\t  document.body.addEventListener(eventName, preventDefaults, false);\n\t});\n  \n\t// Highlight drop area when item is dragged over it\n\t['dragenter', 'dragover'].forEach(eventName => {\n\t  dragDropArea.addEventListener(eventName, highlight, false);\n\t});\n  \n\t['dragleave', 'drop'].forEach(eventName => {\n\t  dragDropArea.addEventListener(eventName, unhighlight, false);\n\t});\n  \n\t// Handle dropped files\n\tdragDropArea.addEventListener('drop', handleDrop, false);\n  \n\t// Handle selected files\n\tfileInput.addEventListener('change', handleFiles, false);\n  };\n  \n  function preventDefaults(e) {\n\te.preventDefault();\n\te.stopPropagation();\n  }\n  \n  function highlight(e) {\n\tdocument.getElementById('drag-drop-area').classList.add('highlight');\n  }\n  \n  function unhighlight(e) {\n\tdocument.getElementById('drag-drop-area').classList.remove('highlight');\n  }\n  \n  function handleDrop(e) {\n\tconst dt = e.dataTransfer;\n\tconst files = dt.files;\n\thandleFiles(files);\n  }\n  \n  function handleFiles(filesOrEvent) {\n\tlet files;\n\tif (filesOrEvent instanceof Event) {\n\t  files = filesOrEvent.target.files;\n\t} else {\n\t  files = filesOrEvent;\n\t}\n  \n\tfiles = Array.from(files);\n\t\n\t// Process all files\n\tconst uploadPromises = files.map(file => uploadFile(file));\n  \n\t// After all files are processed, select the first font chip\n\tPromise.all(uploadPromises).then(() => {\n\t  setTimeout(() => {\n\t\tconst firstButton = document.querySelector('.btn__setfont');\n\t\tif (firstButton) {\n\t\t  firstButton.click();\n\t\t}\n\t  }, 100); // Short delay to ensure DOM is updated\n\t});\n  }\n  \n  function uploadFile(file) {\n\treturn new Promise((resolve) => {\n\t  onReadFile({ target: { files: [file] } });\n\t  // Assume onReadFile is asynchronous and use a setTimeout to simulate its completion\n\t  setTimeout(resolve, 50);\n\t});\n  }\n  \n  // Make sure onReadFile returns a Promise or is modified to work with this approach\n  \n  function previewFile(file) {\n\tconst reader = new FileReader();\n\treader.readAsDataURL(file);\n\treader.onloadend = function() {\n\t  const img = document.createElement('img');\n\t  img.src = reader.result;\n\t  document.getElementById('drag-drop-area').appendChild(img);\n\t}\n  }\n  \n  export const setupEventListeners = () => {\n\tconst fileButtons = document.getElementById('section__header-file-buttons');\n\tconst stageButtons = document.getElementById('section__header-stage-buttons');\n\tconst toolsToggle = document.getElementById('btn__view-tools-toggle');\n\tconst modeToggle = document.getElementById('btn__mode-toggle');\n\tconst localStorageClearButton = document.getElementById('btn__reset-local-storage');\n\tconst settingsToggle = document.getElementById('btn__settings-toggle');\n\tconst addNameAndVersionCheckbox = document.getElementById('checkbox__add-name-and-version');\n\tconst lockProofDimensionsCheckbox = document.getElementById('checkbox__lock-proof-dimensions');\n\tif (fileButtons) {\n\t  fileButtons.addEventListener('click', handleFileButtonClick);\n\t}\n\tif (stageButtons) {\n\t  stageButtons.addEventListener('click', handleStageButtonClick);\n\t}\n\tif (toolsToggle) {\n\t  toolsToggle.addEventListener('click', toggleToolsVisibility);\n\t}\n\tif (modeToggle) {\n\t\tmodeToggle.addEventListener('click', toggleMode);\n\t}\n\tif (localStorageClearButton) {\n\t\tlocalStorageClearButton.addEventListener('click', localStorageClear);\n\t}\n\tif (settingsToggle) {\n\t\tsettingsToggle.addEventListener('click', toggleSettingsVisibility);\n\t}\n\tif (addNameAndVersionCheckbox) {\n\t\t// Restore saved state\n\t\tconst savedState = localStorage.getItem('showNameAndVersion') === 'true';\n\t\taddNameAndVersionCheckbox.checked = savedState;\n\t\t\n\t\t// No need to manually trigger the toggle here since setFont will handle it\n\t\taddNameAndVersionCheckbox.addEventListener('change', toggleNameAndVersion);\n\t}\n\tif (lockProofDimensionsCheckbox) {\n\t\t// Restore saved state\n\t\tconst savedState = localStorage.getItem('lockProofDimensions') === 'true';\n\t\tlockProofDimensionsCheckbox.checked = savedState;\n\t\t\n\t\t// Apply the saved state immediately\n\t\tapplyLockProofDimensions(savedState);\n\t\t\n\t\tlockProofDimensionsCheckbox.addEventListener('change', toggleLockProofDimensions);\n\t}\n\tsetupPasteHandling();\n\n\t// Add aspect ratio select listener\n\tconst aspectRatioSelect = document.getElementById('select__aspect-ratio');\n\tif (aspectRatioSelect) {\n\t\t// Set initial value\n\t\tconst proofs = document.querySelectorAll('.item__proof');\n\t\tproofs.forEach(proof => proof.classList.add('ratio-letter'));\n\n\t\t// Watch for changes\n\t\taspectRatioSelect.addEventListener('change', (e) => {\n\t\t\tconst ratio = e.target.value;\n\t\t\tconst proofs = document.querySelectorAll('.item__proof');\n\t\t\t\n\t\t\tproofs.forEach(proof => {\n\t\t\t\tproof.classList.remove('ratio-letter', 'ratio-a4');\n\t\t\t\tproof.classList.add(ratio === '8.5:11' ? 'ratio-letter' : 'ratio-a4');\n\t\t\t});\n\n\t\t\tlocalStorage.setItem('preferred-ratio', ratio);\n\t\t});\n\n\t\t// Restore saved preference if it exists\n\t\tconst savedRatio = localStorage.getItem('preferred-ratio');\n\t\tif (savedRatio) {\n\t\t\taspectRatioSelect.value = savedRatio;\n\t\t\taspectRatioSelect.dispatchEvent(new Event('change'));\n\t\t}\n\t}\n\n\t// Add base font size input listener\n\tconst baseFontInput = document.getElementById('input__base-font-size');\n\tif (baseFontInput) {\n\t\tbaseFontInput.addEventListener('change', (e) => {\n\t\t\tconst baseSize = parseFloat(e.target.value);\n\t\t\tlocalStorage.setItem('base-font-size', baseSize);\n\t\t\tupdateAllTypeScales();\n\t\t});\n\n\t\t// Restore saved base font size\n\t\tconst savedBaseSize = localStorage.getItem('base-font-size') || '14';\n\t\tbaseFontInput.value = savedBaseSize;\n\t}\n\n\t// Modify type scale select listener\n\tconst typeScaleSelect = document.getElementById('select__type-scale');\n\tif (typeScaleSelect) {\n\t\ttypeScaleSelect.addEventListener('change', () => {\n\t\t\tupdateAllTypeScales();\n\t\t});\n\t}\n\n\t// Initialize color mode from localStorage\n\tinitColorMode();\n  };\n  \n  const handleFileButtonClick = (event) => {\n\tif (event.target.classList.contains('btn__setfont')) {\n\t  event.target.classList.add('active', 'visited');\n\t  // Remove 'active' class from sibling elements\n\t  const siblings = Array.from(event.target.parentNode.children).filter(child => child !== event.target);\n\t  siblings.forEach(sibling => sibling.classList.remove('active'));\n\t}\n  };\n  \n  const handleStageButtonClick = (event) => {\n\tif (event.target.classList.contains('btn__setstage')) {\n\t  event.target.classList.add('active');\n\t  // Remove 'active' class from sibling elements\n\t  const siblings = Array.from(event.target.parentNode.children).filter(child => child !== event.target);\n\t  siblings.forEach(sibling => sibling.classList.remove('active'));\n\t}\n  };\n  \n  const toggleToolsVisibility = () => {\n\tdocument.body.classList.toggle('tools-visible');\n  };\n\nconst setupPasteHandling = () => {\n  document.addEventListener('paste', (e) => {\n    // Only handle paste events in testarea elements\n    if (!e.target.classList.contains('testarea')) {\n      return;\n    }\n\n    // Prevent the default paste\n    e.preventDefault();\n\n    // Get plain text from clipboard\n    const text = (e.clipboardData || window.clipboardData).getData('text/plain');\n\n    // Insert the plain text at cursor position\n    const selection = window.getSelection();\n    if (selection.rangeCount) {\n      const range = selection.getRangeAt(0);\n      range.deleteContents();\n      range.insertNode(document.createTextNode(text));\n    } else {\n      e.target.textContent += text;\n    }\n\n    // Trigger the onkeyup event to save the content\n    const event = new Event('keyup');\n    e.target.dispatchEvent(event);\n  });\n};\n\nexport const generateFontButtons = async (fonts, mode = 'local') => {\n  const container = document.createElement('div');\n  container.className = 'font-buttons-container';\n\n  // Create font chips container\n  const chipsContainer = document.createElement('div');\n  chipsContainer.className = 'font-chips';\n  \n  // Generate individual font buttons\n  for (const font of fonts) {\n    const button = await generateFontButton(font, mode);\n    chipsContainer.appendChild(button);\n  }\n\n  return chipsContainer; // Return only the chips container\n};\n\n// Create a separate function for navigation\nexport const generateFontNavigation = () => {\n  const navGroup = document.createElement('div');\n  navGroup.className = 'btn-group d-flex g-1 mb-2 font-nav-group';\n  \n  const prevButton = document.createElement('button');\n  prevButton.className = 'btn d-flex align-items-center justify-content-between d-flex-grow';\n  prevButton.innerHTML = '<span class=\"material-symbols-outlined\">chevron_left</span> Prev';\n  prevButton.onclick = () => navigateFonts('prev');\n  \n  const nextButton = document.createElement('button');\n  nextButton.className = 'btn d-flex align-items-center justify-content-between d-flex-grow';\n  nextButton.innerHTML = 'Next <span class=\"material-symbols-outlined\">chevron_right</span>';\n  nextButton.onclick = () => navigateFonts('next');\n  \n  navGroup.appendChild(prevButton);\n  navGroup.appendChild(nextButton);\n  \n  return navGroup;\n};\n\nconst navigateFonts = (direction) => {\n  const buttons = document.querySelectorAll('.btn__setfont');\n  const activeButton = document.querySelector('.btn__setfont.active');\n  \n  if (!activeButton || buttons.length <= 1) return;\n  \n  const currentIndex = Array.from(buttons).indexOf(activeButton);\n  let nextIndex;\n  \n  if (direction === 'next') {\n    nextIndex = currentIndex + 1 >= buttons.length ? 0 : currentIndex + 1;\n  } else {\n    nextIndex = currentIndex - 1 < 0 ? buttons.length - 1 : currentIndex - 1;\n  }\n  \n  buttons[nextIndex].click();\n};\n\nconst initAspectRatio = () => {\n  const select = document.getElementById('select__aspect-ratio');\n  const proofs = document.querySelectorAll('.item__proof');\n\n  // Set default on load\n  proofs.forEach(proof => {\n    proof.classList.add('ratio-letter');\n  });\n\n  select.addEventListener('change', (e) => {\n    const ratio = e.target.value;\n    proofs.forEach(proof => {\n      // Remove existing ratio classes\n      proof.classList.remove('ratio-letter', 'ratio-a4');\n      \n      // Add new ratio class\n      switch(ratio) {\n        case '8.5:11':\n          proof.classList.add('ratio-letter');\n          break;\n        case '7:10':\n          proof.classList.add('ratio-a4');\n          break;\n      }\n    });\n\n    // Optionally save preference\n    localStorage.setItem('preferred-ratio', ratio);\n  });\n\n  // Restore saved preference if it exists\n  const savedRatio = localStorage.getItem('preferred-ratio');\n  if (savedRatio) {\n    select.value = savedRatio;\n    select.dispatchEvent(new Event('change'));\n  }\n};\n\n// Use the imported function where needed\nconst getFontSize = (text, ratio = 1.618) => {\n  const sizes = calculateTypeScale(14, ratio);\n  const length = text.length;\n  \n  if (length <= 5) return sizes[0];        // Largest size\n  if (length <= 15) return sizes[1];       // Second largest\n  if (length <= 30) return sizes[2];       // Third largest\n  if (length <= 100) return sizes[3];      // Medium\n  if (length <= 250) return sizes[4];      // Second smallest\n  return sizes[5];                         // Smallest/base size\n};\n\n// Update your proof generation to use the selected scale\nconst generateProof = (text, options = {}) => {\n  const typeScale = parseFloat(document.getElementById('select__type-scale')?.value || 1.618);\n  const fontSize = getFontSize(text, typeScale);\n  \n  // ... rest of your proof generation code ...\n};\n\n// Add this function to initialize the type scale on page load\nconst initTypeScale = () => {\n  const ratio = parseFloat(document.getElementById('select__type-scale')?.value || 1.618);\n  const baseSize = parseFloat(document.getElementById('input__base-font-size')?.value || 14);\n  \n  document.querySelectorAll('.item').forEach(item => {\n    const itemID = item.id;\n    const testarea = item.querySelector('.testarea');\n    const text = testarea?.textContent || '';\n    \n    // Always calculate the initial size based on current settings\n    const newSize = whichFontSize(text, baseSize, ratio);\n    localStorage.setItem(`${itemID}-fontSize`, newSize);\n    \n    if (testarea) {\n      testarea.style.fontSize = `${newSize}pt`;\n    }\n    \n    // Update fontSize slider and its value display\n    const fontSizeSlider = item.querySelector(`#${itemID}-fontSize`);\n    const fontSizeVal = item.querySelector(`#${itemID}-fontSize-val`);\n    if (fontSizeSlider) {\n      fontSizeSlider.value = newSize;\n    }\n    if (fontSizeVal) {\n      fontSizeVal.textContent = `${newSize}pt`;\n    }\n\n    // Update the testarea-values display\n    const valuesDisplay = item.querySelector('.testarea-values');\n    if (valuesDisplay) {\n      const currentStyles = {\n        'font-size': `${newSize}pt`,\n        'line-height': testarea?.style.lineHeight || '1.2',\n        'letter-spacing': testarea?.style.letterSpacing || '0em'\n      };\n\n      const inlineStyle = Object.entries(currentStyles)\n        .map(([prop, val]) => `${prop}: ${val}`)\n        .join('; ');\n\n      valuesDisplay.innerHTML = generateTestAreaValues(inlineStyle);\n    }\n  });\n};\n\n// New function to update all proofs when either base size or ratio changes\nconst updateAllTypeScales = () => {\n\tconst ratio = parseFloat(document.getElementById('select__type-scale')?.value || 1.618);\n\tconst baseSize = parseFloat(document.getElementById('input__base-font-size')?.value || 14);\n\t\n\tlocalStorage.setItem('preferred-scale', ratio);\n\t\n\tdocument.querySelectorAll('.item').forEach(item => {\n\t\tconst itemID = item.id;\n\t\tconst testarea = item.querySelector('.testarea');\n\t\tconst text = testarea?.textContent || '';\n\t\tconst newSize = whichFontSize(text, baseSize, ratio);\n\t\t\n\t\t// Update the testarea font size\n\t\tif (testarea) {\n\t\t\ttestarea.style.fontSize = `${newSize}pt`;\n\t\t}\n\t\t\n\t\t// Update fontSize slider and its value display\n\t\tconst fontSizeSlider = item.querySelector(`#${itemID}-fontSize`);\n\t\tconst fontSizeVal = item.querySelector(`#${itemID}-fontSize-val`);\n\t\tif (fontSizeSlider) {\n\t\t\tfontSizeSlider.value = newSize;\n\t\t\tlocalStorage.setItem(`${itemID}-fontSize`, newSize);\n\t\t}\n\t\tif (fontSizeVal) {\n\t\t\tfontSizeVal.textContent = `${newSize}pt`;\n\t\t}\n\n\t\t// Update the testarea-values display\n\t\tconst valuesDisplay = item.querySelector('.testarea-values');\n\t\tif (valuesDisplay) {\n\t\t\tconst currentStyles = {\n\t\t\t\t'font-size': `${newSize}pt`,\n\t\t\t\t'line-height': testarea?.style.lineHeight || '1.2',\n\t\t\t\t'letter-spacing': testarea?.style.letterSpacing || '0em'\n\t\t\t};\n\n\t\t\tconst inlineStyle = Object.entries(currentStyles)\n\t\t\t\t.map(([prop, val]) => `${prop}: ${val}`)\n\t\t\t\t.join('; ');\n\n\t\t\tvaluesDisplay.innerHTML = generateTestAreaValues(inlineStyle);\n\t\t}\n\t});\n};\n\nconst applyNameAndVersion = (isChecked) => {\n  const headerNames = document.getElementById('section__header-names');\n  const proofItems = document.querySelectorAll('.item__proof');\n\n  proofItems.forEach(item => {\n    // Remove any existing footer\n    const existingFooter = item.querySelector('.proof-footer');\n    if (existingFooter) {\n      existingFooter.remove();\n    }\n\n    if (isChecked) {\n      // Create new footer\n      const footer = document.createElement('div');\n      footer.className = 'proof-footer';\n      footer.innerHTML = headerNames.innerHTML;\n      item.appendChild(footer);\n    }\n  });\n};\n\nconst toggleNameAndVersion = (event) => {\n  const isChecked = event.target.checked;\n  localStorage.setItem('showNameAndVersion', isChecked);\n  applyNameAndVersion(isChecked);\n};\n\nconst applyLockProofDimensions = (isChecked) => {\n  document.querySelectorAll('.item__proof').forEach(proof => {\n    if (isChecked) {\n      proof.classList.add('locked-dimensions');\n    } else {\n      proof.classList.remove('locked-dimensions');\n    }\n  });\n};\n\nconst toggleLockProofDimensions = (event) => {\n  const isChecked = event.target.checked;\n  localStorage.setItem('lockProofDimensions', isChecked);\n  applyLockProofDimensions(isChecked);\n};\n","import { CONFIG } from './config.js';\nimport * as AppCore from './app-core.js';\nimport { localStorageClear, saveEditableContent, saveInputValue } from './utils.js';\n\n// Global error handlers\nwindow.addEventListener('unhandledrejection', function(event) {\n  console.error('Unhandled promise rejection:', event.reason);\n});\n\nwindow.addEventListener('error', function(event) {\n  console.error('Uncaught error:', event.error);\n});\n\n// Make functions globally available\nwindow.setFont = AppCore.setFont;\nwindow.onReadFile = AppCore.onReadFile;\nwindow.setStage = AppCore.setStage;\nwindow.passStyleValue = AppCore.passStyleValue;\nwindow.passfvarValue = AppCore.passfvarValue;\nwindow.passfeatValue = AppCore.passfeatValue;\nwindow.insertField = AppCore.insertField;\nwindow.localStorageClear = localStorageClear;\nwindow.saveEditableContent = saveEditableContent;\nwindow.saveInputValue = saveInputValue;\n\nconst init = (forceServerLoad = false) => {\n\ttry {\n\t  if (forceServerLoad || !['localhost', '127.0.0.1', ''].includes(location.hostname)) {\n\t\tAppCore.serverLoad();\n\t  } else {\n\t\tAppCore.localLoad();\n\t  }\n  \n\t  AppCore.setupEventListeners();\n\t  document.body.classList.add('loaded');\n  \n\t} catch (error) {\n\t  console.error('Error during initialization:', error);\n\t}\n  };\n\ndocument.addEventListener('DOMContentLoaded', () => init(false));"],"names":["showErrorMessage","message","el","document","getElementById","style","display","trim","length","textContent","console","error","localStorageClear","localStorage","clear","setItem","location","reload","toggleMode","body","newMode","getItem","removeAttribute","querySelector","setAttribute","toggleSettingsVisibility","settingsToggle","classList","toggle","whichFontSize","text","baseSize","arguments","undefined","ratio","toString","sizes","Math","round","pow","calculateTypeScale","charCount","saveData","id","value","Storage","content","getStoredContent","elementId","defaultContent","_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","asyncGeneratorStep","_asyncToGenerator","apply","_next","_throw","font","onFontLoaded","loadedFont","fontFamilySource","fontFamily","_ref","_callee","reject","fontFace","fontFaceRule","_context","log","concat","window","FontFace","format","outlinesFormat","load","fonts","add","createElement","head","appendChild","ready","displayFontData","includes","hostname","pendingStage","setStage","t0","_x","_x2","onReadFile","event","files","target","fileButtonParent","innerHTML","navGroup","generateFontNavigation","generateFontButtons","Array","from","container","firstButton","click","setFont","_ref3","_callee3","fontPath","fontName","headerNames","_context3","opentype","err","querySelectorAll","item","existingFooter","remove","footer","className","_x4","_x5","_ref4","_callee4","tablename","styles","nameHtml","postScriptName","version","formattedVersion","modifiedDate","formattedDate","_context4","tables","t1","names","en","fontRevision","modified","Date","toLocaleDateString","proofingPhase","_x6","stage","article","stageButtons","warn","fetch","response","json","proof","html","generateStageHtml","buttonHtml","generateStageButtons","initTypeScale","showNameAndVersion","applyNameAndVersion","lockDimensions","applyLockProofDimensions","gsubFeatures","gsub","features","taglist","filter","feature","tag","map","title","textClass","testAreaID","itemID","sliderID","_getStoredStyles","getStoredStyles","fontSize","lineHeight","letterSpacing","fvarStyle","inlineStyle","generateFvarStyle","generateSliders","generateVariableSliders","generateStyleButtons","generateFeatureCheckboxes","generateProofContent","parseFloat","_document$getElementB","_document$querySelect","columnCount","columnGap","fvar","axes","axis","storedValue","defaultValue","join","minValue","maxValue","generateFontButton","_ref5","_callee5","mode","fontType","isVariable","button","_args5","_context5","replace","split","toUpperCase","isVariableFont","URL","createObjectURL","onclick","btn","_x7","_ref6","_callee6","arrayBuffer","parsedFont","_context6","parse","_x8","updateColumns","passStyleValue","uniqueTags","Set","sample","savedContent","savedTitle","generateTestAreaValues","styleMap","property","_style$split$map2","_slicedToArray","label","formattedValue","formatStyleValue","updateInlineText","currentStyles","entries","_ref7","_ref8","prop","val","elementIdSuffix","element","testarea","updateActiveButton","wrapper","closest","sibling","currentStage","localLoad","data","arr","uniqueFonts","sort","preventDefaults","preventDefault","stopPropagation","highlight","unhighlight","handleDrop","handleFiles","dataTransfer","filesOrEvent","Event","uploadPromises","file","setTimeout","uploadFile","all","handleFileButtonClick","contains","parentNode","children","child","handleStageButtonClick","toggleToolsVisibility","setupPasteHandling","addEventListener","clipboardData","getData","selection","getSelection","rangeCount","range","getRangeAt","deleteContents","insertNode","createTextNode","dispatchEvent","_ref9","_callee7","chipsContainer","_iterator","_step","_font2","_args7","_context7","_createForOfIteratorHelper","_x9","prevButton","navigateFonts","nextButton","direction","buttons","activeButton","currentIndex","indexOf","_document$getElementB4","_document$getElementB5","newSize","fontSizeSlider","fontSizeVal","valuesDisplay","_ref10","_ref11","updateAllTypeScales","_document$getElementB6","_document$getElementB7","_ref12","_ref13","isChecked","toggleNameAndVersion","checked","toggleLockProofDimensions","reason","AppCore","passfvarValue","fvarSupport","fvarcss","_document$getElementB2","tagValue","fontVariationSettings","passfeatValue","featureSupport","featSupport","featcss","fontFeatureSettings","insertField","aboveHere","original","clone","cloneNode","now","input","insertBefore","height","overflow","transition","scrollHeight","saveEditableContent","innerText","saveInputValue","init","forceServerLoad","dragDropArea","fileInput","eventName","fileButtons","toolsToggle","modeToggle","localStorageClearButton","addNameAndVersionCheckbox","lockProofDimensionsCheckbox","savedState","aspectRatioSelect","savedRatio","baseFontInput","savedBaseSize","savedMode","typeScaleSelect"],"sourceRoot":""}