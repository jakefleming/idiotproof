{"version":3,"file":"application.js","mappings":"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","sources":["webpack://idiotproof/webpack/bootstrap","webpack://idiotproof/webpack/runtime/define property getters","webpack://idiotproof/webpack/runtime/hasOwnProperty shorthand","webpack://idiotproof/webpack/runtime/make namespace object","webpack://idiotproof/./src/js/utils.js","webpack://idiotproof/./src/js/config.js","webpack://idiotproof/./src/js/app-core.js","webpack://idiotproof/./src/js/index.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { CONFIG } from './config.js';\n  \n  // utils.js\n  export const getFormattedDate = () => {\n    const now = new Date();\n    return now.toJSON().slice(0, 10).replace(/-/g, '/');\n  };\n  \n  export const preserveUnique = (arr) => {\n    return [...new Set(arr)];\n  };\n  \n  export const showErrorMessage = (message) => {\n    const el = document.getElementById('message');\n    el.style.display = message && message.trim().length > 0 ? 'block' : 'none';\n    el.textContent = message;\n  };\n  \n  export const uint8ToBase64 = (buffer) => {\n    return btoa(String.fromCharCode.apply(null, new Uint8Array(buffer)));\n  };\n  \n  export const sanitizeId = (id) => {\n    return id.replace(/[^a-z0-9]/gi, '_').toLowerCase();\n  };\n\n  export const localStorageClear = () => {\n    localStorage.clear();\n    localStorage.setItem('proofingPhase', CONFIG.defaultProofingPhase);\n    location.reload();\n  };\n\n  export function toggleMode() {\n\tconst body = document.body;\n\tif (body.getAttribute('data-theme') === 'dark') {\n\t  body.removeAttribute('data-theme');\n\t  document.querySelector('#btn__mode-toggle .material-symbols-outlined').textContent = 'light_mode';\n\t} else {\n\t  body.setAttribute('data-theme', 'dark');\n\t  document.querySelector('#btn__mode-toggle .material-symbols-outlined').textContent = 'dark_mode';\n\t}\n  }\n\n  export function toggleUi() {\n\tconst toggleUIButton = document.getElementById('btn__ui-toggle');\n\tconst body = document.body;\n  \n\tbody.classList.toggle('ui-hidden');\n\tthis.classList.toggle('ui-hidden');\n\t\n\t// Optionally, you can save the state to localStorage\n\tlocalStorage.setItem('uiHidden', body.classList.contains('ui-hidden'));\n  \n\t// Check if the UI was hidden in a previous session\n\tif (localStorage.getItem('uiHidden') === 'true') {\n\t  body.classList.add('ui-hidden');\n\t  toggleUIButton.classList.add('ui-hidden');\n\t}\n  }\n  \n  export const whichFontSize = (string) => {\n    const sizes = {\n      't__size-xxl': '140',\n      't__size-xl': '100',\n      't__size-l': '84',\n      't__size-m': '56',\n      't__size-s': '28',\n      't__size-xs': '14',\n    };\n  \n    if (sizes[string]) return sizes[string];\n  \n    const charCount = string.length;\n    if (charCount < 25) return 't__size-xxl';\n    if (charCount < 50) return 't__size-xl';\n    if (charCount < 95) return 't__size-l';\n    if (charCount < 200) return 't__size-m';\n    if (charCount < 1000) return 't__size-s';\n    return 't__size-xs';\n  };\n  \n  export const removeElementsByClass = (className) => {\n    document.querySelectorAll(`.${className}`).forEach(el => el.remove());\n  };\n  \n  export const removeElementById = (id) => {\n    const element = document.getElementById(id);\n    if (element) {\n      element.style.transition = 'opacity 0.5s ease';\n      element.style.opacity = '0';\n      setTimeout(() => element.remove(), 500);\n    }\n  };\n  \n  export const saveData = (id, value) => {\n    if (typeof Storage !== 'undefined') {\n      if (value !== 'thisContent') {\n        localStorage.setItem(id, value);\n      } else {\n        const content = document.getElementById(id).textContent;\n        localStorage.setItem(id, content);\n      }\n    }\n  };\n  ","// config.js\nexport const CONFIG = {\n    defaultProofingPhase: 'Hamburgers',\n    fontFormats: {\n      truetype: 'ttf',\n      opentype: 'otf',\n    },\n    jsonPath: 'src/js/proof.json',\n  };","import { CONFIG } from './config.js';\nimport { getFormattedDate,\n\tpreserveUnique,\n\tshowErrorMessage,\n\tuint8ToBase64,\n\tlocalStorageClear,\n\twhichFontSize,\n\tremoveElementsByClass,\n\tsaveData,\n\ttoggleMode,\n\ttoggleUi  } from './utils.js';\n\nlet font = null;\nconst fontFormats = {\n    truetype: 'ttf',\n    opentype: 'otf',\n};\n\nexport const onFontLoaded = (loadedFont, fontFamilySource, fontFamily) => {\n\treturn new Promise((resolve, reject) => {\n\t  try {\n\t\tfont = loadedFont;\n\t\twindow.URL.createObjectURL(new Blob([font], { type: 'application/zip' }));\n\t\twindow.fontFamily = fontFamily;\n\t\n\t\tdisplayFontData(fontFamily);\n\t\n\t\tif (['localhost', '127.0.0.1', ''].includes(location.hostname)) {\n\t\tlocalStorage.setItem('fontFamily', fontFamily);\n\t\tlocalStorage.setItem('fontFamilySource', fontFamilySource);\n\t\t}\n\t\n\t\t// If there's a pending stage, set it now\n\t\tif (window.pendingStage) {\n\t\tsetStage(window.pendingStage);\n\t\twindow.pendingStage = null;\n\t\t} else {\n\t\t// Set a default stage if none is pending\n\t\tsetStage('Hamburgers');  // or whatever your default stage should be\n\t\t}\n\t\tresolve();\n    } catch (error) {\n      reject(error);\n    }\n  });\n};\n\nexport const onReadFile = (event) => {\n\tconst files = event.target.files;\n\tconst fileButtonParent = document.getElementById('section__header-file-buttons');\n\tfileButtonParent.innerHTML = '';\n  \n\tArray.from(files).forEach(file => {\n\t  const fileButton = document.createElement('div');\n\t  fileButton.className = 'btn btn__setfont chip';\n\t  fileButton.textContent = file.name;\n\t  fileButton.onclick = () => readSingleFile(file);\n\t  fileButtonParent.appendChild(fileButton);\n\t});\n  };\n\nconst readSingleFile = (file) => {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    \n    reader.onload = async (e) => {\n      try {\n        const font = opentype.parse(e.target.result);\n        const fontFamily = font.names.postScriptName.en;\n        const fontFamilySource = `fonts/${fontFamily}`;\n        \n        await onFontLoaded(font, fontFamilySource, fontFamily);\n\n        font.file = {\n          name: file.name,\n          lastModified: file.lastModified,\n          size: file.size,\n          type: file.type,\n        };\n        font.type = 'user:local';\n\n        const tempUint8array = new Uint8Array(e.target.result);\n        document.getElementById('style__fontface').innerHTML = \n          `@font-face {font-family:'${fontFamily}'; src: url('data:;base64,${uint8ToBase64(tempUint8array)}') format('truetype');}`;\n\n        showErrorMessage('');\n        resolve();\n      } catch (err) {\n        showErrorMessage(err.toString());\n        console.error(err);\n        reject(err);\n      }\n    };\n\n    reader.onerror = (err) => {\n      showErrorMessage(err.toString());\n      reject(err);\n    };\n\n    reader.readAsArrayBuffer(file);\n  });\n};\n\nexport const setFont = (fontFamilySource, fontFamily) => {\n\topentype.load(fontFamilySource, (err, loadedFont) => {\n\t  if (err) {\n\t\tconsole.error('Error loading font:', err);\n\t\tshowErrorMessage(`Error loading font: ${err}`);\n\t  } else {\n\t\tfont = loadedFont; // Ensure this is set globally\n\t\ttry {\n\t\t  onFontLoaded(loadedFont, fontFamilySource, fontFamily);\n\t\t  // After the font is loaded and processed, set the stage\n\t\t  setStage(localStorage.getItem('proofingPhase') || 'Hamburgers');\n\t\t} catch (error) {\n\t\t  console.error('Error in onFontLoaded:', error);\n\t\t  showErrorMessage(`Error processing font: ${error}`);\n\t\t}\n\t  }\n\t});\n  };\n\nexport const displayFontData = (fontFamily) => {\n    var tablename, table, property, value, tag;\n    var styles = '';\n\n    for (tablename in font.tables) {\n        table = font.tables[tablename];\n\n        if (tablename === 'cmap') {\n            var gim = font.tables.cmap.glyphIndexMap;\n            var gimLength = Object.keys(gim).length;\n            if (gimLength <= 100) {\n                window.proofingPhase = \"Hamburgers\";\n            } else if (gimLength >= 400) {\n                window.proofingPhase = \"Diacritics\";\n            } else {\n                window.proofingPhase = \"Spacing\";\n            }\n        }\n        // Determine if TTF or OTF\n        var fontFormat = font.outlinesFormat;\n        fontFormat = fontFormats[fontFormat];\n        // Inserting header data: font name, foundry name, etc.\n        if (tablename === 'name') {\n                let nameHtml = '';\n                if (font.names.designer) {\n                    var designerName = font.names.designer.en;\n                } else {\n                    var designerName = \"No Designer Name :(\";\n                }\n                if (font.names.postScriptName) {\n                    var postScriptName = font.names.postScriptName.en;\n                } else {\n                    var postScriptName = \"Font Name\";\n                }\n                nameHtml += '<div class=\"section__header-name d-flex-grow t__left\" contenteditable=\"true\" spellcheck=\"false\">'+designerName+'</div>';\n\n                nameHtml += '<div class=\"section__header-name d-flex-grow t__center\" spellcheck=\"false\">'+postScriptName+'</div>';\n                styles += `.t__importedfontfamily { font-family: \"${fontFamily}\" }`;\n                nameHtml += '<div class=\"section__header-name  d-flex-grow t__right\">'+getFormattedDate()+'</div>';\n                document.getElementById('section__header-names').innerHTML = nameHtml;\n                continue;\n        }\n    }\n    //Inject css of necessary features\n    document.getElementById('style__fontfamily').innerHTML = styles;\n    \n    //setStage\n    if (localStorage.getItem('proofingPhase')) {\n            // Check for local storage settings\n            setStage(localStorage.getItem('proofingPhase'));\n    } else {\n            setStage(window.proofingPhase);\n    }\n};\n\nexport const setStage = (stage) => {\n\tconst article = document.getElementById('section__article-app');\n\tconst stageButtons = document.getElementById('section__header-stage-buttons');\n\t\n\tif (!font) {\n\t  console.warn('Font not loaded yet. Deferring stage setting.');\n\t  // Store the stage to set later\n\t  window.pendingStage = stage;\n\t  return;\n\t}\n  \n\tfetch(CONFIG.jsonPath)\n\t  .then(response => response.json())\n\t  .then(proof => {\n\t\tconst html = generateStageHtml(proof, stage);\n\t\tconst buttonHtml = generateStageButtons(proof, stage);\n  \n\t\tarticle.innerHTML = html;\n\t\tstageButtons.innerHTML = buttonHtml;\n\t\tdocument.getElementById('style__opentype-features').innerHTML = '';\n\t\t\n\t\tsaveData('proofingPhase', stage);\n\t  })\n\t  .catch(error => console.error('Error loading JSON:', error));\n  };\n  \n  const generateStageHtml = (proof, stage) => {\n    if (!proof[stage]) {\n      return '<div class=\"item d-flex t__center\"><div class=\"item__proof\">No features found! :...(</div></div>';\n    }\n  \n    const gsubFeatures = font.tables.gsub.features;\n    const taglist = Object.values(gsubFeatures)\n\t\t.filter(feature => typeof feature === 'object' && feature.tag)\n\t\t.map(feature => feature.tag)\n\t\t.filter(tag => proof[\"Features\"][tag] !== undefined);\n  \n    let html = '';\n  \n    for (const title in proof[stage]) {\n      if (stage === \"Features\" && !taglist.includes(title)) {\n        continue;\n      }\n  \n      const textClass = whichFontSize(proof[stage][title]);\n      const testAreaID = `section__proofing-${title}`;\n      const itemID = `item--${title}`;\n      const sliderID = `${itemID}`;\n      \n      const { fontSize, lineHeight, letterSpacing, inlineStyle } = getStoredStyles(sliderID, textClass);\n      const fvarStyle = generateFvarStyle(itemID);\n  \n      html += `\n        <div id=\"${itemID}\" class=\"item\">\n          <button class=\"btn btn-link add-item-above chip\" onclick=\"insertField('${itemID}')\">+ Add Proof Window</button>\n          <div class=\"item__container d-flex\">\n            <div class=\"item__sliders pt-2\">\n              <div class=\"item__sliders-wrapper\">\n                ${generateSliders(itemID, sliderID, fontSize, lineHeight, letterSpacing)}\n                ${generateVariableSliders(itemID, sliderID)}\n                ${generateStyleButtons(itemID)}\n                ${generateFeatureCheckboxes(itemID, proof, taglist)}\n                <button class=\"btn btn-secondary mr-1 mb-1 mt-6\" title=\"Apply these styles to all visible proof sheets.\" onclick=\"passStyleValue('${itemID}','idiocracy','global')\">Global Idiocracy</button>\n              </div>\n            </div>\n            <div class=\"item__proof\">\n              <button class=\"btn btn-link remove-item-this invisible\" onclick=\"removeElementsByID('${itemID}')\">×</button>\n              ${generateProofContent(stage, title, proof, testAreaID, inlineStyle, fvarStyle, textClass)}\n            </div>\n          </div>\n        </div>\n      `;\n    }\n\treturn html;\n  };\n  \n  const getStoredStyles = (sliderID, textClass) => {\n    const fontSize = localStorage.getItem(`${sliderID}-fontSize-val`) || whichFontSize(textClass);\n    const lineHeight = localStorage.getItem(`${sliderID}-lineHeight-val`) || '1.2';\n    const letterSpacing = localStorage.getItem(`${sliderID}-letterSpacing-val`) || '0em';\n  \n    const inlineStyle = `\n      font-size: ${fontSize}pt;\n      line-height: ${lineHeight};\n      letter-spacing: ${letterSpacing};\n    `;\n  \n    return { fontSize, lineHeight, letterSpacing, inlineStyle };\n  };\n  \n  const generateFvarStyle = (itemID) => {\n    let fvarStyle = '';\n    if (font.tables.fvar) {\n      const fvarSupport = font.tables.fvar.axes.map(axis => axis.tag);\n      fvarStyle = 'font-variation-settings: ' + \n        font.tables.fvar.axes.map(axis => {\n          const storedValue = localStorage.getItem(`${itemID}-slider-${axis.tag}-val`);\n          const value = storedValue !== null ? storedValue : axis.defaultValue;\n          return `'${axis.tag}' ${value}`;\n        }).join(', ') + ';';\n    }\n    return fvarStyle;\n  };\n  \n  const generateSliders = (itemID, sliderID, fontSize, lineHeight, letterSpacing) => `\n    <label for=\"${sliderID}-fontSize\">Font Size </label>\n    <span class=\"t__right text-small\" id=\"${sliderID}-fontSize-val\">${fontSize}pt</span>\n    <input id=\"${sliderID}-fontSize\" type=\"range\" class=\"slider\" min=\"4\" max=\"160\" step=\"2\" value=\"${fontSize}\" oninput=\"passStyleValue('${itemID}', 'fontSize', this.value)\">\n    \n    <label for=\"${sliderID}-lineHeight\">Line Height </label>\n    <span class=\"t__right text-small\" id=\"${sliderID}-lineHeight-val\">${lineHeight}</span>\n    <input id=\"${sliderID}-lineHeight\" type=\"range\" class=\"slider\" min=\"0.6\" max=\"3.0\" step=\"0.01\" value=\"${lineHeight}\" oninput=\"passStyleValue('${itemID}', 'lineHeight', this.value)\">\n    \n    <label for=\"${sliderID}-letterSpacing\">Letter Spacing </label>\n    <span class=\"t__right text-small\" id=\"${sliderID}-letterSpacing-val\">${letterSpacing}</span>\n    <input id=\"${sliderID}-letterSpacing\" type=\"range\" class=\"slider\" min=\"-0.4\" max=\"0.4\" step=\"0.01\" value=\"${letterSpacing}\" oninput=\"passStyleValue('${itemID}', 'letterSpacing', this.value)\">\n  `;\n  \n  const generateVariableSliders = (itemID, sliderID) => {\n    if (!font.tables.fvar) return '';\n  \n    return font.tables.fvar.axes.map(axis => {\n      const storedValue = localStorage.getItem(`${itemID}-slider-${axis.tag}-val`);\n      const value = storedValue !== null ? storedValue : axis.defaultValue;\n      return `\n        <label for=\"${sliderID}-${axis.tag}\">${axis.name.en} </label>\n        <span class=\"t__right text-small\" id=\"${sliderID}-${axis.tag}-val\">${value}</span>\n        <input id=\"${sliderID}-${axis.tag}\" type=\"range\" class=\"slider\" min=\"${axis.minValue}\" max=\"${axis.maxValue}\" value=\"${value}\" oninput=\"passfvarValue('${itemID}', '${axis.tag}', this.value, '${font.tables.fvar.axes.map(a => a.tag).join(',')}')\">\n      `;\n    }).join('');\n  };\n  \n  const generateFontButtons = (fonts) => {\n\treturn fonts.map(font => {\n\t  const fontName = font.replace('.', '-');\n\t  const fontType = font.split('.').pop();\n\t  const displayName = font.replace('-', ' ').replace(/\\.[^/.]+$/, \"\");\n\t  return `<div class=\"btn__setfont chip btn d-flex justify-content-between\" title=\"${font}\" id=\"btn__setfont-${fontName}\" onclick=\"setFont('fonts/${font}', '${fontName}')\">${displayName}<span class=\"d-flex-grow text-small text-right\">${fontType}</span></div>`;\n\t}).join('');\n  };\n  \n  const generateFontFaces = (fonts) => {\n\treturn fonts.map(font => {\n\t  const fontName = font.replace('.', '-');\n\t  return `@font-face { font-family: \"${fontName}\"; src: url(\"fonts/${font}\");}`;\n\t}).join('\\n');\n  };\n\n  const generateStyleButtons = (itemID) => `\n    <div id=\"btn__wrapper-case\">\n\t\t<label>Case</label>\n\t\t<div class=\"d-flex g-1 btn__wrapper\">\n      \t\t<button class=\"btn btn-link textTransform-uppercase\" title=\"Uppercase\" onclick=\"passStyleValue('${itemID}','textTransform', 'uppercase')\">TT</button>\n      \t\t<button class=\"btn btn-link textTransform-capitalize\" title=\"Capitalize\" onclick=\"passStyleValue('${itemID}','textTransform', 'capitalize')\">Tt</button>\n      \t\t<button class=\"btn btn-link textTransform-lowercase\" title=\"Lowercase\" onclick=\"passStyleValue('${itemID}','textTransform', 'lowercase')\">tt</button>\n\t\t</div>\n    </div>\n    <div id=\"btn__wrapper-columns\">\n\t\t<label>Columns</label>\n\t\t<div class=\"d-flex g-1 btn__wrapper\">\n      \t\t<button class=\"btn btn-link column-count-1\" title=\"1 column layout\" onclick=\"passStyleValue('${itemID}','column-count', '1')\"><span class=\"material-symbols-outlined\">subject</span></button>\n      \t\t<button class=\"btn btn-link column-count-2\" title=\"2 column layout\" onclick=\"passStyleValue('${itemID}','column-count', '2')\"><span class=\"material-symbols-outlined\">view_column_2</span></button>\n      \t\t<button class=\"btn btn-link column-count-3\" title=\"3 column layout\" onclick=\"passStyleValue('${itemID}','column-count', '3')\"><span class=\"material-symbols-outlined\">view_week</span></button>\n\t\t</div>\n    </div>\n  `;\n  \n  const generateFeatureCheckboxes = (itemID, proof, taglist) => {\n\tconst uniqueTags = [...new Set(taglist)];\n\treturn `\n\t<label>Features</label>  \n\t<div class=\"btn__wrapper d-flex flex-column g-1\">\n\t\t${uniqueTags.map(tag => {\n\t\t  const name = proof[\"Features\"][tag][\"abstract\"];\n\t\t  return `\n\t\t\t<div class=\"btn__setfont d-flex justify-content-between\">\n\t\t\t  <input id=\"${itemID}-checkbox-${tag}\" type=\"checkbox\" onclick=\"passfeatValue('${itemID}', '${tag}', '${uniqueTags.join(',')}')\">\n\t\t\t  ${name}<span class=\"d-flex-grow text-right text-small\">${tag}</span>\n\t\t\t</div>\n\t\t  `;\n\t\t}).join('')}\n\t  </div>\n\t`;\n  };\n  \n  const generateProofContent = (stage, title, proof, testAreaID, inlineStyle, fvarStyle, textClass) => {\n    if (stage === \"Features\") {\n      const definition = proof[stage][title].definition;\n      const sample = localStorage.getItem(testAreaID) || proof[stage][title].sample;\n      return `\n        <h6 class=\"h6\" title=\"${definition}\" contentEditable=\"true\" onkeyup=\"saveData('${testAreaID}-title', 'thisContent')\">${title}</h6>\n        <span class=\"testarea-values small\">${generateTestAreaValues(inlineStyle)}</span>\n        <div id=\"${testAreaID}\" style=\"${inlineStyle} ${fvarStyle}\" class=\"t__importedfontfamily ${textClass} testarea\" contenteditable=\"true\" spellcheck=\"false\" onkeyup=\"saveData('${testAreaID}', 'thisContent')\">\n          ${sample}\n        </div>\n      `;\n    } else {\n      const content = localStorage.getItem(testAreaID) || proof[stage][title];\n      return `\n        <h6 contentEditable=\"true\" onkeyup=\"saveData('${testAreaID}-title', 'thisContent')\">${title}</h6>\n        <span class=\"testarea-values small\">${generateTestAreaValues(inlineStyle)}</span>\n        <div id=\"${testAreaID}\" style=\"${inlineStyle} ${fvarStyle}\" class=\"t__importedfontfamily ${textClass} testarea\" contentEditable=\"true\" spellcheck=\"false\" onkeyup=\"saveData('${testAreaID}', 'thisContent')\">\n          ${content}\n        </div>\n      `;\n    }\n  };\n  \n  const generateTestAreaValues = (inlineStyle) => {\n    const styles = inlineStyle.split(';').filter(s => s.trim());\n    return styles.map(style => {\n      const [property, value] = style.split(':').map(s => s.trim());\n      return `<span class=\"${property}\">${property}: ${value}</span>`;\n    }).join(' ');\n  };\n  \n  const updateInlineText = (itemID, property, value) => {\n\tconst container = document.querySelector(`#${itemID} .testarea-values`);\n\tconst existingSpan = container.querySelector(`.${property}`);\n\t\n\tif (existingSpan) {\n\t  existingSpan.textContent = `${property}: ${value}`;\n\t} else {\n\t  const newSpan = document.createElement('span');\n\t  newSpan.className = property;\n\t  newSpan.textContent = `${property}: ${value}`;\n\t  container.appendChild(newSpan);\n\t}\n  };\n\n// Global functions\n\nexport const insertField = (aboveHere) => {\n\tconst original = document.getElementById(aboveHere);\n\tconst clone = original.cloneNode(true);\n\t\n\t// Reset any unique IDs or input values in the clone\n\tclone.id = `${aboveHere}-clone-${Date.now()}`;\n\tclone.querySelectorAll('[id]').forEach(el => {\n\t  el.id = `${el.id}-clone-${Date.now()}`;\n\t});\n\tclone.querySelectorAll('input').forEach(input => {\n\t  input.value = '';\n\t});\n  \n\toriginal.parentNode.insertBefore(clone, original);\n\t\n\t// Animate the insertion\n\tclone.style.height = '0px';\n\tclone.style.overflow = 'hidden';\n\tclone.style.transition = 'height 0.6s ease';\n\t\n\tsetTimeout(() => {\n\t  clone.style.height = `${clone.scrollHeight}px`;\n\t}, 0);\n\t\n\tsetTimeout(() => {\n\t  clone.style.height = 'auto';\n\t  clone.style.overflow = 'visible';\n\t}, 600);\n  };\n  \n  export const passStyleValue = (itemID, property, value) => {\n\tconst elementIdSuffix = `-${property}-val`;\n\tconst element = document.querySelector(`[id$=\"${itemID}${elementIdSuffix}\"]`);\n\t\n\tif (['fontSize', 'lineHeight', 'letterSpacing'].includes(property)) {\n\t  saveData(`${itemID}${elementIdSuffix}`, value);\n\t  if (property === 'fontSize') value += 'pt';\n\t  if (property === 'letterSpacing') value += 'em';\n\t  if (element) element.textContent = value;\n\t} else {\n\t  saveData(itemID + property, value);\n\t}\n  \n\tconst testarea = document.querySelector(`#${itemID} .testarea`);\n\tif (property === 'idiocracy') {\n\t  const css = testarea.getAttribute('style');\n\t  document.querySelectorAll('.testarea').forEach(el => el.setAttribute('style', css));\n\t} else {\n\t  testarea.style[property] = value;\n\t}\n  \n\tupdateInlineText(itemID, property, value);\n  \n\t// Only update active button for non-slider properties\n\tif (!['fontSize', 'lineHeight', 'letterSpacing'].includes(property)) {\n\t  updateActiveButton(property, value);\n\t}\n  };\n  \n  export const passfvarValue = (itemID, property, value, fvarSupport) => {\n\tconst element = document.getElementById(`${itemID}-slider-${property}-val`);\n\tif (element) element.textContent = value;\n\t\n\tsaveData(`${itemID}-slider-${property}-val`, value);\n\t\n\tconst fvarSupportArray = fvarSupport.split(',');\n\tlet fvarcss = fvarSupportArray.map(tag => {\n\t  const tagValue = tag === property ? value : document.getElementById(`${itemID}-slider-${tag}`).value;\n\t  return `'${tag}' ${tagValue}`;\n\t}).join(', ');\n  \n\tconst testarea = document.querySelector(`#${itemID} .testarea`);\n\ttestarea.style.fontVariationSettings = fvarcss;\n  \n\tupdateInlineText(itemID, 'fvar', fvarcss);\n  };\n  \n  export const passfeatValue = (itemID, feature, featureSupport) => {\n\tconst featSupport = featureSupport.split(',');\n\tlet featcss = \"\";\n  \n\tfor (let f = 0; f < featSupport.length; f++) {\n\t  if (document.getElementById(`${itemID}-checkbox-${featSupport[f]}`).checked) {\n\t\tfeatcss += `'${featSupport[f]}',`;\n\t  }\n\t}\n\tfeatcss = featcss.replace(/,\\s*$/, \"\");\n\tdocument.querySelector(`#${itemID} .testarea`).style.fontFeatureSettings = featcss;\n  };\n  \n  const updateActiveButton = (property, value) => {\n\tdocument.querySelectorAll(`.btn.${property}-${value}`).forEach(btn => {\n\t  btn.classList.add('active');\n\t  \n\t  // Find the parent wrapper\n\t  const wrapper = btn.closest('.btn__wrapper');\n\t  \n\t  if (wrapper) {\n\t\t// If we found a wrapper, remove 'active' class from all sibling buttons\n\t\twrapper.querySelectorAll('.btn').forEach(sibling => {\n\t\t  if (sibling !== btn) sibling.classList.remove('active');\n\t\t});\n\t  } else {\n\t\t// Fallback: remove 'active' class from all buttons with the same property\n\t\tdocument.querySelectorAll(`.btn[class*=\"${property}-\"]`).forEach(sibling => {\n\t\t  if (sibling !== btn) sibling.classList.remove('active');\n\t\t});\n\t  }\n\t});\n  };\n\n// generate buttons\nexport const generateStageButtons = (proof, currentStage) => {\n    return Object.keys(proof).map(stage => {\n      const isActive = stage === currentStage ? 'active' : '';\n      return `\n        <div class=\"tab-item ${isActive} tab__setstage\" onclick=\"setStage('${stage}')\">\n          <a href=\"#\" class=\"stage-button\">${stage}</a>\n        </div>\n      `;\n    }).join('');\n  };\n\n  // localload vs server\n\n  export const localLoad = () => {\n\tconst fileButtonParent = document.getElementById('section__header-file-buttons');\n\tfileButtonParent.innerHTML = 'Place fonts you want to proof into <code>/fonts</code> to begin';\n  \n\tfetch('../src/txt/fonts.txt')\n\t  .then(response => response.text())\n\t  .then(data => {\n\t\tconst fonts = data.split('fonts/')\n\t\t  .filter(font => font.trim() !== '')\n\t\t  .map(font => font.trim());\n  \n\t\tconst uniqueFonts = preserveUnique(fonts.sort());\n\t\tconst html = generateFontButtons(uniqueFonts);\n\t\tconst style = generateFontFaces(uniqueFonts);\n  \n\t\tfileButtonParent.innerHTML = html;\n\t\tdocument.getElementById('style__fontface').innerHTML += style;\n  \n\t\tconst fontFamilySource = localStorage.getItem('fontFamilySource') || `fonts/${uniqueFonts[uniqueFonts.length - 1]}`;\n\t\tconst fontFamily = localStorage.getItem('fontFamily') || fontFamilySource.replace('.', '-');\n  \n\t\tsetFont(fontFamilySource, fontFamily);\n\t  })\n\t  .catch(error => console.error('Error loading fonts:', error));\n  };\n  \n  export const serverLoad = () => {\n\tconst fileButtonParent = document.getElementById('section__header-file-buttons');\n\t\n\tsetFont('fonts/gooper-VF.ttf', 'gooper-VF-ttf');\n\tdocument.getElementById('style__fontface').innerHTML = '@font-face { font-family: \"gooper-VF-ttf\"; src: url(\"fonts/gooper-VF.ttf\");}';\n  \n\tconst fileInputHtml = `\n    <form class=\"box has-advanced-upload\" method=\"post\" action=\"\" enctype=\"multipart/form-data\">\n      <div class=\"box__input\">\n        <input id=\"fontInput\" class=\"box__file\" type=\"file\" name=\"files[]\" data-multiple-caption=\"{count} files selected\" multiple />\n      </div>\n    </form>\n  `;\n  \n  fileButtonParent.innerHTML = fileInputHtml;\n  document.getElementById('fontInput').addEventListener('change', onReadFile);\n};\n  \n  export const setupEventListeners = () => {\n\tconst fileButtons = document.getElementById('section__header-file-buttons');\n\tconst stageButtons = document.getElementById('section__header-stage-buttons');\n\tconst toolsToggle = document.getElementById('btn__view-tools-toggle');\n\tconst modeToggle = document.getElementById('btn__mode-toggle');\n\tconst localStorageClearButton = document.getElementById('btn__reset-local-storage');\n  \n\tif (fileButtons) {\n\t  fileButtons.addEventListener('click', handleFileButtonClick);\n\t}\n\tif (stageButtons) {\n\t  stageButtons.addEventListener('click', handleStageButtonClick);\n\t}\n\tif (toolsToggle) {\n\t  toolsToggle.addEventListener('click', toggleToolsVisibility);\n\t}\n\tif (modeToggle) {\n\t\tmodeToggle.addEventListener('click', toggleMode);\n\t}\n\tif (localStorageClearButton) {\n\t\tlocalStorageClearButton.addEventListener('click', localStorageClear);\n\t}\n  };\n  \n  const handleFileButtonClick = (event) => {\n\tif (event.target.classList.contains('btn__setfont')) {\n\t  event.target.classList.add('active', 'visited');\n\t  // Remove 'active' class from sibling elements\n\t  const siblings = Array.from(event.target.parentNode.children).filter(child => child !== event.target);\n\t  siblings.forEach(sibling => sibling.classList.remove('active'));\n\t}\n  };\n  \n  const handleStageButtonClick = (event) => {\n\tif (event.target.classList.contains('btn__setstage')) {\n\t  event.target.classList.add('active');\n\t  // Remove 'active' class from sibling elements\n\t  const siblings = Array.from(event.target.parentNode.children).filter(child => child !== event.target);\n\t  siblings.forEach(sibling => sibling.classList.remove('active'));\n\t}\n  };\n  \n  const toggleToolsVisibility = () => {\n\tdocument.body.classList.toggle('tools-visible');\n  };","import { CONFIG } from './config.js';\nimport * as AppCore from './app-core.js';\n\n// Global error handlers\nwindow.addEventListener('unhandledrejection', function(event) {\n  console.error('Unhandled promise rejection:', event.reason);\n});\n\nwindow.addEventListener('error', function(event) {\n  console.error('Uncaught error:', event.error);\n});\n\n// Make functions globally available\nwindow.setFont = AppCore.setFont;\nwindow.onReadFile = AppCore.onReadFile;\nwindow.setStage = AppCore.setStage;\nwindow.passStyleValue = AppCore.passStyleValue;\nwindow.passfvarValue = AppCore.passfvarValue;\nwindow.passfeatValue = AppCore.passfeatValue;\nwindow.insertField = AppCore.insertField;\nwindow.localStorageClear = AppCore.localStorageClear;\n\nconst init = () => {\n\ttry {\n\t  if (['localhost', '127.0.0.1', ''].includes(location.hostname)) {\n\t\tAppCore.localLoad();\n\t  } else {\n\t\tAppCore.serverLoad();\n\t  }\n  \n\t  AppCore.setupEventListeners();\n\t  document.body.classList.add('loaded');\n  \n\t} catch (error) {\n\t  console.error('Error during initialization:', error);\n\t}\n  };\n\ndocument.addEventListener('DOMContentLoaded', init);"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","showErrorMessage","message","el","document","getElementById","style","display","trim","length","textContent","localStorageClear","localStorage","clear","setItem","location","reload","toggleMode","body","getAttribute","removeAttribute","querySelector","setAttribute","whichFontSize","string","sizes","charCount","saveData","id","Storage","content","_regeneratorRuntime","e","t","r","n","i","a","iterator","c","asyncIterator","u","define","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","asyncGeneratorStep","font","fontFormats","truetype","opentype","onFontLoaded","loadedFont","fontFamilySource","fontFamily","reject","window","URL","createObjectURL","Blob","displayFontData","includes","hostname","pendingStage","setStage","error","onReadFile","event","files","target","fileButtonParent","innerHTML","Array","from","file","fileButton","createElement","className","onclick","readSingleFile","appendChild","reader","FileReader","onload","_ref","_callee","_font","tempUint8array","_context","parse","result","names","postScriptName","en","concat","lastModified","size","Uint8Array","buffer","btoa","String","fromCharCode","apply","t0","toString","console","arguments","_next","_throw","_x","onerror","err","readAsArrayBuffer","setFont","load","getItem","tablename","styles","tables","gim","cmap","glyphIndexMap","gimLength","proofingPhase","fontFormat","outlinesFormat","nameHtml","designer","designerName","Date","toJSON","replace","stage","article","stageButtons","warn","fetch","response","json","proof","html","generateStageHtml","buttonHtml","generateStageButtons","gsubFeatures","gsub","features","taglist","filter","feature","tag","map","undefined","title","textClass","testAreaID","itemID","sliderID","_getStoredStyles","getStoredStyles","fontSize","lineHeight","letterSpacing","inlineStyle","fvarStyle","generateFvarStyle","generateSliders","generateVariableSliders","generateStyleButtons","generateFeatureCheckboxes","generateProofContent","fvar","axes","axis","storedValue","defaultValue","join","minValue","maxValue","uniqueTags","Set","sample","generateTestAreaValues","split","_style$split$map2","property","updateInlineText","container","existingSpan","newSpan","insertField","aboveHere","original","clone","cloneNode","now","querySelectorAll","input","parentNode","insertBefore","height","overflow","transition","setTimeout","scrollHeight","passStyleValue","elementIdSuffix","element","testarea","css","updateActiveButton","passfvarValue","fvarSupport","fvarcss","tagValue","fontVariationSettings","passfeatValue","featureSupport","featSupport","featcss","checked","fontFeatureSettings","btn","classList","add","wrapper","closest","sibling","remove","currentStage","localLoad","text","data","arr","fonts","uniqueFonts","sort","fontName","fontType","generateFontButtons","generateFontFaces","serverLoad","addEventListener","setupEventListeners","fileButtons","toolsToggle","modeToggle","localStorageClearButton","handleFileButtonClick","handleStageButtonClick","toggleToolsVisibility","contains","children","child","toggle","reason","AppCore"],"sourceRoot":""}