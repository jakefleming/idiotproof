{"version":3,"file":"application.js","mappings":"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","sources":["webpack://idiotproof/webpack/bootstrap","webpack://idiotproof/webpack/runtime/define property getters","webpack://idiotproof/webpack/runtime/hasOwnProperty shorthand","webpack://idiotproof/webpack/runtime/make namespace object","webpack://idiotproof/./src/js/utils.js","webpack://idiotproof/./src/js/config.js","webpack://idiotproof/./src/js/app-core.js","webpack://idiotproof/./src/js/index.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { CONFIG } from './config.js';\n  \n  // utils.js\n  export const getFormattedDate = () => {\n    const now = new Date();\n    return now.toJSON().slice(0, 10).replace(/-/g, '/');\n  };\n  \n  export const preserveUnique = (arr) => {\n    return [...new Set(arr)];\n  };\n  \n  export const showErrorMessage = (message) => {\n    const el = document.getElementById('message');\n    if (el) {\n      el.style.display = message && message.trim().length > 0 ? 'block' : 'none';\n      el.textContent = message;\n    } else {\n      console.error('Message element not found. Error message:', message);\n    }\n  };\n  \n  export const uint8ToBase64 = (buffer) => {\n    const chunk = 8192;\n    let result = '';\n    for (let i = 0; i < buffer.length; i += chunk) {\n      const slice = buffer.subarray(i, i + chunk);\n      result += String.fromCharCode.apply(null, slice);\n    }\n    return btoa(result);\n  };\n  \n  export const sanitizeId = (id) => {\n    return id.replace(/[^a-z0-9]/gi, '_').toLowerCase();\n  };\n\n  export const localStorageClear = () => {\n    localStorage.clear();\n    localStorage.setItem('proofingPhase', CONFIG.defaultProofingPhase);\n    location.reload();\n  };\n\n  export function toggleMode() {\n\tconst body = document.body;\n\tif (body.getAttribute('data-theme') === 'dark') {\n\t  body.removeAttribute('data-theme');\n\t  document.querySelector('#btn__mode-toggle .material-symbols-outlined').textContent = 'light_mode';\n\t} else {\n\t  body.setAttribute('data-theme', 'dark');\n\t  document.querySelector('#btn__mode-toggle .material-symbols-outlined').textContent = 'dark_mode';\n\t}\n  }\n\n  export function toggleUi() {\n\tconst toggleUIButton = document.getElementById('btn__ui-toggle');\n\tconst body = document.body;\n  \n\tbody.classList.toggle('ui-hidden');\n\tthis.classList.toggle('ui-hidden');\n\t\n\t// Optionally, you can save the state to localStorage\n\tlocalStorage.setItem('uiHidden', body.classList.contains('ui-hidden'));\n  \n\t// Check if the UI was hidden in a previous session\n\tif (localStorage.getItem('uiHidden') === 'true') {\n\t  body.classList.add('ui-hidden');\n\t  toggleUIButton.classList.add('ui-hidden');\n\t}\n  }\n  \n  export const whichFontSize = (string) => {\n    const sizes = {\n      't__size-xxl': '140',\n      't__size-xl': '100',\n      't__size-l': '84',\n      't__size-m': '56',\n      't__size-s': '28',\n      't__size-xs': '14',\n    };\n  \n    if (sizes[string]) return sizes[string];\n  \n    const charCount = string.length;\n    if (charCount < 25) return 't__size-xxl';\n    if (charCount < 50) return 't__size-xl';\n    if (charCount < 95) return 't__size-l';\n    if (charCount < 200) return 't__size-m';\n    if (charCount < 1000) return 't__size-s';\n    return 't__size-xs';\n  };\n  \n  export const removeElementsByClass = (className) => {\n    document.querySelectorAll(`.${className}`).forEach(el => el.remove());\n  };\n  \n  export const removeElementById = (id) => {\n    const element = document.getElementById(id);\n    if (element) {\n      element.style.transition = 'opacity 0.5s ease';\n      element.style.opacity = '0';\n      setTimeout(() => element.remove(), 500);\n    }\n  };\n  \n  export const saveData = (id, value) => {\n    if (typeof Storage !== 'undefined') {\n      if (value !== 'thisContent') {\n        localStorage.setItem(id, value);\n      } else {\n        const content = document.getElementById(id).textContent;\n        localStorage.setItem(id, content);\n      }\n    }\n  };\n  ","// config.js\nexport const CONFIG = {\n    defaultProofingPhase: 'Hamburgers',\n    fontFormats: {\n      truetype: 'ttf',\n      opentype: 'otf',\n    },\n    jsonPath: 'src/js/proof.json',\n  };","import { CONFIG } from './config.js';\nimport { getFormattedDate,\n\tpreserveUnique,\n\tshowErrorMessage,\n\tuint8ToBase64,\n\tlocalStorageClear,\n\twhichFontSize,\n\tremoveElementsByClass,\n\tsaveData,\n\ttoggleMode,\n\ttoggleUi  } from './utils.js';\n\nlet font = null;\nconst fontFormats = {\n    truetype: 'ttf',\n    opentype: 'otf',\n};\n\nexport const onFontLoaded = (loadedFont, fontFamilySource, fontFamily) => {\n\treturn new Promise((resolve, reject) => {\n\t  try {\n\t\tfont = loadedFont;\n\t\tconsole.log(`Font assigned globally: ${fontFamily}`);\n\t\t\n\t\t// Create and apply the font-face rule\n\t\tconst fontFaceRule = `\n\t\t  @font-face {\n\t\t\tfont-family: '${fontFamily}';\n\t\t\tsrc: url('${fontFamilySource}') format('${loadedFont.outlinesFormat === 'truetype' ? 'truetype' : 'opentype'}');\n\t\t  }\n\t\t`;\n\t\tconst style = document.createElement('style');\n\t\tstyle.textContent = fontFaceRule;\n\t\tdocument.head.appendChild(style);\n\t\tconsole.log(`Font-face rule applied: ${fontFaceRule}`);\n  \n\t\twindow.fontFamily = fontFamily;\n\t\tconsole.log(`Window.fontFamily set to: ${fontFamily}`);\n  \n\t\tdisplayFontData(fontFamily);\n  \n\t\tif (['localhost', '127.0.0.1', ''].includes(location.hostname)) {\n\t\t  localStorage.setItem('fontFamily', fontFamily);\n\t\t  localStorage.setItem('fontFamilySource', fontFamilySource);\n\t\t  console.log(`Font information saved to localStorage`);\n\t\t}\n  \n\t\t// If there's a pending stage, set it now\n\t\tif (window.pendingStage) {\n\t\t  setStage(window.pendingStage);\n\t\t  window.pendingStage = null;\n\t\t} else {\n\t\t  // Set a default stage if none is pending\n\t\t  setStage('Hamburgers');  // or whatever your default stage should be\n\t\t}\n\t\tconsole.log(`Stage set successfully`);\n\t\tresolve();\n\t  } catch (error) {\n\t\tconsole.error('Error in onFontLoaded:', error);\n\t\treject(error);\n\t  }\n\t});\n  };\n\nexport const onReadFile = (event) => {\n\tconst files = event.target.files;\n\tconst fileButtonParent = document.getElementById('section__header-file-buttons');\n\tfileButtonParent.innerHTML = '';\n  \n\tArray.from(files).forEach(async file => {\n\t  const button = await generateFontButton(file, 'server');\n\t  fileButtonParent.appendChild(button);\n\t});\n  \n\t// Activate the first button automatically after all chips have loaded\n\tsetTimeout(() => {\n\t  const firstButton = fileButtonParent.querySelector('.btn__setfont');\n\t  if (firstButton) {\n\t\tfirstButton.click(); // Simulate a click on the first button\n\t  }\n\t}, 0);\n  };\n\n  const readSingleFile = (file) => {\n\treturn new Promise((resolve, reject) => {\n\t  const reader = new FileReader();\n\t  \n\t  reader.onload = async (e) => {\n\t\ttry {\n\t\t  console.log(`File read successfully: ${file.name}`);\n\t\t  const font = opentype.parse(e.target.result);\n\t\t  console.log(`Font parsed successfully: ${font.names.postScriptName.en}`);\n\t\t  const fontFamily = font.names.postScriptName.en;\n\t\t  const fontFamilySource = `fonts/${fontFamily}`;\n\t\t  \n\t\t  await onFontLoaded(font, fontFamilySource, fontFamily);\n  \n\t\t  font.file = {\n\t\t\tname: file.name,\n\t\t\tlastModified: file.lastModified,\n\t\t\tsize: file.size,\n\t\t\ttype: file.type,\n\t\t  };\n\t\t  font.type = 'user:local';\n  \n\t\t  const tempUint8array = new Uint8Array(e.target.result);\n\t\t  const isVariableFont = font.tables.fvar !== undefined;\n  \n\t\t  // Set the @font-face rule\n\t\t  const fontFaceRule = `@font-face {font-family:'${fontFamily}'; src: url('data:font/ttf;base64,${uint8ToBase64(tempUint8array)}') format('truetype');}`;\n\t\t  document.getElementById('style__fontface').innerHTML += fontFaceRule;\n\t\t  console.log(`Font-face rule added: ${fontFaceRule}`);\n  \n\t\t  console.log(`Loaded font: ${fontFamily}, Variable: ${isVariableFont}`);\n  \n\t\t  showErrorMessage('');\n\t\t  resolve();\n\t\t} catch (err) {\n\t\t  console.error('Error parsing font:', err);\n\t\t  showErrorMessage(`Error loading font: ${err.message}`);\n\t\t  reject(err);\n\t\t}\n\t  };\n  \n\t  reader.onerror = (err) => {\n\t\tconsole.error('Error reading file:', err);\n\t\tshowErrorMessage(err.toString());\n\t\treject(err);\n\t  };\n  \n\t  reader.readAsArrayBuffer(file);\n\t});\n  };\n\nexport const setFont = (fontPath, fontName) => {\n\tconsole.log(`Attempting to load font: ${fontName} from ${fontPath}`);\n\topentype.load(fontPath, (err, loadedFont) => {\n\t  if (err) {\n\t\tconsole.error('Error loading font:', err);\n\t\tshowErrorMessage(`Error loading font: ${err}`);\n\t  } else {\n\t\tconsole.log(`Font loaded successfully: ${fontName}`);\n\t\tfont = loadedFont; // Ensure this is set globally\n\t\ttry {\n\t\t  onFontLoaded(loadedFont, fontPath, fontName);\n\t\t  // After the font is loaded and processed, set the stage\n\t\t  setStage(localStorage.getItem('proofingPhase') || 'Hamburgers');\n\t\t} catch (error) {\n\t\t  console.error('Error in onFontLoaded:', error);\n\t\t  showErrorMessage(`Error processing font: ${error}`);\n\t\t}\n\t  }\n\t});\n  };\n\nexport const displayFontData = (fontFamily) => {\n    var tablename, table, property, value, tag;\n    var styles = '';\n\n    for (tablename in font.tables) {\n        table = font.tables[tablename];\n\n        if (tablename === 'cmap') {\n            var gim = font.tables.cmap.glyphIndexMap;\n            var gimLength = Object.keys(gim).length;\n            if (gimLength <= 100) {\n                window.proofingPhase = \"Hamburgers\";\n            } else if (gimLength >= 400) {\n                window.proofingPhase = \"Diacritics\";\n            } else {\n                window.proofingPhase = \"Spacing\";\n            }\n        }\n        // Determine if TTF or OTF\n        var fontFormat = font.outlinesFormat;\n        fontFormat = fontFormats[fontFormat];\n        // Inserting header data: font name, foundry name, etc.\n        if (tablename === 'name') {\n                let nameHtml = '';\n                if (font.names.designer) {\n                    var designerName = font.names.designer.en;\n                } else {\n                    var designerName = \"No Designer Name :(\";\n                }\n                if (font.names.postScriptName) {\n                    var postScriptName = font.names.postScriptName.en;\n                } else {\n                    var postScriptName = \"Font Name\";\n                }\n                nameHtml += '<div class=\"section__header-name d-flex-grow t__left\" contenteditable=\"true\" spellcheck=\"false\">'+designerName+'</div>';\n\n                nameHtml += '<div class=\"section__header-name d-flex-grow t__center\" spellcheck=\"false\">'+postScriptName+'</div>';\n                styles += `.t__importedfontfamily { font-family: \"${fontFamily}\" }`;\n                nameHtml += '<div class=\"section__header-name  d-flex-grow t__right\">'+getFormattedDate()+'</div>';\n                document.getElementById('section__header-names').innerHTML = nameHtml;\n                continue;\n        }\n    }\n    //Inject css of necessary features\n    document.getElementById('style__fontfamily').innerHTML = styles;\n    \n    //setStage\n    if (localStorage.getItem('proofingPhase')) {\n            // Check for local storage settings\n            setStage(localStorage.getItem('proofingPhase'));\n    } else {\n            setStage(window.proofingPhase);\n    }\n};\n\nexport const setStage = (stage) => {\n\tconst article = document.getElementById('section__article-app');\n\tconst stageButtons = document.getElementById('section__header-stage-buttons');\n\t\n\tif (!font) {\n\t  console.warn('Font not loaded yet. Deferring stage setting.');\n\t  // Store the stage to set later\n\t  window.pendingStage = stage;\n\t  return;\n\t}\n  \n\tfetch(CONFIG.jsonPath)\n\t  .then(response => response.json())\n\t  .then(proof => {\n\t\tconst html = generateStageHtml(proof, stage);\n\t\tconst buttonHtml = generateStageButtons(proof, stage);\n  \n\t\tarticle.innerHTML = html;\n\t\tstageButtons.innerHTML = buttonHtml;\n\t\tdocument.getElementById('style__opentype-features').innerHTML = '';\n\t\t\n\t\tsaveData('proofingPhase', stage);\n\t  })\n\t  .catch(error => console.error('Error loading JSON:', error));\n  };\n  \n  const generateStageHtml = (proof, stage) => {\n    if (!proof[stage]) {\n      return '<div class=\"item d-flex t__center\"><div class=\"item__proof\">No features found! :...(</div></div>';\n    }\n  \n    const gsubFeatures = font.tables.gsub.features;\n    const taglist = Object.values(gsubFeatures)\n\t\t.filter(feature => typeof feature === 'object' && feature.tag)\n\t\t.map(feature => feature.tag)\n\t\t.filter(tag => proof[\"Features\"][tag] !== undefined);\n  \n    let html = '';\n  \n    for (const title in proof[stage]) {\n      if (stage === \"Features\" && !taglist.includes(title)) {\n        continue;\n      }\n  \n      const textClass = whichFontSize(proof[stage][title]);\n      const testAreaID = `section__proofing-${title}`;\n      const itemID = `item--${title}`;\n      const sliderID = `${itemID}`;\n      \n      const { fontSize, lineHeight, letterSpacing, inlineStyle } = getStoredStyles(sliderID, textClass);\n      const fvarStyle = generateFvarStyle(itemID);\n  \n      html += `\n        <div id=\"${itemID}\" class=\"item\">\n          <button class=\"btn btn-link add-item-above chip\" onclick=\"insertField('${itemID}')\">+ Add Proof Window</button>\n          <div class=\"item__container d-flex\">\n            <div class=\"item__sliders pt-2\">\n              <div class=\"item__sliders-wrapper\">\n                ${generateSliders(itemID, sliderID, fontSize, lineHeight, letterSpacing)}\n                ${generateVariableSliders(itemID, sliderID)}\n                ${generateStyleButtons(itemID)}\n                ${generateFeatureCheckboxes(itemID, proof, taglist)}\n                <button class=\"btn btn-secondary mr-1 mb-1 mt-6\" title=\"Apply these styles to all visible proof sheets.\" onclick=\"passStyleValue('${itemID}','idiocracy','global')\">Global Idiocracy</button>\n              </div>\n            </div>\n            <div class=\"item__proof\">\n              <button class=\"btn btn-link remove-item-this invisible\" onclick=\"removeElementsByID('${itemID}')\">×</button>\n              ${generateProofContent(stage, title, proof, testAreaID, inlineStyle, fvarStyle, textClass)}\n            </div>\n          </div>\n        </div>\n      `;\n    }\n\treturn html;\n  };\n  \n// Modify the getStoredStyles function to include column properties\nconst getStoredStyles = (itemID, textClass) => {\n\tconst fontSize = localStorage.getItem(`${itemID}-fontSize`) || whichFontSize(textClass);\n\tconst lineHeight = localStorage.getItem(`${itemID}-lineHeight`) || '1.2';\n\tconst letterSpacing = localStorage.getItem(`${itemID}-letterSpacing`) || '0em';\n\tconst columnCount = localStorage.getItem(`${itemID}-column-count`) || '1';\n\tconst columnGap = localStorage.getItem(`${itemID}-column-gap`) || '1em';\n  \n\tconst inlineStyle = `\n\t  font-size: ${fontSize}pt;\n\t  line-height: ${lineHeight};\n\t  letter-spacing: ${letterSpacing};\n\t  column-count: ${columnCount};\n\t  column-gap: ${columnGap};\n\t`;\n  \n\treturn { fontSize, lineHeight, letterSpacing, columnCount, columnGap, inlineStyle };\n  };\n  \n  const generateFvarStyle = (itemID) => {\n    let fvarStyle = '';\n    if (font.tables.fvar) {\n      const fvarSupport = font.tables.fvar.axes.map(axis => axis.tag);\n      fvarStyle = 'font-variation-settings: ' + \n        font.tables.fvar.axes.map(axis => {\n          const storedValue = localStorage.getItem(`${itemID}-${axis.tag}-val`);\n          const value = storedValue !== null ? storedValue : axis.defaultValue;\n          return `'${axis.tag}' ${value}`;\n        }).join(', ') + ';';\n    }\n    return fvarStyle;\n  };\n  \n  const generateSliders = (itemID, sliderID, fontSize, lineHeight, letterSpacing) => `\n    <label for=\"${sliderID}-fontSize\">Font Size </label>\n    <span class=\"t__right text-small\" id=\"${sliderID}-fontSize-val\">${fontSize}pt</span>\n    <input id=\"${sliderID}-fontSize\" type=\"range\" class=\"slider\" min=\"4\" max=\"160\" step=\"2\" value=\"${fontSize}\" oninput=\"passStyleValue('${itemID}', 'fontSize', this.value)\">\n    \n    <label for=\"${sliderID}-lineHeight\">Line Height </label>\n    <span class=\"t__right text-small\" id=\"${sliderID}-lineHeight-val\">${lineHeight}</span>\n    <input id=\"${sliderID}-lineHeight\" type=\"range\" class=\"slider\" min=\"0.6\" max=\"3.0\" step=\"0.01\" value=\"${lineHeight}\" oninput=\"passStyleValue('${itemID}', 'lineHeight', this.value)\">\n    \n    <label for=\"${sliderID}-letterSpacing\">Letter Spacing </label>\n    <span class=\"t__right text-small\" id=\"${sliderID}-letterSpacing-val\">${letterSpacing}</span>\n    <input id=\"${sliderID}-letterSpacing\" type=\"range\" class=\"slider\" min=\"-0.4\" max=\"0.4\" step=\"0.01\" value=\"${letterSpacing}\" oninput=\"passStyleValue('${itemID}', 'letterSpacing', this.value)\">\n  `;\n  \n  const generateVariableSliders = (itemID, sliderID) => {\n    if (!font.tables.fvar) return '';\n  \n    return font.tables.fvar.axes.map(axis => {\n      const storedValue = localStorage.getItem(`${itemID}-${axis.tag}-val`);\n      const value = storedValue !== null ? storedValue : axis.defaultValue;\n      return `\n        <label for=\"${sliderID}-${axis.tag}\">${axis.name.en} </label>\n        <span class=\"t__right text-small\" id=\"${sliderID}-${axis.tag}-val\">${value}</span>\n        <input id=\"${sliderID}-${axis.tag}\" type=\"range\" class=\"slider\" min=\"${axis.minValue}\" max=\"${axis.maxValue}\" value=\"${value}\" oninput=\"passfvarValue('${itemID}', '${axis.tag}', this.value, '${font.tables.fvar.axes.map(a => a.tag).join(',')}')\">\n      `;\n    }).join('');\n  };\n  \n  export const generateFontButton = async (font, mode = 'local') => {\n\tlet fontName, fontPath, fontType, displayName, isVariable;\n  \n\tif (mode === 'local') {\n\t  fontName = font.replace('.', '-');\n\t  fontPath = `fonts/${font}`;\n\t  displayName = font.replace('-', ' ').replace(/\\.[^/.]+$/, \"\");\n\t  fontType = font.split('.').pop().toUpperCase();\n\t  isVariable = await isVariableFont(fontPath);\n\t} else { // server mode\n\t  fontName = font.name.replace('.', '-');\n\t  fontPath = URL.createObjectURL(font);\n\t  displayName = font.name.replace('-', ' ').replace(/\\.[^/.]+$/, \"\");\n\t  fontType = font.name.split('.').pop().toUpperCase();\n\t  isVariable = await isVariableFont(font);\n\t}\n  \n\tif (isVariable) {\n\t  fontType = 'VF';\n\t}\n  \n\tconst button = document.createElement('div');\n\tbutton.className = 'btn__setfont chip btn d-flex justify-content-between';\n\tbutton.title = mode === 'local' ? font : font.name;\n\tbutton.id = `btn__setfont-${fontName}`;\n\tbutton.innerHTML = `${displayName}<span class=\"d-flex-grow text-small text-right\">${fontType}</span>`;\n\tbutton.onclick = () => setFont(fontPath, fontName);\n  \n\treturn button;\n  };\n  \n  const isVariableFont = async (font) => {\n\ttry {\n\t  let arrayBuffer;\n\t  if (typeof font === 'string') {\n\t\t// Local mode: font is a path\n\t\tconst response = await fetch(font);\n\t\tarrayBuffer = await response.arrayBuffer();\n\t  } else {\n\t\t// Server mode: font is a File object\n\t\tarrayBuffer = await font.arrayBuffer();\n\t  }\n\t  const parsedFont = opentype.parse(arrayBuffer);\n\t  return parsedFont.tables.fvar !== undefined;\n\t} catch (error) {\n\t  console.error('Error checking if font is variable:', error);\n\t  return false;\n\t}\n  };\n  \n  const generateFontFaces = (fonts) => {\n\treturn fonts.map(font => {\n\t  const fontName = font.replace('.', '-');\n\t  return `@font-face { font-family: \"${fontName}\"; src: url(\"fonts/${font}\");}`;\n\t}).join('\\n');\n  };\n\n  // Add new function to handle column updates\nwindow.updateColumns = (itemID) => {\n\tconst columnCount = document.getElementById(`${itemID}-column-count`).value;\n\tconst columnGap = document.getElementById(`${itemID}-column-gap`).value;\n\t\n\tpassStyleValue(itemID, 'column-count', columnCount);\n\tpassStyleValue(itemID, 'column-gap', columnGap);\n  };\n\n  const generateStyleButtons = (itemID) => `\n  <div id=\"btn__wrapper-case\">\n    <label>Case</label>\n    <div class=\"d-flex g-1 btn__wrapper\">\n      <button class=\"btn btn-link textTransform-uppercase\" title=\"Uppercase\" onclick=\"passStyleValue('${itemID}','textTransform', 'uppercase')\">TT</button>\n      <button class=\"btn btn-link textTransform-capitalize\" title=\"Capitalize\" onclick=\"passStyleValue('${itemID}','textTransform', 'capitalize')\">Tt</button>\n      <button class=\"btn btn-link textTransform-lowercase\" title=\"Lowercase\" onclick=\"passStyleValue('${itemID}','textTransform', 'lowercase')\">tt</button>\n    </div>\n  </div>\n  <div id=\"btn__wrapper-columns\">\n    <label>Columns</label>\n    <div class=\"d-flex g-1 btn__wrapper\">\n\t<span class=\"text-small\">Count</span>\n      <input class=\"input\" type=\"number\" id=\"${itemID}-column-count\" min=\"1\" max=\"6\" value=\"1\" onchange=\"updateColumns('${itemID}')\" style=\"width: 50px;\">\n\t<span class=\"text-small\">Gap</span>\n      <input class=\"input\" type=\"text\" id=\"${itemID}-column-gap\" value=\"10px\" onchange=\"updateColumns('${itemID}')\" style=\"width: 50px;\">\n    </div>\n  </div>\n`;\n\n\n  \nconst generateFeatureCheckboxes = (itemID, proof, taglist) => {\n\tconst uniqueTags = [...new Set(taglist)];\n\treturn `\n\t  <label>Features</label>  \n\t  <div class=\"btn__wrapper d-flex flex-wrap g-0\">\n\t\t${uniqueTags.map(tag => {\n\t\t  const name = proof[\"Features\"][tag][\"abstract\"];\n\t\t  return `\n\t\t\t<div class=\"chip d-flex align-items-center justify-content-between d-flex-grow\" onclick=\"document.getElementById('${itemID}-checkbox-${tag}').click()\">\n\t\t\t  <input id=\"${itemID}-checkbox-${tag}\" type=\"checkbox\" onclick=\"passfeatValue('${itemID}', '${tag}', '${uniqueTags.join(',')}')\">\n\t\t\t  <span class=\"d-flex-grow\">${name}</span>\n\t\t\t  <span class=\"tag-label text-small\">${tag}</span>\n\t\t\t</div>\n\t\t  `;\n\t\t}).join('')}\n\t  </div>\n\t`;\n  };\n  \n  \n  const generateProofContent = (stage, title, proof, testAreaID, inlineStyle, fvarStyle, textClass) => {\n\tconst { fontSize, lineHeight, letterSpacing, columnCount, columnGap } = getStoredStyles(testAreaID, textClass);\n  \n\tlet content;\n\tlet headingContent;\n  \n\tif (stage === \"Features\") {\n\t  const definition = proof[stage][title].definition;\n\t  const sample = localStorage.getItem(testAreaID) || proof[stage][title].sample;\n\t  headingContent = `<h6 class=\"h6\" title=\"${definition}\" contentEditable=\"true\" onkeyup=\"saveData('${testAreaID}-title', 'thisContent')\">${title}</h6>`;\n\t  content = sample;\n\t} else {\n\t  const storedContent = localStorage.getItem(testAreaID) || proof[stage][title];\n\t  headingContent = `<h6 contentEditable=\"true\" onkeyup=\"saveData('${testAreaID}-title', 'thisContent')\">${title}</h6>`;\n\t  content = storedContent;\n\t}\n  \n\tconst html = `\n\t  ${headingContent}\n\t  <span class=\"testarea-values small\">${generateTestAreaValues(inlineStyle)}</span>\n\t  <div id=\"${testAreaID}\" style=\"${inlineStyle} ${fvarStyle}\" class=\"t__importedfontfamily ${textClass} testarea\" contenteditable=\"true\" spellcheck=\"false\" onkeyup=\"saveData('${testAreaID}', 'thisContent')\">\n\t\t${content}\n\t  </div>\n\t`;\n  \n\t// Wrap the function in setTimeout to ensure it runs after the DOM has been updated\n\tsetTimeout(() => {\n\t  // Set initial values for sliders\n\t  const fontSizeSlider = document.getElementById(`${testAreaID}-fontSize`);\n\t  const lineHeightSlider = document.getElementById(`${testAreaID}-lineHeight`);\n\t  const letterSpacingSlider = document.getElementById(`${testAreaID}-letterSpacing`);\n\t  \n\t  if (fontSizeSlider) fontSizeSlider.value = fontSize.replace('pt', '');\n\t  if (lineHeightSlider) lineHeightSlider.value = lineHeight;\n\t  if (letterSpacingSlider) letterSpacingSlider.value = letterSpacing.replace('em', '');\n  \n\t  // Set initial values for column inputs\n\t  const columnCountInput = document.getElementById(`${testAreaID}-column-count`);\n\t  const columnGapInput = document.getElementById(`${testAreaID}-column-gap`);\n\t  \n\t  if (columnCountInput) columnCountInput.value = columnCount;\n\t  if (columnGapInput) columnGapInput.value = columnGap;\n  \n\t  // Update the displayed values\n\t  updateDisplayedValues(testAreaID, {fontSize, lineHeight, letterSpacing, columnCount, columnGap});\n\t}, 0);\n  \n\treturn html;\n  };\n  \n  // Helper function to update displayed values\n  const updateDisplayedValues = (testAreaID, values) => {\n\tObject.entries(values).forEach(([key, value]) => {\n\t  const element = document.getElementById(`${testAreaID}-${key}-val`);\n\t  if (element) {\n\t\telement.textContent = value;\n\t  }\n\t});\n  };\n  \n  const generateTestAreaValues = (inlineStyle) => {\n    const styles = inlineStyle.split(';').filter(s => s.trim());\n    return styles.map(style => {\n      const [property, value] = style.split(':').map(s => s.trim());\n      return `<span class=\"${property}\">${property}: ${value}</span>`;\n    }).join(' ');\n  };\n  \n  const updateInlineText = (itemID, property, value) => {\n\tconst container = document.querySelector(`#${itemID} .testarea-values`);\n\tconst existingSpan = container.querySelector(`.${property}`);\n\t\n\tif (existingSpan) {\n\t  existingSpan.textContent = `${property}: ${value}`;\n\t} else {\n\t  const newSpan = document.createElement('span');\n\t  newSpan.className = property;\n\t  newSpan.textContent = `${property}: ${value}`;\n\t  container.appendChild(newSpan);\n\t}\n  };\n\n// Global functions\n\nexport const insertField = (aboveHere) => {\n\tconst original = document.getElementById(aboveHere);\n\tconst clone = original.cloneNode(true);\n\t\n\t// Reset any unique IDs or input values in the clone\n\tclone.id = `${aboveHere}-clone-${Date.now()}`;\n\tclone.querySelectorAll('[id]').forEach(el => {\n\t  el.id = `${el.id}-clone-${Date.now()}`;\n\t});\n\tclone.querySelectorAll('input').forEach(input => {\n\t  input.value = '';\n\t});\n  \n\toriginal.parentNode.insertBefore(clone, original);\n\t\n\t// Animate the insertion\n\tclone.style.height = '0px';\n\tclone.style.overflow = 'hidden';\n\tclone.style.transition = 'height 0.6s ease';\n\t\n\tsetTimeout(() => {\n\t  clone.style.height = `${clone.scrollHeight}px`;\n\t}, 0);\n\t\n\tsetTimeout(() => {\n\t  clone.style.height = 'auto';\n\t  clone.style.overflow = 'visible';\n\t}, 600);\n  };\n  \n  export const passStyleValue = (itemID, property, value) => {\n\tconst elementIdSuffix = `-${property}-val`;\n\tconst element = document.querySelector(`[id$=\"${itemID}${elementIdSuffix}\"]`);\n\t\n\tif (['fontSize', 'lineHeight', 'letterSpacing', 'column-count', 'column-gap'].includes(property)) {\n\t  saveData(`${itemID}-${property}`, value);\n\t  if (property === 'fontSize') value += 'pt';\n\t  if (property === 'letterSpacing') value += 'em';\n\t  if (element) element.textContent = value;\n\t} else {\n\t  saveData(itemID + property, value);\n\t}\n  \n\tconst testarea = document.querySelector(`#${itemID} .testarea`);\n\tif (property === 'idiocracy') {\n\t  const css = testarea.getAttribute('style');\n\t  document.querySelectorAll('.testarea').forEach(el => el.setAttribute('style', css));\n\t} else {\n\t  testarea.style[property] = value;\n\t}\n  \n\tupdateInlineText(itemID, property, value);\n  \n\t// Only update active button for non-slider properties\n\tif (!['fontSize', 'lineHeight', 'letterSpacing', 'column-count', 'column-gap'].includes(property)) {\n\t  updateActiveButton(property, value);\n\t}\n  };\n  \n  export const passfvarValue = (itemID, property, value, fvarSupport) => {\n    const element = document.getElementById(`${itemID}-${property}-val`);\n    if (element) {\n        element.textContent = value;\n    } else {\n        console.warn(`Element with ID ${itemID}-${property}-val not found.`);\n    }\n\n    saveData(`${itemID}-${property}-val`, value);\n\n    const fvarSupportArray = fvarSupport.split(',');\n    let fvarcss = fvarSupportArray.map(tag => {\n        const tagValue = tag === property ? value : document.getElementById(`${itemID}-${tag}`)?.value; // Use optional chaining\n        return `'${tag}' ${tagValue}`;\n    }).join(', ');\n\n    const testarea = document.querySelector(`#${itemID} .testarea`);\n    if (testarea) {\n        testarea.style.fontVariationSettings = fvarcss;\n    } else {\n        console.warn(`Test area with ID ${itemID} not found.`);\n    }\n\n    updateInlineText(itemID, 'fvar', fvarcss);\n};\n  \n  export const passfeatValue = (itemID, feature, featureSupport) => {\n\tconst featSupport = featureSupport.split(',');\n\tlet featcss = \"\";\n  \n\tfor (let f = 0; f < featSupport.length; f++) {\n\t  if (document.getElementById(`${itemID}-checkbox-${featSupport[f]}`).checked) {\n\t\tfeatcss += `'${featSupport[f]}',`;\n\t  }\n\t}\n\tfeatcss = featcss.replace(/,\\s*$/, \"\");\n\tdocument.querySelector(`#${itemID} .testarea`).style.fontFeatureSettings = featcss;\n  };\n  \n  const updateActiveButton = (property, value) => {\n\tdocument.querySelectorAll(`.btn.${property}-${value}`).forEach(btn => {\n\t  btn.classList.add('active');\n\t  \n\t  // Find the parent wrapper\n\t  const wrapper = btn.closest('.btn__wrapper');\n\t  \n\t  if (wrapper) {\n\t\t// If we found a wrapper, remove 'active' class from all sibling buttons\n\t\twrapper.querySelectorAll('.btn').forEach(sibling => {\n\t\t  if (sibling !== btn) sibling.classList.remove('active');\n\t\t});\n\t  } else {\n\t\t// Fallback: remove 'active' class from all buttons with the same property\n\t\tdocument.querySelectorAll(`.btn[class*=\"${property}-\"]`).forEach(sibling => {\n\t\t  if (sibling !== btn) sibling.classList.remove('active');\n\t\t});\n\t  }\n\t});\n  };\n\n// generate buttons\nexport const generateStageButtons = (proof, currentStage) => {\n    return Object.keys(proof).map(stage => {\n      const isActive = stage === currentStage ? 'active' : '';\n      return `\n        <div class=\"tab-item ${isActive} tab__setstage\" onclick=\"setStage('${stage}')\">\n          <a href=\"#\" class=\"stage-button\">${stage}</a>\n        </div>\n      `;\n    }).join('');\n  };\n\n  // localload vs server\n\n  export const localLoad = () => {\n\tconst fileButtonParent = document.getElementById('section__header-file-buttons');\n\tfileButtonParent.innerHTML = 'Place fonts you want to proof into <code>/fonts</code> to begin';\n  \n\tfetch('../src/txt/fonts.txt')\n\t  .then(response => response.text())\n\t  .then(async data => {\n\t\tconst fonts = data.split('fonts/')\n\t\t  .filter(font => font.trim() !== '')\n\t\t  .map(font => font.trim());\n  \n\t\tconst uniqueFonts = preserveUnique(fonts.sort());\n\t\t\n\t\t// Generate buttons asynchronously\n\t\tconst buttonPromises = uniqueFonts.map(font => generateFontButton(font, 'local'));\n\t\tconst buttons = await Promise.all(buttonPromises);\n\t\t\n\t\t// Append buttons to the parent element\n\t\tbuttons.forEach(button => fileButtonParent.appendChild(button));\n  \n\t\t// Set the default font\n\t\tconst fontFamilySource = localStorage.getItem('fontFamilySource') || `fonts/${uniqueFonts[uniqueFonts.length - 1]}`;\n\t\tconst fontFamily = localStorage.getItem('fontFamily') || fontFamilySource.replace('.', '-');\n\t\tsetFont(fontFamilySource, fontFamily);\n\t  })\n\t  .catch(error => console.error('Error loading fonts:', error));\n  };\n  \n  export const serverLoad = () => {\n\tconst fileButtonParent = document.getElementById('section__header-file-buttons');\n\t\n\tconst dragDropHtml = `\n\t  <div id=\"drag-drop-area\" class=\"drag-drop-area\">\n\t\t<p>Drag & drop font files here</p>\n\t\t<p>or</p>\n\t\t<label for=\"fontInput\" class=\"file-input-label\">Choose Files</label>\n\t\t<input id=\"fontInput\" type=\"file\" class=\"file-input\" multiple accept=\".ttf,.otf\" />\n\t  </div>\n\t`;\n\t\n\tfileButtonParent.innerHTML = dragDropHtml;\n  \n\tconst dragDropArea = document.getElementById('drag-drop-area');\n\tconst fileInput = document.getElementById('fontInput');\n  \n\t// Prevent default drag behaviors\n\t['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {\n\t  dragDropArea.addEventListener(eventName, preventDefaults, false);\n\t  document.body.addEventListener(eventName, preventDefaults, false);\n\t});\n  \n\t// Highlight drop area when item is dragged over it\n\t['dragenter', 'dragover'].forEach(eventName => {\n\t  dragDropArea.addEventListener(eventName, highlight, false);\n\t});\n  \n\t['dragleave', 'drop'].forEach(eventName => {\n\t  dragDropArea.addEventListener(eventName, unhighlight, false);\n\t});\n  \n\t// Handle dropped files\n\tdragDropArea.addEventListener('drop', handleDrop, false);\n  \n\t// Handle selected files\n\tfileInput.addEventListener('change', handleFiles, false);\n  };\n  \n  function preventDefaults(e) {\n\te.preventDefault();\n\te.stopPropagation();\n  }\n  \n  function highlight(e) {\n\tdocument.getElementById('drag-drop-area').classList.add('highlight');\n  }\n  \n  function unhighlight(e) {\n\tdocument.getElementById('drag-drop-area').classList.remove('highlight');\n  }\n  \n  function handleDrop(e) {\n\tconst dt = e.dataTransfer;\n\tconst files = dt.files;\n\thandleFiles(files);\n  }\n  \n  function handleFiles(files) {\n\tfiles = [...files];\n\tfiles.forEach(uploadFile);\n\tfiles.forEach(previewFile);\n  }\n  \n  function uploadFile(file) {\n\t// Here you would typically upload the file to a server\n\t// For now, we'll just pass it to onReadFile\n\tonReadFile({ target: { files: [file] } });\n  }\n  \n  function previewFile(file) {\n\tconst reader = new FileReader();\n\treader.readAsDataURL(file);\n\treader.onloadend = function() {\n\t  const img = document.createElement('img');\n\t  img.src = reader.result;\n\t  document.getElementById('drag-drop-area').appendChild(img);\n\t}\n  }\n  \n  export const setupEventListeners = () => {\n\tconst fileButtons = document.getElementById('section__header-file-buttons');\n\tconst stageButtons = document.getElementById('section__header-stage-buttons');\n\tconst toolsToggle = document.getElementById('btn__view-tools-toggle');\n\tconst modeToggle = document.getElementById('btn__mode-toggle');\n\tconst localStorageClearButton = document.getElementById('btn__reset-local-storage');\n  \n\tif (fileButtons) {\n\t  fileButtons.addEventListener('click', handleFileButtonClick);\n\t}\n\tif (stageButtons) {\n\t  stageButtons.addEventListener('click', handleStageButtonClick);\n\t}\n\tif (toolsToggle) {\n\t  toolsToggle.addEventListener('click', toggleToolsVisibility);\n\t}\n\tif (modeToggle) {\n\t\tmodeToggle.addEventListener('click', toggleMode);\n\t}\n\tif (localStorageClearButton) {\n\t\tlocalStorageClearButton.addEventListener('click', localStorageClear);\n\t}\n  };\n  \n  const handleFileButtonClick = (event) => {\n\tif (event.target.classList.contains('btn__setfont')) {\n\t  event.target.classList.add('active', 'visited');\n\t  // Remove 'active' class from sibling elements\n\t  const siblings = Array.from(event.target.parentNode.children).filter(child => child !== event.target);\n\t  siblings.forEach(sibling => sibling.classList.remove('active'));\n\t}\n  };\n  \n  const handleStageButtonClick = (event) => {\n\tif (event.target.classList.contains('btn__setstage')) {\n\t  event.target.classList.add('active');\n\t  // Remove 'active' class from sibling elements\n\t  const siblings = Array.from(event.target.parentNode.children).filter(child => child !== event.target);\n\t  siblings.forEach(sibling => sibling.classList.remove('active'));\n\t}\n  };\n  \n  const toggleToolsVisibility = () => {\n\tdocument.body.classList.toggle('tools-visible');\n  };","import { CONFIG } from './config.js';\nimport * as AppCore from './app-core.js';\n\n// Global error handlers\nwindow.addEventListener('unhandledrejection', function(event) {\n  console.error('Unhandled promise rejection:', event.reason);\n});\n\nwindow.addEventListener('error', function(event) {\n  console.error('Uncaught error:', event.error);\n});\n\n// Make functions globally available\nwindow.setFont = AppCore.setFont;\nwindow.onReadFile = AppCore.onReadFile;\nwindow.setStage = AppCore.setStage;\nwindow.passStyleValue = AppCore.passStyleValue;\nwindow.passfvarValue = AppCore.passfvarValue;\nwindow.passfeatValue = AppCore.passfeatValue;\nwindow.insertField = AppCore.insertField;\nwindow.localStorageClear = AppCore.localStorageClear;\n\nconst init = (forceServerLoad = false) => {\n\ttry {\n\t  if (forceServerLoad || !['localhost', '127.0.0.1', ''].includes(location.hostname)) {\n\t\tAppCore.serverLoad();\n\t  } else {\n\t\tAppCore.localLoad();\n\t  }\n  \n\t  AppCore.setupEventListeners();\n\t  document.body.classList.add('loaded');\n  \n\t} catch (error) {\n\t  console.error('Error during initialization:', error);\n\t}\n  };\n\ndocument.addEventListener('DOMContentLoaded', () => init(true)); // Set to true to force serverLoad"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","showErrorMessage","message","el","document","getElementById","style","display","trim","length","textContent","console","error","localStorageClear","localStorage","clear","setItem","location","reload","toggleMode","body","getAttribute","removeAttribute","querySelector","setAttribute","whichFontSize","string","sizes","charCount","saveData","id","Storage","content","_regeneratorRuntime","e","t","r","n","i","a","iterator","c","asyncIterator","u","define","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","asyncGeneratorStep","_asyncToGenerator","arguments","apply","_next","_throw","font","fontFormats","truetype","opentype","onReadFile","event","files","target","fileButtonParent","innerHTML","Array","from","_ref","_callee","file","button","_context","generateFontButton","appendChild","_x","setTimeout","firstButton","click","setFont","fontPath","fontName","log","concat","load","err","loadedFont","fontFamilySource","fontFamily","reject","fontFaceRule","outlinesFormat","createElement","head","window","displayFontData","includes","hostname","pendingStage","setStage","onFontLoaded","getItem","tablename","styles","tables","gim","cmap","glyphIndexMap","gimLength","proofingPhase","fontFormat","nameHtml","names","designer","designerName","en","postScriptName","Date","toJSON","replace","stage","article","stageButtons","warn","fetch","response","json","proof","html","generateStageHtml","buttonHtml","generateStageButtons","gsubFeatures","gsub","features","taglist","filter","feature","tag","map","undefined","title","textClass","testAreaID","itemID","sliderID","_getStoredStyles","getStoredStyles","fontSize","lineHeight","letterSpacing","inlineStyle","fvarStyle","generateFvarStyle","generateSliders","generateVariableSliders","generateStyleButtons","generateFeatureCheckboxes","generateProofContent","columnCount","columnGap","fvar","axes","axis","storedValue","defaultValue","join","minValue","maxValue","_ref3","_callee3","mode","fontType","isVariable","_args3","_context3","split","toUpperCase","isVariableFont","URL","createObjectURL","className","onclick","_x3","_ref4","_callee4","arrayBuffer","parsedFont","_context4","parse","t0","_x4","updateColumns","passStyleValue","uniqueTags","_toConsumableArray","Set","headingContent","_getStoredStyles2","sample","storedContent","generateTestAreaValues","fontSizeSlider","lineHeightSlider","letterSpacingSlider","columnCountInput","columnGapInput","updateDisplayedValues","entries","_ref5","_ref6","_slicedToArray","element","_style$split$map2","property","updateInlineText","container","existingSpan","newSpan","insertField","aboveHere","original","clone","cloneNode","now","querySelectorAll","input","parentNode","insertBefore","height","overflow","transition","scrollHeight","elementIdSuffix","testarea","css","updateActiveButton","passfvarValue","fvarSupport","fvarcss","_document$getElementB","tagValue","fontVariationSettings","passfeatValue","featureSupport","featSupport","featcss","checked","fontFeatureSettings","btn","classList","add","wrapper","closest","sibling","remove","currentStage","localLoad","text","_ref7","_callee5","data","fonts","uniqueFonts","buttonPromises","_context5","arr","sort","all","_x5","serverLoad","dragDropArea","fileInput","eventName","addEventListener","preventDefaults","highlight","unhighlight","handleDrop","handleFiles","preventDefault","stopPropagation","dataTransfer","uploadFile","previewFile","reader","FileReader","readAsDataURL","onloadend","img","src","result","setupEventListeners","fileButtons","toolsToggle","modeToggle","localStorageClearButton","handleFileButtonClick","handleStageButtonClick","toggleToolsVisibility","contains","children","child","toggle","reason","AppCore","forceServerLoad","init"],"sourceRoot":""}