{"version":3,"file":"application.js","mappings":"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","sources":["webpack://idiotproof/./src/js/utils.js","webpack://idiotproof/./src/js/config.js","webpack://idiotproof/./src/js/app-core.js","webpack://idiotproof/./src/js/index.js"],"sourcesContent":["import { CONFIG } from './config.js';\n  \n  // utils.js\n  export const getFormattedDate = () => {\n    const now = new Date();\n    return now.toJSON().slice(0, 10).replace(/-/g, '/');\n  };\n  \n  export const preserveUnique = (arr) => {\n    return [...new Set(arr)];\n  };\n  \n  export const showErrorMessage = (message) => {\n    const el = document.getElementById('message');\n    if (el) {\n      el.style.display = message && message.trim().length > 0 ? 'block' : 'none';\n      el.textContent = message;\n    } else {\n      console.error('Message element not found. Error message:', message);\n    }\n  };\n  \n  export const uint8ToBase64 = (buffer) => {\n    const chunk = 8192;\n    let result = '';\n    for (let i = 0; i < buffer.length; i += chunk) {\n      const slice = buffer.subarray(i, i + chunk);\n      result += String.fromCharCode.apply(null, slice);\n    }\n    return btoa(result);\n  };\n  \n  export const sanitizeId = (id) => {\n    return id.replace(/[^a-z0-9]/gi, '_').toLowerCase();\n  };\n\n  export const localStorageClear = () => {\n    localStorage.clear();\n    localStorage.setItem('proofingPhase', CONFIG.defaultProofingPhase);\n    location.reload();\n  };\n\n  export function toggleMode() {\n\tconst body = document.body;\n\tif (body.getAttribute('data-theme') === 'dark') {\n\t  body.removeAttribute('data-theme');\n\t  document.querySelector('#btn__mode-toggle .material-symbols-outlined').textContent = 'light_mode';\n\t} else {\n\t  body.setAttribute('data-theme', 'dark');\n\t  document.querySelector('#btn__mode-toggle .material-symbols-outlined').textContent = 'dark_mode';\n\t}\n  }\n\n  export function toggleUi() {\n\tconst toggleUIButton = document.getElementById('btn__ui-toggle');\n\tconst body = document.body;\n  \n\tbody.classList.toggle('ui-hidden');\n\tthis.classList.toggle('ui-hidden');\n\t\n\t// Optionally, you can save the state to localStorage\n\tlocalStorage.setItem('uiHidden', body.classList.contains('ui-hidden'));\n  \n\t// Check if the UI was hidden in a previous session\n\tif (localStorage.getItem('uiHidden') === 'true') {\n\t  body.classList.add('ui-hidden');\n\t  toggleUIButton.classList.add('ui-hidden');\n\t}\n  }\n  \n  export const whichFontSize = (string) => {\n    const sizes = {\n      't__size-xxl': '140',\n      't__size-xl': '100',\n      't__size-l': '84',\n      't__size-m': '56',\n      't__size-s': '28',\n      't__size-xs': '14',\n    };\n  \n    if (sizes[string]) return sizes[string];\n  \n    const charCount = string.length;\n    if (charCount < 25) return 't__size-xxl';\n    if (charCount < 50) return 't__size-xl';\n    if (charCount < 95) return 't__size-l';\n    if (charCount < 200) return 't__size-m';\n    if (charCount < 1000) return 't__size-s';\n    return 't__size-xs';\n  };\n  \n  export const removeElementsByClass = (className) => {\n    document.querySelectorAll(`.${className}`).forEach(el => el.remove());\n  };\n  \n  export const removeElementById = (id) => {\n    const element = document.getElementById(id);\n    if (element) {\n      element.style.transition = 'opacity 0.5s ease';\n      element.style.opacity = '0';\n      setTimeout(() => element.remove(), 500);\n    }\n  };\n  \n  export const saveData = (id, value) => {\n    if (typeof Storage !== 'undefined') {\n      if (value !== 'thisContent') {\n        localStorage.setItem(id, value);\n      } else {\n        const content = document.getElementById(id).textContent;\n        localStorage.setItem(id, content);\n      }\n    }\n  };\n  \n  // Save content of a contenteditable element to localStorage\n  export const saveEditableContent = (elementId) => {\n    const element = document.getElementById(elementId);\n    if (!element) {\n      console.warn(`Element with ID ${elementId} not found`);\n      return;\n    }\n    \n    const content = element.innerText;\n    localStorage.setItem(elementId, content);\n  };\n\n  // Save value of an input element to localStorage\n  export const saveInputValue = (elementId) => {\n    const element = document.getElementById(elementId);\n    if (!element) {\n      console.warn(`Element with ID ${elementId} not found`);\n      return;\n    }\n    \n    localStorage.setItem(elementId, element.value);\n  };\n\n  // Get content from localStorage or return default\n  export const getStoredContent = (elementId, defaultContent = '') => {\n    return localStorage.getItem(elementId) || defaultContent;\n  };\n  ","// config.js\nexport const CONFIG = {\n    defaultProofingPhase: 'Hamburgers',\n    fontFormats: {\n      truetype: 'ttf',\n      opentype: 'otf',\n    },\n    jsonPath: 'src/js/proof.json',\n  };","import { CONFIG } from './config.js';\nimport { getFormattedDate,\n\tpreserveUnique,\n\tshowErrorMessage,\n\tuint8ToBase64,\n\tlocalStorageClear,\n\twhichFontSize,\n\tremoveElementsByClass,\n\tsaveData,\n\ttoggleMode,\n\ttoggleUi,\n\tsaveEditableContent,\n\tsaveInputValue,\n\tgetStoredContent  } from './utils.js';\n\n// Re-export localStorageClear\nexport { localStorageClear };\n\nlet font = null;\nconst fontFormats = {\n    truetype: 'ttf',\n    opentype: 'otf',\n};\n\nexport const onFontLoaded = (loadedFont, fontFamilySource, fontFamily) => {\n\treturn new Promise((resolve, reject) => {\n\t  try {\n\t\tfont = loadedFont;\n\t\tconsole.log(`Font assigned globally: ${fontFamily}`);\n\t\t\n\t\t// Create and apply the font-face rule\n\t\tconst fontFaceRule = `\n\t\t  @font-face {\n\t\t\tfont-family: '${fontFamily}';\n\t\t\tsrc: url('${fontFamilySource}') format('${loadedFont.outlinesFormat === 'truetype' ? 'truetype' : 'opentype'}');\n\t\t  }\n\t\t`;\n\t\tconst style = document.createElement('style');\n\t\tstyle.textContent = fontFaceRule;\n\t\tdocument.head.appendChild(style);\n\t\tconsole.log(`Font-face rule applied: ${fontFaceRule}`);\n  \n\t\twindow.fontFamily = fontFamily;\n\t\tconsole.log(`Window.fontFamily set to: ${fontFamily}`);\n  \n\t\tdisplayFontData(fontFamily);\n  \n\t\tif (['localhost', '127.0.0.1', ''].includes(location.hostname)) {\n\t\t  localStorage.setItem('fontFamily', fontFamily);\n\t\t  localStorage.setItem('fontFamilySource', fontFamilySource);\n\t\t  console.log(`Font information saved to localStorage`);\n\t\t}\n  \n\t\t// If there's a pending stage, set it now\n\t\tif (window.pendingStage) {\n\t\t  setStage(window.pendingStage);\n\t\t  window.pendingStage = null;\n\t\t} else {\n\t\t  // Set a default stage if none is pending\n\t\t  setStage('Hamburgers');  // or whatever your default stage should be\n\t\t}\n\t\tconsole.log(`Stage set successfully`);\n\t\tresolve();\n\t  } catch (error) {\n\t\tconsole.error('Error in onFontLoaded:', error);\n\t\treject(error);\n\t  }\n\t});\n  };\n\nexport const onReadFile = (event) => {\n\tconst files = event.target.files;\n\tconst fileButtonParent = document.getElementById('section__header-file-buttons');\n\tfileButtonParent.innerHTML = '';\n  \n\tArray.from(files).forEach(async file => {\n\t  const button = await generateFontButton(file, 'server');\n\t  fileButtonParent.appendChild(button);\n\t});\n  \n\t// Activate the first button automatically after all chips have loaded\n\tsetTimeout(() => {\n\t  const firstButton = fileButtonParent.querySelector('.btn__setfont');\n\t  if (firstButton) {\n\t\tfirstButton.click(); // Simulate a click on the first button\n\t  }\n\t}, 0);\n  };\n\n  const readSingleFile = (file) => {\n\treturn new Promise((resolve, reject) => {\n\t  const reader = new FileReader();\n\t  \n\t  reader.onload = async (e) => {\n\t\ttry {\n\t\t  console.log(`File read successfully: ${file.name}`);\n\t\t  const font = opentype.parse(e.target.result);\n\t\t  console.log(`Font parsed successfully: ${font.names.postScriptName.en}`);\n\t\t  const fontFamily = font.names.postScriptName.en;\n\t\t  const fontFamilySource = `fonts/${fontFamily}`;\n\t\t  \n\t\t  await onFontLoaded(font, fontFamilySource, fontFamily);\n  \n\t\t  font.file = {\n\t\t\tname: file.name,\n\t\t\tlastModified: file.lastModified,\n\t\t\tsize: file.size,\n\t\t\ttype: file.type,\n\t\t  };\n\t\t  font.type = 'user:local';\n  \n\t\t  const tempUint8array = new Uint8Array(e.target.result);\n\t\t  const isVariableFont = font.tables.fvar !== undefined;\n  \n\t\t  // Set the @font-face rule\n\t\t  const fontFaceRule = `@font-face {font-family:'${fontFamily}'; src: url('data:font/ttf;base64,${uint8ToBase64(tempUint8array)}') format('truetype');}`;\n\t\t  document.getElementById('style__fontface').innerHTML += fontFaceRule;\n\t\t  console.log(`Font-face rule added: ${fontFaceRule}`);\n  \n\t\t  console.log(`Loaded font: ${fontFamily}, Variable: ${isVariableFont}`);\n  \n\t\t  showErrorMessage('');\n\t\t  resolve();\n\t\t} catch (err) {\n\t\t  console.error('Error parsing font:', err);\n\t\t  showErrorMessage(`Error loading font: ${err.message}`);\n\t\t  reject(err);\n\t\t}\n\t  };\n  \n\t  reader.onerror = (err) => {\n\t\tconsole.error('Error reading file:', err);\n\t\tshowErrorMessage(err.toString());\n\t\treject(err);\n\t  };\n  \n\t  reader.readAsArrayBuffer(file);\n\t});\n  };\n\nexport const setFont = (fontPath, fontName) => {\n\tconsole.log(`Attempting to load font: ${fontName} from ${fontPath}`);\n\topentype.load(fontPath, (err, loadedFont) => {\n\t  if (err) {\n\t\tconsole.error('Error loading font:', err);\n\t\tshowErrorMessage(`Error loading font: ${err}`);\n\t  } else {\n\t\tconsole.log(`Font loaded successfully: ${fontName}`);\n\t\tfont = loadedFont; // Ensure this is set globally\n\t\ttry {\n\t\t  onFontLoaded(loadedFont, fontPath, fontName);\n\t\t  // After the font is loaded and processed, set the stage\n\t\t  setStage(localStorage.getItem('proofingPhase') || 'Hamburgers');\n\t\t} catch (error) {\n\t\t  console.error('Error in onFontLoaded:', error);\n\t\t  showErrorMessage(`Error processing font: ${error}`);\n\t\t}\n\t  }\n\t});\n  };\n\nexport const displayFontData = (fontFamily) => {\n    var tablename, table, property, value, tag;\n    var styles = '';\n\n    for (tablename in font.tables) {\n        table = font.tables[tablename];\n\n        if (tablename === 'cmap') {\n            var gim = font.tables.cmap.glyphIndexMap;\n            var gimLength = Object.keys(gim).length;\n            if (gimLength <= 100) {\n                window.proofingPhase = \"Hamburgers\";\n            } else if (gimLength >= 400) {\n                window.proofingPhase = \"Diacritics\";\n            } else {\n                window.proofingPhase = \"Spacing\";\n            }\n        }\n        // Determine if TTF or OTF\n        var fontFormat = font.outlinesFormat;\n        fontFormat = fontFormats[fontFormat];\n        // Inserting header data: font name, foundry name, etc.\n        if (tablename === 'name') {\n                let nameHtml = '';\n                if (font.names.designer) {\n                    var designerName = font.names.designer.en;\n                } else {\n                    var designerName = \"No Designer Name :(\";\n                }\n                if (font.names.postScriptName) {\n                    var postScriptName = font.names.postScriptName.en;\n                } else {\n                    var postScriptName = \"Font Name\";\n                }\n                nameHtml += '<div class=\"section__header-name d-flex-grow t__left\" contenteditable=\"true\" spellcheck=\"false\">'+designerName+'</div>';\n\n                nameHtml += '<div class=\"section__header-name d-flex-grow t__center\" spellcheck=\"false\">'+postScriptName+'</div>';\n                styles += `.t__importedfontfamily { font-family: \"${fontFamily}\" }`;\n                nameHtml += '<div class=\"section__header-name  d-flex-grow t__right\">'+getFormattedDate()+'</div>';\n                document.getElementById('section__header-names').innerHTML = nameHtml;\n                continue;\n        }\n    }\n    //Inject css of necessary features\n    document.getElementById('style__fontfamily').innerHTML = styles;\n    \n    //setStage\n    if (localStorage.getItem('proofingPhase')) {\n            // Check for local storage settings\n            setStage(localStorage.getItem('proofingPhase'));\n    } else {\n            setStage(window.proofingPhase);\n    }\n};\n\nexport const setStage = (stage) => {\n\tconst article = document.getElementById('section__article-app');\n\tconst stageButtons = document.getElementById('section__header-stage-buttons');\n\t\n\tif (!font) {\n\t  console.warn('Font not loaded yet. Deferring stage setting.');\n\t  // Store the stage to set later\n\t  window.pendingStage = stage;\n\t  return;\n\t}\n  \n\tfetch(CONFIG.jsonPath)\n\t  .then(response => response.json())\n\t  .then(proof => {\n\t\tconst html = generateStageHtml(proof, stage);\n\t\tconst buttonHtml = generateStageButtons(proof, stage);\n  \n\t\tarticle.innerHTML = html;\n\t\tstageButtons.innerHTML = buttonHtml;\n\t\tdocument.getElementById('style__opentype-features').innerHTML = '';\n\t\t\n\t\tsaveData('proofingPhase', stage);\n\t  })\n\t  .catch(error => console.error('Error loading JSON:', error));\n  };\n  \n  const generateStageHtml = (proof, stage) => {\n    if (!proof[stage]) {\n      return '<div class=\"item d-flex t__center\"><div class=\"item__proof\">No features found! :...(</div></div>';\n    }\n  \n    const gsubFeatures = font.tables.gsub.features;\n    const taglist = Object.values(gsubFeatures)\n\t\t.filter(feature => typeof feature === 'object' && feature.tag)\n\t\t.map(feature => feature.tag)\n\t\t.filter(tag => proof[\"Features\"][tag] !== undefined);\n  \n    let html = '';\n  \n    for (const title in proof[stage]) {\n      if (stage === \"Features\" && !taglist.includes(title)) {\n        continue;\n      }\n  \n      const textClass = whichFontSize(proof[stage][title]);\n      const testAreaID = `section__proofing-${title}`;\n      const itemID = `item--${title}`;\n      const sliderID = `${itemID}`;\n      \n      const { fontSize, lineHeight, letterSpacing, inlineStyle } = getStoredStyles(sliderID, textClass);\n      const fvarStyle = generateFvarStyle(itemID);\n  \n      html += `\n        <div id=\"${itemID}\" class=\"item\">\n          <button class=\"btn btn-link add-item-above chip\" onclick=\"insertField('${itemID}')\">+ Add Proof Window</button>\n          <div class=\"item__container d-flex\">\n            <div class=\"item__sliders pt-2\">\n              <div class=\"item__sliders-wrapper\">\n                ${generateSliders(itemID, sliderID, fontSize, lineHeight, letterSpacing)}\n                ${generateVariableSliders(itemID, sliderID)}\n                ${generateStyleButtons(itemID)}\n                ${generateFeatureCheckboxes(itemID, proof, taglist)}\n                <button class=\"btn btn-secondary mr-1 mb-1 mt-6\" title=\"Apply these styles to all visible proof sheets.\" onclick=\"passStyleValue('${itemID}','idiocracy','global')\">Global Idiocracy</button>\n              </div>\n            </div>\n            <div class=\"item__proof\">\n              <button class=\"btn btn-link remove-item-this invisible\" onclick=\"removeElementsByID('${itemID}')\">×</button>\n              ${generateProofContent(stage, title, proof, testAreaID, inlineStyle, fvarStyle, textClass)}\n            </div>\n          </div>\n        </div>\n      `;\n    }\n\treturn html;\n  };\n  \n// Modify the getStoredStyles function to include column properties\nconst getStoredStyles = (itemID, textClass) => {\n\tconst fontSize = localStorage.getItem(`${itemID}-fontSize`) || whichFontSize(textClass);\n\tconst lineHeight = localStorage.getItem(`${itemID}-lineHeight`) || '1.2';\n\tconst letterSpacing = localStorage.getItem(`${itemID}-letterSpacing`) || '0em';\n\tconst columnCount = localStorage.getItem(`${itemID}-column-count`) || '1';\n\tconst columnGap = localStorage.getItem(`${itemID}-column-gap`) || '1em';\n  \n\tconst inlineStyle = `\n\t  font-size: ${fontSize}pt;\n\t  line-height: ${lineHeight};\n\t  letter-spacing: ${letterSpacing};\n\t  column-count: ${columnCount};\n\t  column-gap: ${columnGap};\n\t`;\n  \n\treturn { fontSize, lineHeight, letterSpacing, columnCount, columnGap, inlineStyle };\n  };\n  \n  const generateFvarStyle = (itemID) => {\n    let fvarStyle = '';\n    if (font.tables.fvar) {\n      const fvarSupport = font.tables.fvar.axes.map(axis => axis.tag);\n      fvarStyle = 'font-variation-settings: ' + \n        font.tables.fvar.axes.map(axis => {\n          const storedValue = localStorage.getItem(`${itemID}-${axis.tag}-val`);\n          const value = storedValue !== null ? storedValue : axis.defaultValue;\n          return `'${axis.tag}' ${value}`;\n        }).join(', ') + ';';\n    }\n    return fvarStyle;\n  };\n  \n  const generateSliders = (itemID, sliderID, fontSize, lineHeight, letterSpacing) => `\n    <label for=\"${sliderID}-fontSize\">Font Size </label>\n    <span class=\"t__right text-small\" id=\"${sliderID}-fontSize-val\">${fontSize}pt</span>\n    <input id=\"${sliderID}-fontSize\" type=\"range\" class=\"slider\" min=\"4\" max=\"160\" step=\"2\" value=\"${fontSize}\" oninput=\"passStyleValue('${itemID}', 'fontSize', this.value)\">\n    \n    <label for=\"${sliderID}-lineHeight\">Line Height </label>\n    <span class=\"t__right text-small\" id=\"${sliderID}-lineHeight-val\">${lineHeight}</span>\n    <input id=\"${sliderID}-lineHeight\" type=\"range\" class=\"slider\" min=\"0.6\" max=\"3.0\" step=\"0.01\" value=\"${lineHeight}\" oninput=\"passStyleValue('${itemID}', 'lineHeight', this.value)\">\n    \n    <label for=\"${sliderID}-letterSpacing\">Letter Spacing </label>\n    <span class=\"t__right text-small\" id=\"${sliderID}-letterSpacing-val\">${letterSpacing}</span>\n    <input id=\"${sliderID}-letterSpacing\" type=\"range\" class=\"slider\" min=\"-0.4\" max=\"0.4\" step=\"0.01\" value=\"${letterSpacing}\" oninput=\"passStyleValue('${itemID}', 'letterSpacing', this.value)\">\n  `;\n  \n  const generateVariableSliders = (itemID, sliderID) => {\n    if (!font.tables.fvar) return '';\n  \n    return font.tables.fvar.axes.map(axis => {\n      const storedValue = localStorage.getItem(`${itemID}-${axis.tag}-val`);\n      const value = storedValue !== null ? storedValue : axis.defaultValue;\n      return `\n        <label for=\"${sliderID}-${axis.tag}\">${axis.name.en} </label>\n        <span class=\"t__right text-small\" id=\"${sliderID}-${axis.tag}-val\">${value}</span>\n        <input id=\"${sliderID}-${axis.tag}\" type=\"range\" class=\"slider\" min=\"${axis.minValue}\" max=\"${axis.maxValue}\" value=\"${value}\" oninput=\"passfvarValue('${itemID}', '${axis.tag}', this.value, '${font.tables.fvar.axes.map(a => a.tag).join(',')}')\">\n      `;\n    }).join('');\n  };\n  \n  export const generateFontButton = async (font, mode = 'local') => {\n\tlet fontName, fontPath, fontType, displayName, isVariable;\n  \n\tif (mode === 'local') {\n\t  fontName = font.replace('.', '-');\n\t  fontPath = `fonts/${font}`;\n\t  displayName = font.replace('-', ' ').replace(/\\.[^/.]+$/, \"\");\n\t  fontType = font.split('.').pop().toUpperCase();\n\t  isVariable = await isVariableFont(fontPath);\n\t} else { // server mode\n\t  fontName = font.name.replace('.', '-');\n\t  fontPath = URL.createObjectURL(font);\n\t  displayName = font.name.replace('-', ' ').replace(/\\.[^/.]+$/, \"\");\n\t  fontType = font.name.split('.').pop().toUpperCase();\n\t  isVariable = await isVariableFont(font);\n\t}\n  \n\tif (isVariable) {\n\t  fontType = 'VF';\n\t}\n  \n\tconst button = document.createElement('div');\n\tbutton.className = 'btn__setfont chip btn d-flex justify-content-between';\n\tbutton.title = mode === 'local' ? font : font.name;\n\tbutton.id = `btn__setfont-${fontName}`;\n\tbutton.innerHTML = `${displayName}<span class=\"d-flex-grow text-small text-right\">${fontType}</span>`;\n\tbutton.onclick = () => setFont(fontPath, fontName);\n  \n\treturn button;\n  };\n  \n  const isVariableFont = async (font) => {\n\ttry {\n\t  let arrayBuffer;\n\t  if (typeof font === 'string') {\n\t\t// Local mode: font is a path\n\t\tconst response = await fetch(font);\n\t\tarrayBuffer = await response.arrayBuffer();\n\t  } else {\n\t\t// Server mode: font is a File object\n\t\tarrayBuffer = await font.arrayBuffer();\n\t  }\n\t  const parsedFont = opentype.parse(arrayBuffer);\n\t  return parsedFont.tables.fvar !== undefined;\n\t} catch (error) {\n\t  console.error('Error checking if font is variable:', error);\n\t  return false;\n\t}\n  };\n  \n  const generateFontFaces = (fonts) => {\n\treturn fonts.map(font => {\n\t  const fontName = font.replace('.', '-');\n\t  return `@font-face { font-family: \"${fontName}\"; src: url(\"fonts/${font}\");}`;\n\t}).join('\\n');\n  };\n\n  // Add new function to handle column updates\nwindow.updateColumns = (itemID) => {\n\tconst columnCount = document.getElementById(`${itemID}-column-count`).value;\n\tconst columnGap = document.getElementById(`${itemID}-column-gap`).value;\n\t\n\tpassStyleValue(itemID, 'column-count', columnCount);\n\tpassStyleValue(itemID, 'column-gap', columnGap);\n  };\n\n  const generateStyleButtons = (itemID) => `\n  <div id=\"btn__wrapper-case\">\n    <label>Case</label>\n    <div class=\"d-flex g-1 btn__wrapper\">\n      <button class=\"btn btn-link textTransform-uppercase\" title=\"Uppercase\" onclick=\"passStyleValue('${itemID}','textTransform', 'uppercase')\">TT</button>\n      <button class=\"btn btn-link textTransform-capitalize\" title=\"Capitalize\" onclick=\"passStyleValue('${itemID}','textTransform', 'capitalize')\">Tt</button>\n      <button class=\"btn btn-link textTransform-lowercase\" title=\"Lowercase\" onclick=\"passStyleValue('${itemID}','textTransform', 'lowercase')\">tt</button>\n    </div>\n  </div>\n  <div id=\"btn__wrapper-columns\">\n    <label>Columns</label>\n    <div class=\"d-flex g-1 btn__wrapper\">\n\t<span class=\"text-small\">Count</span>\n      <input class=\"input\" type=\"number\" id=\"${itemID}-column-count\" min=\"1\" max=\"6\" value=\"1\" onchange=\"updateColumns('${itemID}')\" style=\"width: 50px;\">\n\t<span class=\"text-small\">Gap</span>\n      <input class=\"input\" type=\"text\" id=\"${itemID}-column-gap\" value=\"10px\" onchange=\"updateColumns('${itemID}')\" style=\"width: 50px;\">\n    </div>\n  </div>\n`;\n\n\n  \nconst generateFeatureCheckboxes = (itemID, proof, taglist) => {\n\tconst uniqueTags = [...new Set(taglist)];\n\treturn `\n\t  <label>Features</label>  \n\t  <div class=\"btn__wrapper d-flex flex-wrap g-0\">\n\t\t${uniqueTags.map(tag => {\n\t\t  const name = proof[\"Features\"][tag][\"abstract\"];\n\t\t  return `\n\t\t\t<div class=\"chip d-flex align-items-center justify-content-between d-flex-grow\" onclick=\"document.getElementById('${itemID}-checkbox-${tag}').click()\">\n\t\t\t  <input id=\"${itemID}-checkbox-${tag}\" type=\"checkbox\" onclick=\"passfeatValue('${itemID}', '${tag}', '${uniqueTags.join(',')}')\">\n\t\t\t  <span class=\"d-flex-grow\">${name}</span>\n\t\t\t  <span class=\"tag-label text-small\">${tag}</span>\n\t\t\t</div>\n\t\t  `;\n\t\t}).join('')}\n\t  </div>\n\t`;\n  };\n  \n  \n  const generateProofContent = (stage, title, proof, testAreaID, inlineStyle, fvarStyle, textClass) => {\n\t// Get saved content or use defaults\n\tconst savedContent = getStoredContent(testAreaID, proof[stage][title]);\n\tconst savedTitle = getStoredContent(`${testAreaID}-title`, title);\n  \n\tlet headingContent;\n\tif (stage === \"Features\") {\n\t  const definition = proof[stage][title].definition;\n\t  headingContent = `\n\t    <h6 class=\"h6\" \n\t        title=\"${definition}\" \n\t        contentEditable=\"true\" \n\t        id=\"${testAreaID}-title\"\n\t        onkeyup=\"saveEditableContent('${testAreaID}-title')\">${savedTitle}</h6>`;\n\t} else {\n\t  headingContent = `\n\t    <h6 contentEditable=\"true\" \n\t        id=\"${testAreaID}-title\"\n\t        onkeyup=\"saveEditableContent('${testAreaID}-title')\">${savedTitle}</h6>`;\n\t}\n  \n\tconst html = `\n\t  ${headingContent}\n\t  <span class=\"testarea-values small\">${generateTestAreaValues(inlineStyle)}</span>\n\t  <div id=\"${testAreaID}\" \n\t       style=\"${inlineStyle} ${fvarStyle}\" \n\t       class=\"t__importedfontfamily ${textClass} testarea\" \n\t       contenteditable=\"true\" \n\t       spellcheck=\"false\" \n\t       onkeyup=\"saveEditableContent('${testAreaID}')\">\n\t    ${savedContent}\n\t  </div>\n\t`;\n  \n\treturn html;\n  };\n  \n  const generateTestAreaValues = (inlineStyle) => {\n    const styles = inlineStyle.split(';').filter(s => s.trim());\n    return styles.map(style => {\n      const [property, value] = style.split(':').map(s => s.trim());\n      return `<span class=\"${property}\">${property}: ${value}</span>`;\n    }).join(' ');\n  };\n  \n  const updateInlineText = (itemID, property, value) => {\n\tconst container = document.querySelector(`#${itemID} .testarea-values`);\n\tconst existingSpan = container.querySelector(`.${property}`);\n\t\n\tif (existingSpan) {\n\t  existingSpan.textContent = `${property}: ${value}`;\n\t} else {\n\t  const newSpan = document.createElement('span');\n\t  newSpan.className = property;\n\t  newSpan.textContent = `${property}: ${value}`;\n\t  container.appendChild(newSpan);\n\t}\n  };\n\n// Global functions\n\nexport const insertField = (aboveHere) => {\n\tconst original = document.getElementById(aboveHere);\n\tconst clone = original.cloneNode(true);\n\t\n\t// Reset any unique IDs or input values in the clone\n\tclone.id = `${aboveHere}-clone-${Date.now()}`;\n\tclone.querySelectorAll('[id]').forEach(el => {\n\t  el.id = `${el.id}-clone-${Date.now()}`;\n\t});\n\tclone.querySelectorAll('input').forEach(input => {\n\t  input.value = '';\n\t});\n  \n\toriginal.parentNode.insertBefore(clone, original);\n\t\n\t// Animate the insertion\n\tclone.style.height = '0px';\n\tclone.style.overflow = 'hidden';\n\tclone.style.transition = 'height 0.6s ease';\n\t\n\tsetTimeout(() => {\n\t  clone.style.height = `${clone.scrollHeight}px`;\n\t}, 0);\n\t\n\tsetTimeout(() => {\n\t  clone.style.height = 'auto';\n\t  clone.style.overflow = 'visible';\n\t}, 600);\n  };\n  \n  export const passStyleValue = (itemID, property, value) => {\n\tconst elementIdSuffix = `-${property}-val`;\n\tconst element = document.querySelector(`[id$=\"${itemID}${elementIdSuffix}\"]`);\n\t\n\tif (['fontSize', 'lineHeight', 'letterSpacing', 'column-count', 'column-gap'].includes(property)) {\n\t  saveData(`${itemID}-${property}`, value);\n\t  if (property === 'fontSize') value += 'pt';\n\t  if (property === 'letterSpacing') value += 'em';\n\t  if (element) element.textContent = value;\n\t} else {\n\t  saveData(itemID + property, value);\n\t}\n  \n\tconst testarea = document.querySelector(`#${itemID} .testarea`);\n\tif (property === 'idiocracy') {\n\t  const css = testarea.getAttribute('style');\n\t  document.querySelectorAll('.testarea').forEach(el => el.setAttribute('style', css));\n\t} else {\n\t  testarea.style[property] = value;\n\t}\n  \n\tupdateInlineText(itemID, property, value);\n  \n\t// Only update active button for non-slider properties\n\tif (!['fontSize', 'lineHeight', 'letterSpacing', 'column-count', 'column-gap'].includes(property)) {\n\t  updateActiveButton(property, value);\n\t}\n  };\n  \n  export const passfvarValue = (itemID, property, value, fvarSupport) => {\n    const element = document.getElementById(`${itemID}-${property}-val`);\n    if (element) {\n        element.textContent = value;\n    } else {\n        console.warn(`Element with ID ${itemID}-${property}-val not found.`);\n    }\n\n    saveData(`${itemID}-${property}-val`, value);\n\n    const fvarSupportArray = fvarSupport.split(',');\n    let fvarcss = fvarSupportArray.map(tag => {\n        const tagValue = tag === property ? value : document.getElementById(`${itemID}-${tag}`)?.value; // Use optional chaining\n        return `'${tag}' ${tagValue}`;\n    }).join(', ');\n\n    const testarea = document.querySelector(`#${itemID} .testarea`);\n    if (testarea) {\n        testarea.style.fontVariationSettings = fvarcss;\n    } else {\n        console.warn(`Test area with ID ${itemID} not found.`);\n    }\n\n    updateInlineText(itemID, 'fvar', fvarcss);\n};\n  \n  export const passfeatValue = (itemID, feature, featureSupport) => {\n\tconst featSupport = featureSupport.split(',');\n\tlet featcss = \"\";\n  \n\tfor (let f = 0; f < featSupport.length; f++) {\n\t  if (document.getElementById(`${itemID}-checkbox-${featSupport[f]}`).checked) {\n\t\tfeatcss += `'${featSupport[f]}',`;\n\t  }\n\t}\n\tfeatcss = featcss.replace(/,\\s*$/, \"\");\n\tdocument.querySelector(`#${itemID} .testarea`).style.fontFeatureSettings = featcss;\n  };\n  \n  const updateActiveButton = (property, value) => {\n\tdocument.querySelectorAll(`.btn.${property}-${value}`).forEach(btn => {\n\t  btn.classList.add('active');\n\t  \n\t  // Find the parent wrapper\n\t  const wrapper = btn.closest('.btn__wrapper');\n\t  \n\t  if (wrapper) {\n\t\t// If we found a wrapper, remove 'active' class from all sibling buttons\n\t\twrapper.querySelectorAll('.btn').forEach(sibling => {\n\t\t  if (sibling !== btn) sibling.classList.remove('active');\n\t\t});\n\t  } else {\n\t\t// Fallback: remove 'active' class from all buttons with the same property\n\t\tdocument.querySelectorAll(`.btn[class*=\"${property}-\"]`).forEach(sibling => {\n\t\t  if (sibling !== btn) sibling.classList.remove('active');\n\t\t});\n\t  }\n\t});\n  };\n\n// generate buttons\nexport const generateStageButtons = (proof, currentStage) => {\n    return Object.keys(proof).map(stage => {\n      const isActive = stage === currentStage ? 'active' : '';\n      return `\n        <div class=\"tab-item ${isActive} tab__setstage\" onclick=\"setStage('${stage}')\">\n          <a href=\"#\" class=\"stage-button\">${stage}</a>\n        </div>\n      `;\n    }).join('');\n  };\n\n  // localload vs server\n\n  export const localLoad = () => {\n\tconst fileButtonParent = document.getElementById('section__header-file-buttons');\n\tfileButtonParent.innerHTML = 'Place fonts you want to proof into <code>/fonts</code> to begin';\n  \n\tfetch('../src/txt/fonts.txt')\n\t  .then(response => response.text())\n\t  .then(async data => {\n\t\tconst fonts = data.split('fonts/')\n\t\t  .filter(font => font.trim() !== '')\n\t\t  .map(font => font.trim());\n  \n\t\tconst uniqueFonts = preserveUnique(fonts.sort());\n\t\t\n\t\t// Generate buttons asynchronously\n\t\tconst buttonPromises = uniqueFonts.map(font => generateFontButton(font, 'local'));\n\t\tconst buttons = await Promise.all(buttonPromises);\n\t\t\n\t\t// Append buttons to the parent element\n\t\tbuttons.forEach(button => fileButtonParent.appendChild(button));\n  \n\t\t// Set the default font\n\t\tconst fontFamilySource = localStorage.getItem('fontFamilySource') || `fonts/${uniqueFonts[uniqueFonts.length - 1]}`;\n\t\tconst fontFamily = localStorage.getItem('fontFamily') || fontFamilySource.replace('.', '-');\n\t\tsetFont(fontFamilySource, fontFamily);\n\t  })\n\t  .catch(error => console.error('Error loading fonts:', error));\n  };\n  \n  export const serverLoad = () => {\n\tconst fileButtonParent = document.getElementById('section__header-file-buttons');\n\t\n\t// Load the default Gooper font\n\tsetFont('fonts/gooper-VF.ttf', 'gooper-VF-ttf');\n\tdocument.getElementById('style__fontface').innerHTML = '@font-face { font-family: \"gooper-VF-ttf\"; src: url(\"fonts/gooper-VF.ttf\");}';\n  \n\tconst dragDropHtml = `\n\t  <div id=\"drag-drop-area\" class=\"drag-drop-area\">\n\t\t<p>Drag & drop font files here</p>\n\t\t<p>or</p>\n\t\t<label for=\"fontInput\" class=\"file-input-label\">Choose Files</label>\n\t\t<input id=\"fontInput\" type=\"file\" class=\"file-input\" multiple accept=\".ttf,.otf\" />\n\t  </div>\n\t`;\n\t\n\tfileButtonParent.innerHTML = dragDropHtml;\n  \n\tconst dragDropArea = document.getElementById('drag-drop-area');\n\tconst fileInput = document.getElementById('fontInput');\n  \n\t// Prevent default drag behaviors\n\t['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {\n\t  dragDropArea.addEventListener(eventName, preventDefaults, false);\n\t  document.body.addEventListener(eventName, preventDefaults, false);\n\t});\n  \n\t// Highlight drop area when item is dragged over it\n\t['dragenter', 'dragover'].forEach(eventName => {\n\t  dragDropArea.addEventListener(eventName, highlight, false);\n\t});\n  \n\t['dragleave', 'drop'].forEach(eventName => {\n\t  dragDropArea.addEventListener(eventName, unhighlight, false);\n\t});\n  \n\t// Handle dropped files\n\tdragDropArea.addEventListener('drop', handleDrop, false);\n  \n\t// Handle selected files\n\tfileInput.addEventListener('change', handleFiles, false);\n  };\n  \n  function preventDefaults(e) {\n\te.preventDefault();\n\te.stopPropagation();\n  }\n  \n  function highlight(e) {\n\tdocument.getElementById('drag-drop-area').classList.add('highlight');\n  }\n  \n  function unhighlight(e) {\n\tdocument.getElementById('drag-drop-area').classList.remove('highlight');\n  }\n  \n  function handleDrop(e) {\n\tconst dt = e.dataTransfer;\n\tconst files = dt.files;\n\thandleFiles(files);\n  }\n  \n  function handleFiles(filesOrEvent) {\n\tlet files;\n\tif (filesOrEvent instanceof Event) {\n\t  files = filesOrEvent.target.files;\n\t} else {\n\t  files = filesOrEvent;\n\t}\n  \n\tfiles = Array.from(files);\n\t\n\t// Process all files\n\tconst uploadPromises = files.map(file => uploadFile(file));\n  \n\t// After all files are processed, select the first font chip\n\tPromise.all(uploadPromises).then(() => {\n\t  setTimeout(() => {\n\t\tconst firstButton = document.querySelector('.btn__setfont');\n\t\tif (firstButton) {\n\t\t  firstButton.click();\n\t\t}\n\t  }, 100); // Short delay to ensure DOM is updated\n\t});\n  }\n  \n  function uploadFile(file) {\n\treturn new Promise((resolve) => {\n\t  onReadFile({ target: { files: [file] } });\n\t  // Assume onReadFile is asynchronous and use a setTimeout to simulate its completion\n\t  setTimeout(resolve, 50);\n\t});\n  }\n  \n  // Make sure onReadFile returns a Promise or is modified to work with this approach\n  \n  function previewFile(file) {\n\tconst reader = new FileReader();\n\treader.readAsDataURL(file);\n\treader.onloadend = function() {\n\t  const img = document.createElement('img');\n\t  img.src = reader.result;\n\t  document.getElementById('drag-drop-area').appendChild(img);\n\t}\n  }\n  \n  export const setupEventListeners = () => {\n\tconst fileButtons = document.getElementById('section__header-file-buttons');\n\tconst stageButtons = document.getElementById('section__header-stage-buttons');\n\tconst toolsToggle = document.getElementById('btn__view-tools-toggle');\n\tconst modeToggle = document.getElementById('btn__mode-toggle');\n\tconst localStorageClearButton = document.getElementById('btn__reset-local-storage');\n  \n\tif (fileButtons) {\n\t  fileButtons.addEventListener('click', handleFileButtonClick);\n\t}\n\tif (stageButtons) {\n\t  stageButtons.addEventListener('click', handleStageButtonClick);\n\t}\n\tif (toolsToggle) {\n\t  toolsToggle.addEventListener('click', toggleToolsVisibility);\n\t}\n\tif (modeToggle) {\n\t\tmodeToggle.addEventListener('click', toggleMode);\n\t}\n\tif (localStorageClearButton) {\n\t\tlocalStorageClearButton.addEventListener('click', localStorageClear);\n\t}\n\tsetupPasteHandling();\n\n\n  };\n  \n  const handleFileButtonClick = (event) => {\n\tif (event.target.classList.contains('btn__setfont')) {\n\t  event.target.classList.add('active', 'visited');\n\t  // Remove 'active' class from sibling elements\n\t  const siblings = Array.from(event.target.parentNode.children).filter(child => child !== event.target);\n\t  siblings.forEach(sibling => sibling.classList.remove('active'));\n\t}\n  };\n  \n  const handleStageButtonClick = (event) => {\n\tif (event.target.classList.contains('btn__setstage')) {\n\t  event.target.classList.add('active');\n\t  // Remove 'active' class from sibling elements\n\t  const siblings = Array.from(event.target.parentNode.children).filter(child => child !== event.target);\n\t  siblings.forEach(sibling => sibling.classList.remove('active'));\n\t}\n  };\n  \n  const toggleToolsVisibility = () => {\n\tdocument.body.classList.toggle('tools-visible');\n  };\n\nconst setupPasteHandling = () => {\n  document.addEventListener('paste', (e) => {\n    // Only handle paste events in testarea elements\n    if (!e.target.classList.contains('testarea')) {\n      return;\n    }\n\n    // Prevent the default paste\n    e.preventDefault();\n\n    // Get plain text from clipboard\n    const text = (e.clipboardData || window.clipboardData).getData('text/plain');\n\n    // Insert the plain text at cursor position\n    const selection = window.getSelection();\n    if (selection.rangeCount) {\n      const range = selection.getRangeAt(0);\n      range.deleteContents();\n      range.insertNode(document.createTextNode(text));\n    } else {\n      e.target.textContent += text;\n    }\n\n    // Trigger the onkeyup event to save the content\n    const event = new Event('keyup');\n    e.target.dispatchEvent(event);\n  });\n};","import { CONFIG } from './config.js';\nimport * as AppCore from './app-core.js';\nimport { localStorageClear, saveEditableContent, saveInputValue } from './utils.js';\n\n// Global error handlers\nwindow.addEventListener('unhandledrejection', function(event) {\n  console.error('Unhandled promise rejection:', event.reason);\n});\n\nwindow.addEventListener('error', function(event) {\n  console.error('Uncaught error:', event.error);\n});\n\n// Make functions globally available\nwindow.setFont = AppCore.setFont;\nwindow.onReadFile = AppCore.onReadFile;\nwindow.setStage = AppCore.setStage;\nwindow.passStyleValue = AppCore.passStyleValue;\nwindow.passfvarValue = AppCore.passfvarValue;\nwindow.passfeatValue = AppCore.passfeatValue;\nwindow.insertField = AppCore.insertField;\nwindow.localStorageClear = localStorageClear;\nwindow.saveEditableContent = saveEditableContent;\nwindow.saveInputValue = saveInputValue;\n\nconst init = (forceServerLoad = false) => {\n\ttry {\n\t  if (forceServerLoad || !['localhost', '127.0.0.1', ''].includes(location.hostname)) {\n\t\tAppCore.serverLoad();\n\t  } else {\n\t\tAppCore.localLoad();\n\t  }\n  \n\t  AppCore.setupEventListeners();\n\t  document.body.classList.add('loaded');\n  \n\t} catch (error) {\n\t  console.error('Error during initialization:', error);\n\t}\n  };\n\ndocument.addEventListener('DOMContentLoaded', () => init(false)); // Set to true to force serverLoad"],"names":["showErrorMessage","message","el","document","getElementById","style","display","trim","length","textContent","console","error","localStorageClear","localStorage","clear","setItem","location","reload","toggleMode","body","getAttribute","removeAttribute","querySelector","setAttribute","whichFontSize","string","sizes","charCount","saveData","id","value","Storage","content","getStoredContent","elementId","defaultContent","arguments","undefined","getItem","_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","asyncGeneratorStep","_asyncToGenerator","apply","_next","_throw","font","fontFormats","truetype","opentype","onReadFile","event","files","target","fileButtonParent","innerHTML","Array","from","_ref","_callee","file","button","_context","generateFontButton","appendChild","_x","setTimeout","firstButton","click","setFont","fontPath","fontName","log","concat","load","err","loadedFont","fontFamilySource","fontFamily","reject","fontFaceRule","outlinesFormat","createElement","head","window","displayFontData","includes","hostname","pendingStage","setStage","onFontLoaded","tablename","styles","tables","gim","cmap","glyphIndexMap","gimLength","proofingPhase","fontFormat","nameHtml","names","designer","designerName","en","postScriptName","Date","toJSON","replace","stage","article","stageButtons","warn","fetch","response","json","proof","html","generateStageHtml","buttonHtml","generateStageButtons","gsubFeatures","gsub","features","taglist","filter","feature","tag","map","title","textClass","testAreaID","itemID","sliderID","_getStoredStyles","getStoredStyles","fontSize","lineHeight","letterSpacing","inlineStyle","fvarStyle","generateFvarStyle","generateSliders","generateVariableSliders","generateStyleButtons","generateFeatureCheckboxes","generateProofContent","columnCount","columnGap","fvar","axes","axis","storedValue","defaultValue","join","minValue","maxValue","_ref3","_callee3","mode","fontType","isVariable","_args3","_context3","split","toUpperCase","isVariableFont","URL","createObjectURL","className","onclick","_x3","_ref4","_callee4","arrayBuffer","parsedFont","_context4","parse","t0","_x4","updateColumns","passStyleValue","uniqueTags","Set","headingContent","savedContent","savedTitle","definition","generateTestAreaValues","_style$split$map2","property","updateInlineText","container","existingSpan","newSpan","elementIdSuffix","element","testarea","css","querySelectorAll","updateActiveButton","btn","classList","add","wrapper","closest","sibling","remove","currentStage","preventDefaults","preventDefault","stopPropagation","highlight","unhighlight","handleDrop","handleFiles","dataTransfer","filesOrEvent","Event","uploadPromises","uploadFile","all","handleFileButtonClick","contains","parentNode","children","child","handleStageButtonClick","toggleToolsVisibility","toggle","addEventListener","reason","AppCore","passfvarValue","fvarSupport","fvarcss","_document$getElementB","tagValue","fontVariationSettings","passfeatValue","featureSupport","featSupport","featcss","checked","fontFeatureSettings","insertField","aboveHere","original","clone","cloneNode","now","input","insertBefore","height","overflow","transition","scrollHeight","saveEditableContent","innerText","saveInputValue","init","fileButtons","toolsToggle","modeToggle","localStorageClearButton","forceServerLoad","dragDropArea","fileInput","eventName","text","_ref5","_callee5","data","fonts","uniqueFonts","buttonPromises","_context5","arr","sort","_x5","clipboardData","getData","selection","getSelection","rangeCount","range","getRangeAt","deleteContents","insertNode","createTextNode","dispatchEvent"],"sourceRoot":""}