{"version":3,"file":"application.js","mappings":"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","sources":["webpack://idiotproof/./src/js/utils.js","webpack://idiotproof/./src/js/config.js","webpack://idiotproof/./src/js/app-core.js","webpack://idiotproof/./src/js/index.js"],"sourcesContent":["import { CONFIG } from './config.js';\n  \n  // utils.js\n  export const getFormattedDate = () => {\n    const now = new Date();\n    return now.toJSON().slice(0, 10).replace(/-/g, '/');\n  };\n  \n  export const preserveUnique = (arr) => {\n    return [...new Set(arr)];\n  };\n  \n  export const showErrorMessage = (message) => {\n    const el = document.getElementById('message');\n    if (el) {\n      el.style.display = message && message.trim().length > 0 ? 'block' : 'none';\n      el.textContent = message;\n    } else {\n      console.error('Message element not found. Error message:', message);\n    }\n  };\n  \n  export const uint8ToBase64 = (buffer) => {\n    const chunk = 8192;\n    let result = '';\n    for (let i = 0; i < buffer.length; i += chunk) {\n      const slice = buffer.subarray(i, i + chunk);\n      result += String.fromCharCode.apply(null, slice);\n    }\n    return btoa(result);\n  };\n  \n  export const sanitizeId = (id) => {\n    return id.replace(/[^a-z0-9]/gi, '_').toLowerCase();\n  };\n\n  export const localStorageClear = () => {\n    localStorage.clear();\n    localStorage.setItem('proofingPhase', CONFIG.defaultProofingPhase);\n    location.reload();\n  };\n\n  export function toggleMode() {\n    const body = document.body;\n    const currentMode = localStorage.getItem('colorMode') || 'light';\n    const newMode = currentMode === 'light' ? 'dark' : 'light';\n    \n    // Save the new mode\n    localStorage.setItem('colorMode', newMode);\n    \n    // Update UI\n    if (newMode === 'light') {\n      body.removeAttribute('data-theme');\n      document.querySelector('#btn__mode-toggle .material-symbols-outlined').textContent = 'light_mode';\n    } else {\n      body.setAttribute('data-theme', 'dark');\n      document.querySelector('#btn__mode-toggle .material-symbols-outlined').textContent = 'dark_mode';\n    }\n  }\n  export function toggleSettingsVisibility() {\n    const settingsToggle = document.getElementById('btn__settings-toggle');\n    const body = document.body;\n    body.classList.toggle('settings-visible');\n    settingsToggle.classList.toggle('settings-visible');\n  }\n\n  export function toggleUi() {\n\tconst toggleUIButton = document.getElementById('btn__ui-toggle');\n\tconst body = document.body;\n  \n\tbody.classList.toggle('ui-hidden');\n\tthis.classList.toggle('ui-hidden');\n\t\n\t// Optionally, you can save the state to localStorage\n\tlocalStorage.setItem('uiHidden', body.classList.contains('ui-hidden'));\n  \n\t// Check if the UI was hidden in a previous session\n\tif (localStorage.getItem('uiHidden') === 'true') {\n\t  body.classList.add('ui-hidden');\n\t  toggleUIButton.classList.add('ui-hidden');\n\t}\n  }\n  \n  export const calculateTypeScale = (baseSize = 14, ratio = 1.618, steps = 6) => {\n    const sizes = {\n      't__size-xxl': Math.round(baseSize * Math.pow(ratio, 5)),\n      't__size-xl':  Math.round(baseSize * Math.pow(ratio, 4)),\n      't__size-l':   Math.round(baseSize * Math.pow(ratio, 3)),\n      't__size-m':   Math.round(baseSize * Math.pow(ratio, 2)),\n      't__size-s':   Math.round(baseSize * Math.pow(ratio, 1)),\n      't__size-xs':  baseSize\n    };\n    return sizes;\n  };\n  \n  export const whichFontSize = (text, baseSize = 14, ratio = 1.618) => {\n    if (!text) return baseSize.toString();\n  \n    const sizes = calculateTypeScale(baseSize, ratio);\n    \n    const charCount = text.length;\n    if (charCount < 25) return sizes['t__size-xxl'];\n    if (charCount < 50) return sizes['t__size-xl'];\n    if (charCount < 95) return sizes['t__size-l'];\n    if (charCount < 200) return sizes['t__size-m'];\n    if (charCount < 1000) return sizes['t__size-s'];\n    return sizes['t__size-xs'];\n  };\n  \n  export const removeElementsByClass = (className) => {\n    document.querySelectorAll(`.${className}`).forEach(el => el.remove());\n  };\n  \n  export const removeElementById = (id) => {\n    const element = document.getElementById(id);\n    if (element) {\n      element.style.transition = 'opacity 0.5s ease';\n      element.style.opacity = '0';\n      setTimeout(() => element.remove(), 500);\n    }\n  };\n  \n  export const saveData = (id, value) => {\n    if (typeof Storage !== 'undefined') {\n      if (value !== 'thisContent') {\n        localStorage.setItem(id, value);\n      } else {\n        const content = document.getElementById(id).textContent;\n        localStorage.setItem(id, content);\n      }\n    }\n  };\n  \n  // Save content of a contenteditable element to localStorage\n  export const saveEditableContent = (elementId) => {\n    const element = document.getElementById(elementId);\n    if (!element) {\n      console.warn(`Element with ID ${elementId} not found`);\n      return;\n    }\n    \n    const content = element.innerText;\n    localStorage.setItem(elementId, content);\n  };\n\n  // Save value of an input element to localStorage\n  export const saveInputValue = (elementId) => {\n    const element = document.getElementById(elementId);\n    if (!element) {\n      console.warn(`Element with ID ${elementId} not found`);\n      return;\n    }\n    \n    localStorage.setItem(elementId, element.value);\n  };\n\n  // Get content from localStorage or return default\n  export const getStoredContent = (elementId, defaultContent = '') => {\n    return localStorage.getItem(elementId) || defaultContent;\n  };\n  \n  export function initColorMode() {\n\tconst savedMode = localStorage.getItem('colorMode') || 'light';\n\tconst body = document.body;\n  \n\tif (savedMode === 'dark') {\n\t  body.setAttribute('data-theme', 'dark');\n\t  document.querySelector('#btn__mode-toggle .material-symbols-outlined').textContent = 'dark_mode';\n\t} else {\n\t  body.removeAttribute('data-theme');\n\t  document.querySelector('#btn__mode-toggle .material-symbols-outlined').textContent = 'light_mode';\n\t}\n  }\n  ","// config.js\nexport const CONFIG = {\n    defaultProofingPhase: 'Hamburgers',\n    fontFormats: {\n      truetype: 'ttf',\n      opentype: 'otf',\n    },\n    jsonPath: 'src/js/proof.json',\n  };","import { CONFIG } from './config.js';\nimport { getFormattedDate,\n\tpreserveUnique,\n\tshowErrorMessage,\n\tuint8ToBase64,\n\tlocalStorageClear,\n\twhichFontSize,\n\tremoveElementsByClass,\n\tsaveData,\n\ttoggleMode,\n\ttoggleSettingsVisibility,\n\ttoggleUi,\n\tsaveEditableContent,\n\tsaveInputValue,\n\tgetStoredContent,\n\tcalculateTypeScale,\n\tinitColorMode  } from './utils.js';\n\n// Re-export localStorageClear\nexport { localStorageClear };\n\nlet font = null;\nconst fontFormats = {\n    truetype: 'ttf',\n    opentype: 'otf',\n};\n\nexport const onFontLoaded = (loadedFont, fontFamilySource, fontFamily) => {\n\treturn new Promise(async (resolve, reject) => {\n\t  try {\n\t\tfont = loadedFont;\n\t\tconsole.log(`Font assigned globally: ${fontFamily}`);\n\t\t\n\t\t// Create and load the font face first\n\t\tif ('FontFace' in window) {\n\t\t  const fontFace = new FontFace(\n\t\t\tfontFamily,\n\t\t\t`url('${fontFamilySource}')`,\n\t\t\t{ format: loadedFont.outlinesFormat === 'truetype' ? 'truetype' : 'opentype' }\n\t\t  );\n\n\t\t  // Wait for the font to load\n\t\t  await fontFace.load();\n\t\t  document.fonts.add(fontFace);\n\t\t  console.log(`Font loaded successfully: ${fontFamily}`);\n\t\t}\n\n\t\t// Create and apply the font-face rule for browsers without FontFace API\n\t\tconst fontFaceRule = `\n\t\t  @font-face {\n\t\t\tfont-family: '${fontFamily}';\n\t\t\tsrc: url('${fontFamilySource}') format('${loadedFont.outlinesFormat === 'truetype' ? 'truetype' : 'opentype'}');\n\t\t  }\n\t\t`;\n\t\tconst style = document.createElement('style');\n\t\tstyle.textContent = fontFaceRule;\n\t\tdocument.head.appendChild(style);\n\t\tconsole.log(`Font-face rule applied: ${fontFaceRule}`);\n  \n\t\twindow.fontFamily = fontFamily;\n\t\tconsole.log(`Window.fontFamily set to: ${fontFamily}`);\n  \n\t\t// Wait for font to be ready before displaying data\n\t\tawait document.fonts.ready;\n\t\tawait displayFontData(fontFamily);\n  \n\t\tif (['localhost', '127.0.0.1', ''].includes(location.hostname)) {\n\t\t  localStorage.setItem('fontFamily', fontFamily);\n\t\t  localStorage.setItem('fontFamilySource', fontFamilySource);\n\t\t  console.log(`Font information saved to localStorage`);\n\t\t}\n  \n\t\t// Get current stage before setting new one\n\t\tconst currentStage = document.querySelector('.btn__stage.active')?.dataset?.stage \n\t\t\t|| localStorage.getItem('proofingPhase') \n\t\t\t|| window.proofingPhase \n\t\t\t|| 'Hamburgers';\n  \n\t\tawait setStage(currentStage);\n\t\t\n\t\tconsole.log(`Stage set successfully`);\n\t\tresolve();\n\t  } catch (error) {\n\t\tconsole.error('Error in onFontLoaded:', error);\n\t\treject(error);\n\t  }\n\t});\n  };\n\nexport const onReadFile = (event) => {\n\tconst files = event.target.files;\n\tconst fileButtonParent = document.getElementById('section__header-file-buttons');\n\tfileButtonParent.innerHTML = '';\n\n\t// First add navigation\n\tconst navGroup = generateFontNavigation();\n\tfileButtonParent.appendChild(navGroup);\n\n\t// Then add font buttons\n\tgenerateFontButtons(Array.from(files), 'server')\n\t  .then(container => {\n\t\tfileButtonParent.appendChild(container);\n\t\t// Activate the first button automatically\n\t\tconst firstButton = container.querySelector('.btn__setfont');\n\t\tif (firstButton) {\n\t\t  firstButton.click();\n\t\t}\n\t  });\n};\n\n  const readSingleFile = (file) => {\n\treturn new Promise((resolve, reject) => {\n\t  const reader = new FileReader();\n\t  \n\t  reader.onload = async (e) => {\n\t\ttry {\n\t\t  console.log(`File read successfully: ${file.name}`);\n\t\t  const font = opentype.parse(e.target.result);\n\t\t  console.log(`Font parsed successfully: ${font.names.postScriptName.en}`);\n\t\t  const fontFamily = font.names.postScriptName.en;\n\t\t  const fontFamilySource = `fonts/${fontFamily}`;\n\t\t  \n\t\t  await onFontLoaded(font, fontFamilySource, fontFamily);\n  \n\t\t  font.file = {\n\t\t\tname: file.name,\n\t\t\tlastModified: file.lastModified,\n\t\t\tsize: file.size,\n\t\t\ttype: file.type,\n\t\t  };\n\t\t  font.type = 'user:local';\n  \n\t\t  const tempUint8array = new Uint8Array(e.target.result);\n\t\t  const isVariableFont = font.tables.fvar !== undefined;\n  \n\t\t  // Set the @font-face rule\n\t\t  const fontFaceRule = `@font-face {font-family:'${fontFamily}'; src: url('data:font/ttf;base64,${uint8ToBase64(tempUint8array)}') format('truetype');}`;\n\t\t  document.getElementById('style__fontface').innerHTML += fontFaceRule;\n\t\t  console.log(`Font-face rule added: ${fontFaceRule}`);\n  \n\t\t  console.log(`Loaded font: ${fontFamily}, Variable: ${isVariableFont}`);\n  \n\t\t  showErrorMessage('');\n\t\t  resolve();\n\t\t} catch (err) {\n\t\t  console.error('Error parsing font:', err);\n\t\t  showErrorMessage(`Error loading font: ${err.message}`);\n\t\t  reject(err);\n\t\t}\n\t  };\n  \n\t  reader.onerror = (err) => {\n\t\tconsole.error('Error reading file:', err);\n\t\tshowErrorMessage(err.toString());\n\t\treject(err);\n\t  };\n  \n\t  reader.readAsArrayBuffer(file);\n\t});\n  };\n\nexport const setFont = async (fontPath, fontName) => {\n\tconsole.log(`Attempting to load font: ${fontName} from ${fontPath}`);\n\topentype.load(fontPath, (err, loadedFont) => {\n\t  if (err) {\n\t\tconsole.error('Error loading font:', err);\n\t\tshowErrorMessage(`Error loading font: ${err}`);\n\t  } else {\n\t\tconsole.log(`Font loaded successfully: ${fontName}`);\n\t\tfont = loadedFont; // Ensure this is set globally\n\t\ttry {\n\t\t  onFontLoaded(loadedFont, fontPath, fontName);\n\t\t  // After the font is loaded and processed, set the stage\n\t\t  setStage(localStorage.getItem('proofingPhase') || 'Hamburgers');\n\t\t} catch (error) {\n\t\t  console.error('Error in onFontLoaded:', error);\n\t\t  showErrorMessage(`Error processing font: ${error}`);\n\t\t}\n\t  }\n\t});\n};\n\nexport const displayFontData = async (fontFamily) => {\n    var tablename, table, property, value, tag;\n    var styles = '';\n\n    for (tablename in font.tables) {\n        table = font.tables[tablename];\n        \n        if (tablename === 'name') {\n            let nameHtml = '';\n            if (font.names.postScriptName) {\n                var postScriptName = font.names.postScriptName.en;\n            } else {\n                var postScriptName = \"Untitled Font\";\n            }\n\n            // Get version from head table\n            const version = font.tables.head.fontRevision;\n            // Format version to 2 decimal places\n            const formattedVersion = `Ver ${version}`;\n            \n\t\t\tnameHtml += `<div class=\"section__header-name-font\" spellcheck=\"false\">${postScriptName}</div>`;\n            nameHtml += `<div class=\"section__header-name-version\" spellcheck=\"false\">${formattedVersion}</div>`;\n            styles += `.t__importedfontfamily { font-family: \"${fontFamily}\" }`;\n\n            // Get and format the font's modification date\n            const modifiedDate = font.tables.head.modified;\n            const formattedDate = `Last edited ${new Date(modifiedDate * 1000).toLocaleDateString()}`;\n            nameHtml += `<div class=\"section__header-name-date\">${formattedDate}</div>`;\n            \n            document.getElementById('section__header-names').innerHTML = nameHtml;\n            continue;\n        }\n    }\n\n    // Apply styles only after font is loaded\n    document.getElementById('style__fontfamily').innerHTML = styles;\n    \n    // Set stage after font is ready\n    const currentStage = document.querySelector('.btn__stage.active')?.dataset?.stage \n        || localStorage.getItem('proofingPhase') \n        || window.proofingPhase \n        || 'Hamburgers';\n    \n    setStage(currentStage);\n};\n\nexport const setStage = (stage) => {\n\tconst article = document.getElementById('section__article-app');\n\tconst stageButtons = document.getElementById('section__header-stage-buttons');\n\t\n\tif (!font) {\n\t  console.warn('Font not loaded yet. Deferring stage setting.');\n\t  window.pendingStage = stage;\n\t  return;\n\t}\n  \n\tfetch(CONFIG.jsonPath)\n\t  .then(response => response.json())\n\t  .then(proof => {\n\t\tconst html = generateStageHtml(proof, stage);\n\t\tconst buttonHtml = generateStageButtons(proof, stage);\n  \n\t\tarticle.innerHTML = html;\n\t\tstageButtons.innerHTML = buttonHtml;\n\t\tdocument.getElementById('style__opentype-features').innerHTML = '';\n\t\t\n\t\tsaveData('proofingPhase', stage);\n  \n\t\t// Initialize type scale after rendering\n\t\tinitTypeScale();\n  \n\t\t// Apply saved states after rendering new content\n\t\tapplyNameAndVersion(showNameAndVersion);\n  \n\t\tconst lockDimensions = localStorage.getItem('lockProofDimensions') === 'true';\n\t\tapplyLockProofDimensions(lockDimensions);\n\t  })\n\t  .catch(error => console.error('Error loading JSON:', error));\n  };\n  \n  const generateStageHtml = (proof, stage) => {\n    if (!proof[stage]) {\n      return '<div class=\"item d-flex t__center\"><div class=\"item__proof\">No features found! :...(</div></div>';\n    }\n\tconst fontName = font.names.postScriptName.en;\n\t// Get version from head table\n\tconst version = font.tables.head.fontRevision;\n\t// Format version to 2 decimal places\n\tconst formattedVersion = `Ver ${version}`;\n\n    const gsubFeatures = font.tables.gsub.features;\n    const taglist = Object.values(gsubFeatures)\n\t\t.filter(feature => typeof feature === 'object' && feature.tag)\n\t\t.map(feature => feature.tag)\n\t\t.filter(tag => proof[\"Features\"][tag] !== undefined);\n  \n    let html = '';\n  \n    for (const title in proof[stage]) {\n      if (stage === \"Features\" && !taglist.includes(title)) {\n        continue;\n      }\n  \n      const textClass = whichFontSize(proof[stage][title]);\n      const testAreaID = `section__proofing-${title}`;\n      const itemID = `item--${title}`;\n      const sliderID = `${itemID}`;\n      \n      const { fontSize, lineHeight, letterSpacing, inlineStyle } = getStoredStyles(sliderID, textClass);\n      const fvarStyle = generateFvarStyle(itemID);\n  \n      html += `\n        <div id=\"${itemID}\" class=\"item\">\n          <button class=\"btn btn-link add-item-above chip\" onclick=\"insertField('${itemID}')\">+ Add Proof Window</button>\n          <div class=\"item__container d-flex\">\n            <div class=\"item__sliders pt-2\">\n              <div class=\"item__sliders-wrapper\">\n                ${generateSliders(itemID, sliderID, fontSize, lineHeight, letterSpacing)}\n                ${generateVariableSliders(itemID, sliderID)}\n                ${generateStyleButtons(itemID)}\n                ${generateFeatureCheckboxes(itemID, proof, taglist)}\n              </div>\n            </div>\n            <div class=\"item__proof ratio-letter\">\n              <button class=\"btn btn-link remove-item-this invisible\" onclick=\"removeElementsByID('${itemID}')\">×</button>\n              ${generateProofContent(stage, title, proof, testAreaID, fvarStyle, textClass)}\n\t\t\t\t<div class=\"item__footer d-flex justify-content-between\">\n\t\t\t\t\t<span class=\"item__footer-name-font\">${fontName}</span>\n\t\t\t\t<span class=\"item__footer-name-version\">${formattedVersion}</span>\n\t\t\t\t</div>\n            </div>\n          </div>\n        </div>\n      `;\n    }\n\treturn html;\n  };\n  \n// Modify the getStoredStyles function to include column properties\nconst getStoredStyles = (itemID, textClass) => {\n  // Get the current type scale ratio and base size\n  const typeScale = parseFloat(document.getElementById('select__type-scale')?.value || 1.618);\n  const baseSize = parseFloat(document.getElementById('input__base-font-size')?.value || 14);\n  \n  // Use whichFontSize to calculate the font size based on the text\n  const content = document.querySelector(`#${itemID} .testarea`)?.textContent || textClass;\n  \n  // Check if there's a stored fontSize, otherwise calculate it\n  const fontSize = getItemFontSize(itemID, content, baseSize, typeScale);\n  \n  const lineHeight = getItemLineHeight(itemID);\n  const letterSpacing = localStorage.getItem(`${itemID}-letterSpacing`) || '0';\n  const columnCount = localStorage.getItem(`${itemID}-column-count`) || '1';\n  const columnGap = localStorage.getItem(`${itemID}-column-gap`) || '1em';\n\n  const inlineStyle = `\n    font-size: ${fontSize}pt;\n    line-height: ${lineHeight};\n    letter-spacing: ${letterSpacing}em;\n    column-count: ${columnCount};\n    column-gap: ${columnGap};\n  `;\n\n  return { fontSize, lineHeight, letterSpacing, columnCount, columnGap, inlineStyle };\n};\n  \n  const generateFvarStyle = (itemID) => {\n    let fvarStyle = '';\n    if (font.tables.fvar) {\n      const fvarSupport = font.tables.fvar.axes.map(axis => axis.tag);\n      fvarStyle = 'font-variation-settings: ' + \n        font.tables.fvar.axes.map(axis => {\n          const storedValue = localStorage.getItem(`${itemID}-${axis.tag}-val`);\n          const value = storedValue !== null ? storedValue : axis.defaultValue;\n          return `'${axis.tag}' ${value}`;\n        }).join(', ') + ';';\n    }\n    return fvarStyle;\n  };\n  \n  const generateSliders = (itemID, sliderID, fontSize, lineHeight, letterSpacing) => {\n    const hasCustomLineHeight = localStorage.getItem(`${itemID}-lineHeight`) !== null;\n    const hasCustomFontSize = localStorage.getItem(`${itemID}-fontSize`) !== null;\n    \n    return `\n\t\t<div>\n\t\t\t<label for=\"${sliderID}-fontSize\">Font Size</label>\n\t\t\t<span class=\"t__right text-small\" id=\"${sliderID}-fontSize-val\">${fontSize}pt</span>\n\t\t\t<span class=\"t__right material-symbols-outlined remove\" onclick=\"removeStyleValue('${itemID}', 'fontSize')\">clear</span>\n\t\t\t<input id=\"${sliderID}-fontSize\" type=\"range\" class=\"slider ${hasCustomFontSize ? 'modified' : ''}\" \n\t\t\t\tmin=\"4\" max=\"160\" step=\"2\" value=\"${fontSize}\" \n\t\t\t\toninput=\"passStyleValue('${itemID}', 'fontSize', this.value)\">\n\t\t</div>\n        <div>\n\t\t\t<label for=\"${sliderID}-lineHeight\">Line Height</label>\n\t\t\t<span class=\"t__right text-small\" id=\"${sliderID}-lineHeight-val\">${lineHeight}</span>\n\t\t\t<span class=\"t__right material-symbols-outlined remove\" onclick=\"removeStyleValue('${itemID}', 'lineHeight')\">clear</span>\n\t\t\t<input id=\"${sliderID}-lineHeight\" type=\"range\" class=\"slider ${hasCustomLineHeight ? 'modified' : ''}\" \n\t\t\t\tmin=\"0.6\" max=\"3.0\" step=\"0.01\" value=\"${lineHeight}\" \n\t\t\t\toninput=\"passStyleValue('${itemID}', 'lineHeight', this.value)\">\n\t\t</div>\n        <div>\n\t\t\t<label for=\"${sliderID}-letterSpacing\">Letter Spacing </label>\n\t\t\t<span class=\"t__right text-small\" id=\"${sliderID}-letterSpacing-val\">${letterSpacing}</span>\n\t\t\t<span class=\"t__right material-symbols-outlined remove\" onclick=\"removeStyleValue('${itemID}', 'letterSpacing')\">clear</span>\n\t\t\t<input id=\"${sliderID}-letterSpacing\" type=\"range\" class=\"slider\" min=\"-0.4\" max=\"0.4\" step=\"0.01\" value=\"${letterSpacing}\" oninput=\"passStyleValue('${itemID}', 'letterSpacing', this.value)\">\n\t\t</div>\n    `;\n  };\n  \n  const generateVariableSliders = (itemID, sliderID) => {\n    if (!font.tables.fvar) return '';\n  \n    return font.tables.fvar.axes.map(axis => {\n      const storedValue = localStorage.getItem(`${itemID}-${axis.tag}-val`);\n      const value = storedValue !== null ? storedValue : axis.defaultValue;\n      return `\n        <label for=\"${sliderID}-${axis.tag}\">${axis.name.en} </label>\n        <span class=\"t__right text-small\" id=\"${sliderID}-${axis.tag}-val\">${value}</span>\n        <input id=\"${sliderID}-${axis.tag}\" type=\"range\" class=\"slider\" min=\"${axis.minValue}\" max=\"${axis.maxValue}\" value=\"${value}\" oninput=\"passfvarValue('${itemID}', '${axis.tag}', this.value, '${font.tables.fvar.axes.map(a => a.tag).join(',')}')\">\n      `;\n    }).join('');\n  };\n  \n  export const generateFontButton = async (font, mode = 'local') => {\n\tlet fontName, fontPath, fontType, displayName, isVariable;\n  \n\tif (mode === 'local') {\n\t  fontName = font.replace('.', '-');\n\t  fontPath = `fonts/${font}`;\n\t  displayName = font.replace('-', ' ').replace(/\\.[^/.]+$/, \"\");\n\t  fontType = font.split('.').pop().toUpperCase();\n\t  isVariable = await isVariableFont(fontPath);\n\t} else { // server mode\n\t  fontName = font.name.replace('.', '-');\n\t  fontPath = URL.createObjectURL(font);\n\t  displayName = font.name.replace('-', ' ').replace(/\\.[^/.]+$/, \"\");\n\t  fontType = font.name.split('.').pop().toUpperCase();\n\t  isVariable = await isVariableFont(font);\n\t}\n  \n\tif (isVariable) {\n\t  fontType = 'VF';\n\t}\n  \n\tconst button = document.createElement('div');\n\tbutton.className = 'btn__setfont chip btn d-flex justify-content-between';\n\tbutton.title = mode === 'local' ? font : font.name;\n\tbutton.id = `btn__setfont-${fontName}`;\n\tbutton.innerHTML = `${displayName}<span class=\"d-flex-grow text-small text-right\">${fontType}</span>`;\n\tbutton.onclick = () => {\n\t  // Remove active class from all buttons\n\t  document.querySelectorAll('.btn__setfont').forEach(btn => {\n\t    btn.classList.remove('active');\n\t    btn.classList.remove('visited'); // Remove visited from all buttons\n\t  });\n\t  // Add active class to clicked button\n\t  button.classList.add('active');\n\t  button.classList.add('visited'); // Add visited only when clicked\n\t  setFont(fontPath, fontName);\n\t};\n  \n\treturn button;\n  };\n  \n  const isVariableFont = async (font) => {\n\ttry {\n\t  let arrayBuffer;\n\t  if (typeof font === 'string') {\n\t\t// Local mode: font is a path\n\t\tconst response = await fetch(font);\n\t\tarrayBuffer = await response.arrayBuffer();\n\t  } else {\n\t\t// Server mode: font is a File object\n\t\tarrayBuffer = await font.arrayBuffer();\n\t  }\n\t  const parsedFont = opentype.parse(arrayBuffer);\n\t  return parsedFont.tables.fvar !== undefined;\n\t} catch (error) {\n\t  console.error('Error checking if font is variable:', error);\n\t  return false;\n\t}\n  };\n  \n  const generateFontFaces = (fonts) => {\n\treturn fonts.map(font => {\n\t  const fontName = font.replace('.', '-');\n\t  return `@font-face { font-family: \"${fontName}\"; src: url(\"fonts/${font}\");}`;\n\t}).join('\\n');\n  };\n\n  // Add new function to handle column updates\nwindow.updateColumns = (itemID) => {\n\tconst columnCount = document.getElementById(`${itemID}-column-count`).value;\n\tconst columnGap = document.getElementById(`${itemID}-column-gap`).value;\n\t\n\tpassStyleValue(itemID, 'column-count', columnCount);\n\tpassStyleValue(itemID, 'column-gap', columnGap);\n  };\n\n  const generateStyleButtons = (itemID) => `\n  <div id=\"btn__wrapper-case\">\n    <label>Case</label>\n    <div class=\"d-flex g-1 btn__wrapper\">\n      <button class=\"btn btn-link textTransform-uppercase\" title=\"Uppercase\" onclick=\"passStyleValue('${itemID}','textTransform', 'uppercase')\">TT</button>\n      <button class=\"btn btn-link textTransform-capitalize\" title=\"Capitalize\" onclick=\"passStyleValue('${itemID}','textTransform', 'capitalize')\">Tt</button>\n      <button class=\"btn btn-link textTransform-lowercase\" title=\"Lowercase\" onclick=\"passStyleValue('${itemID}','textTransform', 'lowercase')\">tt</button>\n    </div>\n  </div>\n  <div id=\"btn__wrapper-columns\">\n    <label>Columns</label>\n    <div class=\"d-flex g-1 btn__wrapper\">\n\t<span class=\"text-small\">Count</span>\n      <input class=\"input\" type=\"number\" id=\"${itemID}-column-count\" min=\"1\" max=\"6\" value=\"1\" onchange=\"updateColumns('${itemID}')\" style=\"width: 50px;\">\n\t<span class=\"text-small\">Gap</span>\n      <input class=\"input\" type=\"text\" id=\"${itemID}-column-gap\" value=\"10px\" onchange=\"updateColumns('${itemID}')\" style=\"width: 50px;\">\n    </div>\n  </div>\n`;\n\n\n  \nconst generateFeatureCheckboxes = (itemID, proof, taglist) => {\n\tconst uniqueTags = [...new Set(taglist)];\n\treturn `\n\t  <label>Features</label>  \n\t  <div class=\"btn__wrapper d-flex flex-wrap g-0\">\n\t\t${uniqueTags.map(tag => {\n\t\t  const name = proof[\"Features\"][tag][\"abstract\"];\n\t\t  return `\n\t\t\t<div class=\"chip d-flex align-items-center justify-content-between d-flex-grow\" onclick=\"document.getElementById('${itemID}-checkbox-${tag}').click()\">\n\t\t\t  <input id=\"${itemID}-checkbox-${tag}\" type=\"checkbox\" onclick=\"passfeatValue('${itemID}', '${tag}', '${uniqueTags.join(',')}')\">\n\t\t\t  <span class=\"d-flex-grow\">${name}</span>\n\t\t\t  <span class=\"tag-label text-small\">${tag}</span>\n\t\t\t</div>\n\t\t  `;\n\t\t}).join('')}\n\t  </div>\n\t`;\n  };\n  \n  \n  const generateProofContent = (stage, title, proof, testAreaID, fvarStyle, textClass) => {\n    // Add safety checks\n    if (!proof || !proof[stage] || !proof[stage][title]) {\n      console.warn('Missing proof data:', { stage, title });\n      return '';\n    }\n\n    // Special handling for Features stage\n    let content = proof[stage][title];\n    if (stage === \"Features\") {\n      // Features content is stored as an object with 'sample', 'definition', and 'abstract' properties\n      content = proof[stage][title].sample || '';\n    }\n\n    const savedContent = getStoredContent(testAreaID, content) || '';\n    const savedTitle = getStoredContent(`${testAreaID}-title`, title) || '';\n    const fontSize = whichFontSize(savedContent);\n  \n    // Get other style values\n    const lineHeight = getItemLineHeight(testAreaID);\n    const letterSpacing = localStorage.getItem(`${testAreaID}-letterSpacing`) || '0em';\n    const columnCount = localStorage.getItem(`${testAreaID}-column-count`) || '1';\n    const columnGap = localStorage.getItem(`${testAreaID}-column-gap`) || '1em';\n  \n    const inlineStyle = `\n      font-size: ${fontSize}pt;\n      line-height: ${lineHeight};\n      letter-spacing: ${letterSpacing};\n      column-count: ${columnCount};\n      column-gap: ${columnGap};\n    `;\n   // previously included testarea-values\n   // <span class=\"testarea-values small\">${generateTestAreaValues(inlineStyle)}</span>\n   // couldn't get them to stay cons\n    const html = `\n      <div class=\"d-flex justify-content-between\">\n        <h6 class=\"h6\" contentEditable=\"true\" \n            id=\"${testAreaID}-title\"\n            onkeyup=\"saveEditableContent('${testAreaID}-title')\">${savedTitle}</h6>\n      </div>\n      <div class=\"testarea-container\">\n        <div id=\"${testAreaID}\" \n             style=\"${inlineStyle} ${fvarStyle}\" \n             class=\"t__importedfontfamily testarea\" \n             contenteditable=\"true\" \n             spellcheck=\"false\" \n             onkeyup=\"saveEditableContent('${testAreaID}')\">\n          ${savedContent}\n        </div>\n      </div>\n    `;\n  \n    return html;\n  };\n  \n  const formatStyleValue = (property, value) => {\n    switch (property) {\n      case 'font-size':\n        return value;\n      case 'line-height':\n        return value;\n      case 'letter-spacing':\n        return value.replace('em', '');\n      default:\n        return value;\n    }\n  };\n  \n  const generateTestAreaValues = (inlineStyle) => {\n    // Only show these core properties\n    const styleMap = {\n      'font-size': 'Size',\n      'line-height': 'Leading',\n      'letter-spacing': 'Tracking'\n    };\n\n    const styles = inlineStyle.split(';')\n      .filter(s => s.trim())\n      // Only process styles that are in our styleMap\n      .filter(style => {\n        const property = style.split(':')[0].trim();\n        return styleMap.hasOwnProperty(property);\n      });\n\n    return styles.map(style => {\n      const [property, value] = style.split(':').map(s => s.trim());\n      const label = styleMap[property];\n      const formattedValue = formatStyleValue(property, value);\n      return `<span class=\"${property}\">${label}: ${formattedValue}</span>`;\n    }).join(' · ');\n  };\n  \n  const updateInlineText = (itemID, property, value) => {\n\tconst container = document.querySelector(`#${itemID} .testarea-values`);\n\tif (!container) return;\n\n\t// Get values from the sliders\n\tconst fontSizeSlider = document.querySelector(`#${itemID}-fontSize`);\n\tconst lineHeightSlider = document.querySelector(`#${itemID}-lineHeight`);\n\tconst letterSpacingSlider = document.querySelector(`#${itemID}-letterSpacing`);\n\n\tconst currentStyles = {\n\t\t'font-size': `${fontSizeSlider?.value || '14'}pt`,\n\t\t'line-height': lineHeightSlider?.value || '1.0',\n\t\t'letter-spacing': `${letterSpacingSlider?.value || '0'}em`\n\t};\n\n\tconst inlineStyle = Object.entries(currentStyles)\n\t\t.map(([prop, val]) => `${prop}: ${val}`)\n\t\t.join('; ');\n\n\tcontainer.innerHTML = generateTestAreaValues(inlineStyle);\n  };\n\n// Global functions\n\nexport const insertField = (aboveHere) => {\n\tconst original = document.getElementById(aboveHere);\n\tconst clone = original.cloneNode(true);\n\t\n\t// Reset any unique IDs or input values in the clone\n\tclone.id = `${aboveHere}-clone-${Date.now()}`;\n\tclone.querySelectorAll('[id]').forEach(el => {\n\t  el.id = `${el.id}-clone-${Date.now()}`;\n\t});\n\tclone.querySelectorAll('input').forEach(input => {\n\t  input.value = '';\n\t});\n  \n\toriginal.parentNode.insertBefore(clone, original);\n\t\n\t// Animate the insertion\n\tclone.style.height = '0px';\n\tclone.style.overflow = 'hidden';\n\tclone.style.transition = 'height 0.6s ease';\n\t\n\tsetTimeout(() => {\n\t  clone.style.height = `${clone.scrollHeight}px`;\n\t}, 0);\n\t\n\tsetTimeout(() => {\n\t  clone.style.height = 'auto';\n\t  clone.style.overflow = 'visible';\n\t}, 600);\n  };\n  \n  export const passStyleValue = (itemID, property, value) => {\n\tconst elementIdSuffix = `-${property}-val`;\n\tconst element = document.querySelector(`[id$=\"${itemID}${elementIdSuffix}\"]`);\n\t\n    // Save to localStorage for persistent properties\n    if (['fontSize', 'lineHeight', 'letterSpacing', 'column-count', 'column-gap'].includes(property)) {\n        localStorage.setItem(`${itemID}-${property}`, value);\n        \n        // Add unit suffixes\n        let displayValue = value;\n        if (property === 'fontSize') displayValue += 'pt';\n        if (property === 'letterSpacing') displayValue += 'em';\n        if (element) element.textContent = displayValue;\n\n        // Add .modified class to slider\n        const slider = document.querySelector(`#${itemID}-${property}`);\n        if (slider) {\n            slider.classList.add('modified');\n        }\n    }\n\n    // Update the testarea with proper units\n    const testarea = document.querySelector(`#${itemID} .testarea`);\n    if (testarea) {\n        let styleValue = value;\n        if (property === 'fontSize') styleValue += 'pt';\n        if (property === 'letterSpacing') styleValue += 'em';\n        testarea.style[property] = styleValue;\n    }\n\n    // Update the testarea-values display\n    updateInlineText(itemID, property, value);\n  };\n  \n  export const passfvarValue = (itemID, property, value, fvarSupport) => {\n    const element = document.getElementById(`${itemID}-${property}-val`);\n    if (element) {\n        element.textContent = value;\n    } else {\n        console.warn(`Element with ID ${itemID}-${property}-val not found.`);\n    }\n\n    saveData(`${itemID}-${property}-val`, value);\n\n    const fvarSupportArray = fvarSupport.split(',');\n    let fvarcss = fvarSupportArray.map(tag => {\n        const tagValue = tag === property ? value : document.getElementById(`${itemID}-${tag}`)?.value; // Use optional chaining\n        return `'${tag}' ${tagValue}`;\n    }).join(', ');\n\n    const testarea = document.querySelector(`#${itemID} .testarea`);\n    if (testarea) {\n        testarea.style.fontVariationSettings = fvarcss;\n    } else {\n        console.warn(`Test area with ID ${itemID} not found.`);\n    }\n\n    updateInlineText(itemID, 'fvar', fvarcss);\n};\n  \n  export const passfeatValue = (itemID, feature, featureSupport) => {\n\tconst featSupport = featureSupport.split(',');\n\tlet featcss = \"\";\n  \n\tfor (let f = 0; f < featSupport.length; f++) {\n\t  if (document.getElementById(`${itemID}-checkbox-${featSupport[f]}`).checked) {\n\t\tfeatcss += `'${featSupport[f]}',`;\n\t  }\n\t}\n\tfeatcss = featcss.replace(/,\\s*$/, \"\");\n\tdocument.querySelector(`#${itemID} .testarea`).style.fontFeatureSettings = featcss;\n  };\n  \n  const updateActiveButton = (property, value) => {\n\tdocument.querySelectorAll(`.btn.${property}-${value}`).forEach(btn => {\n\t  btn.classList.add('active');\n\t  \n\t  // Find the parent wrapper\n\t  const wrapper = btn.closest('.btn__wrapper');\n\t  \n\t  if (wrapper) {\n\t\t// If we found a wrapper, remove 'active' class from all sibling buttons\n\t\twrapper.querySelectorAll('.btn').forEach(sibling => {\n\t\t  if (sibling !== btn) sibling.classList.remove('active');\n\t\t});\n\t  } else {\n\t\t// Fallback: remove 'active' class from all buttons with the same property\n\t\tdocument.querySelectorAll(`.btn[class*=\"${property}-\"]`).forEach(sibling => {\n\t\t  if (sibling !== btn) sibling.classList.remove('active');\n\t\t});\n\t  }\n\t});\n  };\n\n  // Export the function\nexport const removeStyleValue = (itemID, property) => {\n    localStorage.removeItem(`${itemID}-${property}`);\n    \n    // Get default value based on property\n    let defaultValue;\n    if (property === 'fontSize') {\n        const testarea = document.querySelector(`#${itemID} .testarea`);\n        const text = testarea?.textContent || '';\n        const ratio = parseFloat(document.getElementById('select__type-scale')?.value || 1.618);\n        const baseSize = parseFloat(document.getElementById('input__base-font-size')?.value || 14);\n        defaultValue = whichFontSize(text, baseSize, ratio);\n    } else if (property === 'lineHeight') {\n        defaultValue = getGlobalLineHeight();\n    } else {\n        defaultValue = '0'; // Default for letter-spacing\n    }\n\n    // Update the display and slider\n    const slider = document.querySelector(`#${itemID}-${property}`);\n    if (slider) {\n        slider.value = defaultValue;\n        slider.classList.remove('modified');\n\t\tconsole.log(slider);\n    }\n\n    // Update the value display\n    const valueDisplay = document.querySelector(`#${itemID}-${property}-val`);\n    if (valueDisplay) {\n        valueDisplay.textContent = property === 'fontSize' ? `${defaultValue}pt` : defaultValue;\n    }\n\n    // Update the testarea style\n    const testarea = document.querySelector(`#${itemID} .testarea`);\n    if (testarea) {\n        let styleValue = defaultValue;\n        if (property === 'fontSize') styleValue += 'pt';\n        if (property === 'letterSpacing') styleValue += 'em';\n        testarea.style[property] = styleValue;\n    }\n\n    // Update the inline text display\n    updateInlineText(itemID, property, defaultValue);\n\n};\n\n// Add to window object for HTML onclick access\nwindow.removeStyleValue = removeStyleValue;\n\n// generate buttons\nexport const generateStageButtons = (proof, currentStage) => {\n    return Object.keys(proof).map(stage => {\n      const isActive = stage === currentStage ? 'active' : '';\n      return `\n        <div class=\"tab-item ${isActive} tab__setstage\" onclick=\"setStage('${stage}')\">\n          <a href=\"#\" class=\"stage-button\">${stage}</a>\n        </div>\n      `;\n    }).join('');\n  };\n\n  // localload vs server\n\n  export const localLoad = () => {\n\tconst fileButtonParent = document.getElementById('section__header-file-buttons');\n\t\n\tfetch('../src/txt/fonts.txt')\n\t  .then(response => response.text())\n\t  .then(data => {\n\t\tconst fonts = data.split('fonts/')\n\t\t  .filter(font => font.trim() !== '')\n\t\t  .map(font => font.trim());\n  \n\t\tconst uniqueFonts = preserveUnique(fonts.sort());\n\t\t\n\t\tif (uniqueFonts.length === 0) {\n\t\t  // Only show the message if no fonts are found\n\t\t  fileButtonParent.innerHTML = 'Place fonts you want to proof into <code>/fonts</code> to begin';\n\t\t} else {\n\t\t  // First add navigation\n\t\t  const navGroup = generateFontNavigation();\n\t\t  fileButtonParent.appendChild(navGroup);\n\t\t  \n\t\t  // Then add font buttons\n\t\t  generateFontButtons(uniqueFonts, 'local')\n\t\t    .then(container => {\n\t\t      fileButtonParent.appendChild(container);\n\t\t      // Set the default font\n\t\t      const fontFamilySource = localStorage.getItem('fontFamilySource') || \n\t\t        `fonts/${uniqueFonts[uniqueFonts.length - 1]}`;\n\t\t      const fontFamily = localStorage.getItem('fontFamily') || \n\t\t        fontFamilySource.replace('.', '-');\n\t\t      setFont(fontFamilySource, fontFamily);\n\t\t    });\n\t\t}\n\t  })\n\t  .catch(error => {\n\t\tconsole.error('Error loading fonts:', error);\n\t\t// Show the message if there's an error loading fonts\n\t\tfileButtonParent.innerHTML = 'Place fonts you want to proof into <code>/fonts</code> to begin';\n\t  });\n  };\n  \n  export const serverLoad = () => {\n\tconst fileButtonParent = document.getElementById('section__header-file-buttons');\n\t\n\t// Load the default Gooper font\n\tsetFont('fonts/gooper-VF.ttf', 'gooper-VF-ttf');\n\tdocument.getElementById('style__fontface').innerHTML = '@font-face { font-family: \"gooper-VF-ttf\"; src: url(\"fonts/gooper-VF.ttf\");}';\n  \n\tconst dragDropHtml = `\n\t  <div id=\"drag-drop-area\" class=\"drag-drop-area\">\n\t\t<p>Drag & drop font files here</p>\n\t\t<p>or</p>\n\t\t<label for=\"fontInput\" class=\"file-input-label\">Choose Files</label>\n\t\t<input id=\"fontInput\" type=\"file\" class=\"file-input\" multiple accept=\".ttf,.otf\" />\n\t  </div>\n\t`;\n\n\tfileButtonParent.innerHTML = dragDropHtml;\n  \n\tconst dragDropArea = document.getElementById('drag-drop-area');\n\tconst fileInput = document.getElementById('fontInput');\n  \n\t// Prevent default drag behaviors\n\t['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {\n\t  dragDropArea.addEventListener(eventName, preventDefaults, false);\n\t  document.body.addEventListener(eventName, preventDefaults, false);\n\t});\n  \n\t// Highlight drop area when item is dragged over it\n\t['dragenter', 'dragover'].forEach(eventName => {\n\t  dragDropArea.addEventListener(eventName, highlight, false);\n\t});\n  \n\t['dragleave', 'drop'].forEach(eventName => {\n\t  dragDropArea.addEventListener(eventName, unhighlight, false);\n\t});\n  \n\t// Handle dropped files\n\tdragDropArea.addEventListener('drop', handleDrop, false);\n  \n\t// Handle selected files\n\tfileInput.addEventListener('change', handleFiles, false);\n  };\n  \n  function preventDefaults(e) {\n\te.preventDefault();\n\te.stopPropagation();\n  }\n  \n  function highlight(e) {\n\tdocument.getElementById('drag-drop-area').classList.add('highlight');\n  }\n  \n  function unhighlight(e) {\n\tdocument.getElementById('drag-drop-area').classList.remove('highlight');\n  }\n  \n  function handleDrop(e) {\n\tconst dt = e.dataTransfer;\n\tconst files = dt.files;\n\thandleFiles(files);\n  }\n  \n  function handleFiles(filesOrEvent) {\n\tlet files;\n\tif (filesOrEvent instanceof Event) {\n\t  files = filesOrEvent.target.files;\n\t} else {\n\t  files = filesOrEvent;\n\t}\n  \n\tfiles = Array.from(files);\n\t\n\t// Process all files\n\tconst uploadPromises = files.map(file => uploadFile(file));\n  \n\t// After all files are processed, select the first font chip\n\tPromise.all(uploadPromises).then(() => {\n\t  setTimeout(() => {\n\t\tconst firstButton = document.querySelector('.btn__setfont');\n\t\tif (firstButton) {\n\t\t  firstButton.click();\n\t\t}\n\t  }, 100); // Short delay to ensure DOM is updated\n\t});\n  }\n  \n  function uploadFile(file) {\n\treturn new Promise((resolve) => {\n\t  onReadFile({ target: { files: [file] } });\n\t  // Assume onReadFile is asynchronous and use a setTimeout to simulate its completion\n\t  setTimeout(resolve, 50);\n\t});\n  }\n  \n  // Make sure onReadFile returns a Promise or is modified to work with this approach\n  \n  function previewFile(file) {\n\tconst reader = new FileReader();\n\treader.readAsDataURL(file);\n\treader.onloadend = function() {\n\t  const img = document.createElement('img');\n\t  img.src = reader.result;\n\t  document.getElementById('drag-drop-area').appendChild(img);\n\t}\n  }\n  \n  export const setupEventListeners = () => {\n\tconst fileButtons = document.getElementById('section__header-file-buttons');\n\tconst stageButtons = document.getElementById('section__header-stage-buttons');\n\tconst toolsToggle = document.getElementById('btn__view-tools-toggle');\n\tconst modeToggle = document.getElementById('btn__mode-toggle');\n\tconst localStorageClearButton = document.getElementById('btn__reset-local-storage');\n\tconst settingsToggle = document.getElementById('btn__settings-toggle');\n\tconst addNameAndVersionCheckbox = document.getElementById('checkbox__add-name-and-version');\n\tconst lockProofDimensionsCheckbox = document.getElementById('checkbox__lock-proof-dimensions');\n\tif (fileButtons) {\n\t  fileButtons.addEventListener('click', handleFileButtonClick);\n\t}\n\tif (stageButtons) {\n\t  stageButtons.addEventListener('click', handleStageButtonClick);\n\t}\n\tif (toolsToggle) {\n\t  toolsToggle.addEventListener('click', toggleToolsVisibility);\n\t}\n\tif (modeToggle) {\n\t\tmodeToggle.addEventListener('click', toggleMode);\n\t}\n\tif (localStorageClearButton) {\n\t\tlocalStorageClearButton.addEventListener('click', localStorageClear);\n\t}\n\tif (settingsToggle) {\n\t\tsettingsToggle.addEventListener('click', toggleSettingsVisibility);\n\t}\n\tif (addNameAndVersionCheckbox) {\n\t\t// Restore saved state\n\t\tconst savedState = localStorage.getItem('showNameAndVersion') === 'true';\n\t\taddNameAndVersionCheckbox.checked = savedState;\n\t\tdocument.body.classList.toggle('show-font-details', savedState);\n\t\t\n\t\taddNameAndVersionCheckbox.addEventListener('change', toggleNameAndVersion);\n\t}\n\tif (lockProofDimensionsCheckbox) {\n\t\t// Restore saved state\n\t\tconst savedState = localStorage.getItem('lockProofDimensions') === 'true';\n\t\tlockProofDimensionsCheckbox.checked = savedState;\n\t\t\n\t\t// Apply the saved state immediately\n\t\tapplyLockProofDimensions(savedState);\n\t\t\n\t\tlockProofDimensionsCheckbox.addEventListener('change', toggleLockProofDimensions);\n\t}\n\tsetupPasteHandling();\n\n\t// Add aspect ratio select listener\n\tconst aspectRatioSelect = document.getElementById('select__aspect-ratio');\n\tif (aspectRatioSelect) {\n\t\t// Set initial value\n\t\tconst proofs = document.querySelectorAll('.item__proof');\n\t\tproofs.forEach(proof => proof.classList.add('ratio-letter'));\n\n\t\t// Watch for changes\n\t\taspectRatioSelect.addEventListener('change', (e) => {\n\t\t\tconst ratio = e.target.value;\n\t\t\tconst proofs = document.querySelectorAll('.item__proof');\n\t\t\t\n\t\t\tproofs.forEach(proof => {\n\t\t\t\tproof.classList.remove('ratio-letter', 'ratio-a4');\n\t\t\t\tproof.classList.add(ratio === '8.5:11' ? 'ratio-letter' : 'ratio-a4');\n\t\t\t});\n\n\t\t\tlocalStorage.setItem('preferred-ratio', ratio);\n\t\t});\n\n\t\t// Restore saved preference if it exists\n\t\tconst savedRatio = localStorage.getItem('preferred-ratio');\n\t\tif (savedRatio) {\n\t\t\taspectRatioSelect.value = savedRatio;\n\t\t\taspectRatioSelect.dispatchEvent(new Event('change'));\n\t\t}\n\t}\n\n\t// Add base font size input listener\n\tconst baseFontInput = document.getElementById('input__base-font-size');\n\tif (baseFontInput) {\n\t\tbaseFontInput.addEventListener('change', (e) => {\n\t\t\tconst baseSize = parseFloat(e.target.value);\n\t\t\tlocalStorage.setItem('base-font-size', baseSize);\n\t\t\tupdateAllTypeScales();\n\t\t});\n\n\t\t// Restore saved base font size\n\t\tconst savedBaseSize = localStorage.getItem('base-font-size') || '14';\n\t\tbaseFontInput.value = savedBaseSize;\n\t}\n\n\t// Add line height input listener\n\tconst lineHeightInput = document.getElementById('input__line-height');\n\tif (lineHeightInput) {\n\t\tlineHeightInput.addEventListener('change', (e) => {\n\t\t\tconst lineHeight = parseFloat(e.target.value);\n\t\t\tlocalStorage.setItem('line-height', lineHeight);\n\t\t\tupdateAllLineHeights();\n\t\t});\n\n\t\t// Restore saved line height\n\t\tconst savedLineHeight = getGlobalLineHeight();\n\t\tlineHeightInput.value = savedLineHeight;\n\t}\n\n\t// Modify type scale select listener\n\tconst typeScaleSelect = document.getElementById('select__type-scale');\n\tif (typeScaleSelect) {\n\t\ttypeScaleSelect.addEventListener('change', () => {\n\t\t\tupdateAllTypeScales();\n\t\t});\n\t}\n\n\t// Initialize color mode from localStorage\n\tinitColorMode();\n  };\n  \n  const handleFileButtonClick = (event) => {\n\tif (event.target.classList.contains('btn__setfont')) {\n\t  event.target.classList.add('active', 'visited');\n\t  // Remove 'active' class from sibling elements\n\t  const siblings = Array.from(event.target.parentNode.children).filter(child => child !== event.target);\n\t  siblings.forEach(sibling => sibling.classList.remove('active'));\n\t}\n  };\n  \n  const handleStageButtonClick = (event) => {\n\tif (event.target.classList.contains('btn__setstage')) {\n\t  event.target.classList.add('active');\n\t  // Remove 'active' class from sibling elements\n\t  const siblings = Array.from(event.target.parentNode.children).filter(child => child !== event.target);\n\t  siblings.forEach(sibling => sibling.classList.remove('active'));\n\t}\n  };\n  \n  const toggleToolsVisibility = () => {\n\tdocument.body.classList.toggle('tools-visible');\n  };\n\nconst setupPasteHandling = () => {\n  document.addEventListener('paste', (e) => {\n    // Only handle paste events in testarea elements\n    if (!e.target.classList.contains('testarea')) {\n      return;\n    }\n\n    // Prevent the default paste\n    e.preventDefault();\n\n    // Get plain text from clipboard\n    const text = (e.clipboardData || window.clipboardData).getData('text/plain');\n\n    // Insert the plain text at cursor position\n    const selection = window.getSelection();\n    if (selection.rangeCount) {\n      const range = selection.getRangeAt(0);\n      range.deleteContents();\n      range.insertNode(document.createTextNode(text));\n    } else {\n      e.target.textContent += text;\n    }\n\n    // Trigger the onkeyup event to save the content\n    const event = new Event('keyup');\n    e.target.dispatchEvent(event);\n  });\n};\n\nexport const generateFontButtons = async (fonts, mode = 'local') => {\n  const container = document.createElement('div');\n  container.className = 'font-buttons-container';\n\n  // Create font chips container\n  const chipsContainer = document.createElement('div');\n  chipsContainer.className = 'font-chips';\n  \n  // Generate individual font buttons\n  for (const font of fonts) {\n    const button = await generateFontButton(font, mode);\n    chipsContainer.appendChild(button);\n  }\n\n  return chipsContainer; // Return only the chips container\n};\n\n// Create a separate function for navigation\nexport const generateFontNavigation = () => {\n  const navGroup = document.createElement('div');\n  navGroup.className = 'btn-group d-flex g-1 mb-2 font-nav-group';\n  \n  const prevButton = document.createElement('button');\n  prevButton.className = 'btn d-flex align-items-center justify-content-between d-flex-grow';\n  prevButton.innerHTML = '<span class=\"material-symbols-outlined\">chevron_left</span> Prev';\n  prevButton.onclick = () => navigateFonts('prev');\n  \n  const nextButton = document.createElement('button');\n  nextButton.className = 'btn d-flex align-items-center justify-content-between d-flex-grow';\n  nextButton.innerHTML = 'Next <span class=\"material-symbols-outlined\">chevron_right</span>';\n  nextButton.onclick = () => navigateFonts('next');\n  \n  navGroup.appendChild(prevButton);\n  navGroup.appendChild(nextButton);\n  \n  return navGroup;\n};\n\nconst navigateFonts = (direction) => {\n  const buttons = document.querySelectorAll('.btn__setfont');\n  const activeButton = document.querySelector('.btn__setfont.active');\n  \n  if (!activeButton || buttons.length <= 1) return;\n  \n  const currentIndex = Array.from(buttons).indexOf(activeButton);\n  let nextIndex;\n  \n  if (direction === 'next') {\n    nextIndex = currentIndex + 1 >= buttons.length ? 0 : currentIndex + 1;\n  } else {\n    nextIndex = currentIndex - 1 < 0 ? buttons.length - 1 : currentIndex - 1;\n  }\n  \n  buttons[nextIndex].click();\n};\n\nconst initAspectRatio = () => {\n  const select = document.getElementById('select__aspect-ratio');\n  const proofs = document.querySelectorAll('.item__proof');\n\n  // Set default on load\n  proofs.forEach(proof => {\n    proof.classList.add('ratio-letter');\n  });\n\n  select.addEventListener('change', (e) => {\n    const ratio = e.target.value;\n    proofs.forEach(proof => {\n      // Remove existing ratio classes\n      proof.classList.remove('ratio-letter', 'ratio-a4');\n      \n      // Add new ratio class\n      switch(ratio) {\n        case '8.5:11':\n          proof.classList.add('ratio-letter');\n          break;\n        case '7:10':\n          proof.classList.add('ratio-a4');\n          break;\n      }\n    });\n\n    // Optionally save preference\n    localStorage.setItem('preferred-ratio', ratio);\n  });\n\n  // Restore saved preference if it exists\n  const savedRatio = localStorage.getItem('preferred-ratio');\n  if (savedRatio) {\n    select.value = savedRatio;\n    select.dispatchEvent(new Event('change'));\n  }\n};\n\n// Use the imported function where needed\nconst getFontSize = (text, ratio = 1.618) => {\n  const sizes = calculateTypeScale(14, ratio);\n  const length = text.length;\n  \n  if (length <= 5) return sizes[0];        // Largest size\n  if (length <= 15) return sizes[1];       // Second largest\n  if (length <= 30) return sizes[2];       // Third largest\n  if (length <= 100) return sizes[3];      // Medium\n  if (length <= 250) return sizes[4];      // Second smallest\n  return sizes[5];                         // Smallest/base size\n};\n\n// Update your proof generation to use the selected scale\nconst generateProof = (text, options = {}) => {\n  const typeScale = parseFloat(document.getElementById('select__type-scale')?.value || 1.618);\n  const fontSize = getFontSize(text, typeScale);\n  \n  // ... rest of your proof generation code ...\n};\n\n// Add this function to initialize the type scale on page load\nconst initTypeScale = () => {\n    const ratio = parseFloat(document.getElementById('select__type-scale')?.value || 1.618);\n    const baseSize = parseFloat(document.getElementById('input__base-font-size')?.value || 14);\n    \n    document.querySelectorAll('.item').forEach(item => {\n        const itemID = item.id;\n        const testarea = item.querySelector('.testarea');\n        const text = testarea?.textContent || '';\n        \n        // Get the item-specific line height and font size\n        const itemLineHeight = getItemLineHeight(itemID);\n        const itemFontSize = getItemFontSize(itemID, text, baseSize, ratio);\n        \n        if (testarea) {\n            testarea.style.fontSize = `${itemFontSize}pt`;\n            testarea.style.lineHeight = itemLineHeight;\n        }\n        \n        // Update fontSize slider and its value display\n        const fontSizeSlider = item.querySelector(`#${itemID}-fontSize`);\n        const fontSizeVal = item.querySelector(`#${itemID}-fontSize-val`);\n        if (fontSizeSlider) {\n            fontSizeSlider.value = itemFontSize;\n            // Add .modified class if using custom font size\n            if (localStorage.getItem(`${itemID}-fontSize`)) {\n                fontSizeSlider.classList.add('modified');\n            }\n        }\n        if (fontSizeVal) {\n            fontSizeVal.textContent = `${itemFontSize}pt`;\n        }\n\n        // Update the testarea-values display\n        const valuesDisplay = item.querySelector('.testarea-values');\n        if (valuesDisplay) {\n            const currentStyles = {\n                'font-size': `${newSize}pt`,\n                'line-height': `${itemLineHeight}`, // Use item-specific line height\n                'letter-spacing': testarea?.style.letterSpacing || '0em'\n            };\n\n            const inlineStyle = Object.entries(currentStyles)\n                .map(([prop, val]) => `${prop}: ${val}`)\n                .join('; ');\n\n            valuesDisplay.innerHTML = generateTestAreaValues(inlineStyle);\n        }\n    });\n};\n\n// New function to update all proofs when either base size or ratio changes\nconst updateAllTypeScales = () => {\n    const ratio = parseFloat(document.getElementById('select__type-scale')?.value || 1.618);\n    const baseSize = parseFloat(document.getElementById('input__base-font-size')?.value || 14);\n    \n    localStorage.setItem('preferred-scale', ratio);\n    \n    document.querySelectorAll('.item').forEach(item => {\n        const itemID = item.id;\n        const testarea = item.querySelector('.testarea');\n        const text = testarea?.textContent || '';\n        \n        // Get the appropriate font size (either stored or calculated)\n        const fontSize = getItemFontSize(itemID, text, baseSize, ratio);\n        const itemLineHeight = getItemLineHeight(itemID);\n        \n        if (testarea) {\n            testarea.style.fontSize = `${fontSize}pt`;\n            testarea.style.lineHeight = itemLineHeight;\n        }\n        \n        // Update font size display\n        const fontSizeSlider = item.querySelector(`#${itemID}-fontSize`);\n        const fontSizeVal = item.querySelector(`#${itemID}-fontSize-val`);\n        if (fontSizeSlider) {\n            fontSizeSlider.value = fontSize;\n            // Add .modified class if using custom font size\n            if (localStorage.getItem(`${itemID}-fontSize`)) {\n                fontSizeSlider.classList.add('modified');\n            }\n        }\n        if (fontSizeVal) {\n            fontSizeVal.textContent = `${fontSize}pt`;\n        }\n\n        // Update line height display\n        updateItemLineHeightDisplay(itemID, itemLineHeight);\n    });\n};\n\n\n\nconst updateAllLineHeights = () => {\n    const globalLineHeight = getGlobalLineHeight();\n    localStorage.setItem('line-height', globalLineHeight);\n    \n    document.querySelectorAll('.item').forEach(item => {\n        const itemID = item.id;\n        // Only update items that don't have specific line heights\n        if (!localStorage.getItem(`${itemID}-lineHeight`)) {\n            updateItemLineHeightDisplay(itemID, globalLineHeight);\n        }\n    });\n};\n\nconst applyNameAndVersion = (isChecked) => {\n  const headerNames = document.getElementById('section__header-names');\n  const proofItems = document.querySelectorAll('.item__proof');\n\n  proofItems.forEach(item => {\n    // Remove any existing footer\n    const existingFooter = item.querySelector('.proof-footer');\n    if (existingFooter) {\n      existingFooter.remove();\n    }\n\n    if (isChecked) {\n      // Create new footer\n      const footer = document.createElement('div');\n      footer.className = 'proof-footer';\n      footer.innerHTML = headerNames.innerHTML;\n      item.appendChild(footer);\n    }\n  });\n};\n\nconst toggleNameAndVersion = (event) => {\n  const isChecked = event.target.checked;\n  localStorage.setItem('showNameAndVersion', isChecked);\n  document.body.classList.toggle('show-font-details', isChecked);\n};\n\nconst applyLockProofDimensions = (isChecked) => {\n  document.querySelectorAll('.item__proof').forEach(proof => {\n    if (isChecked) {\n      proof.classList.add('locked-dimensions');\n    } else {\n      proof.classList.remove('locked-dimensions');\n    }\n  });\n};\nconst toggleLockProofDimensions = (event) => {\n  const isChecked = event.target.checked;\n  localStorage.setItem('lockProofDimensions', isChecked);\n  applyLockProofDimensions(isChecked);\n};\n\n// Add new function to get item-specific font size\nconst getItemFontSize = (itemID, text, baseSize, ratio) => {\n    // Check for stored custom value first\n    const storedSize = localStorage.getItem(`${itemID}-fontSize`);\n    if (storedSize !== null) {\n        return parseFloat(storedSize);\n    }\n    // Otherwise calculate based on text length\n    return whichFontSize(text, baseSize, ratio);\n};\n\nconst getItemLineHeight = (itemID) => {\n    return parseFloat(\n        localStorage.getItem(`${itemID}-lineHeight`) ||\n        getGlobalLineHeight()\n    );\n};\n// Line Height Utilities\nconst getGlobalLineHeight = () => {\n    return parseFloat(\n        document.getElementById('input__line-height')?.value ||\n        localStorage.getItem('line-height') || 1.0\n    );\n};\n\nconst setItemLineHeight = (itemID, value) => {\n    localStorage.setItem(`${itemID}-lineHeight`, value);\n    updateItemLineHeightDisplay(itemID, value);\n};\n\nconst updateItemLineHeightDisplay = (itemID, value) => {\n    const item = document.getElementById(itemID);\n    if (!item) return;\n\n    const testarea = item.querySelector('.testarea');\n    const lineHeightSlider = item.querySelector(`#${itemID}-lineHeight`);\n    const lineHeightVal = item.querySelector(`#${itemID}-lineHeight-val`);\n    const valuesDisplay = item.querySelector('.testarea-values');\n    \n    if (testarea) testarea.style.lineHeight = value;\n    if (lineHeightSlider) lineHeightSlider.value = value;\n    if (lineHeightVal) lineHeightVal.textContent = value;\n    \n    if (valuesDisplay) {\n        const currentStyles = {\n            'font-size': testarea?.style.fontSize || '14pt',\n            'line-height': `${value}`,\n            'letter-spacing': testarea?.style.letterSpacing || '0em'\n        };\n        valuesDisplay.innerHTML = generateTestAreaValues(\n            Object.entries(currentStyles)\n                .map(([prop, val]) => `${prop}: ${val}`)\n                .join('; ')\n        );\n    }\n};\n\n// Update resetCustomValue to handle font size reset\nexport const resetCustomValue = (itemID, property) => {\n    localStorage.removeItem(`${itemID}-${property}`);\n    \n    let globalValue;\n    if (property === 'lineHeight') {\n        globalValue = getGlobalLineHeight();\n    } else if (property === 'fontSize') {\n        const testarea = document.querySelector(`#${itemID} .testarea`);\n        const text = testarea?.textContent || '';\n        const ratio = parseFloat(document.getElementById('select__type-scale')?.value || 1.618);\n        const baseSize = parseFloat(document.getElementById('input__base-font-size')?.value || 14);\n        globalValue = whichFontSize(text, baseSize, ratio);\n    }\n        \n    updateItemDisplay(itemID, property, globalValue);\n    \n    // Remove modified class\n    const slider = document.querySelector(`#${itemID}-${property}`);\n    if (slider) {\n        slider.classList.remove('modified');\n    }\n};\n\n","import { CONFIG } from './config.js';\nimport * as AppCore from './app-core.js';\nimport { localStorageClear, saveEditableContent, saveInputValue } from './utils.js';\n\n// Global error handlers\nwindow.addEventListener('unhandledrejection', function(event) {\n  console.error('Unhandled promise rejection:', event.reason);\n});\n\nwindow.addEventListener('error', function(event) {\n  console.error('Uncaught error:', event.error);\n});\n\n// Make functions globally available\nwindow.setFont = AppCore.setFont;\nwindow.onReadFile = AppCore.onReadFile;\nwindow.setStage = AppCore.setStage;\nwindow.passStyleValue = AppCore.passStyleValue;\nwindow.passfvarValue = AppCore.passfvarValue;\nwindow.passfeatValue = AppCore.passfeatValue;\nwindow.insertField = AppCore.insertField;\nwindow.localStorageClear = localStorageClear;\nwindow.saveEditableContent = saveEditableContent;\nwindow.saveInputValue = saveInputValue;\n\nconst init = (forceServerLoad = false) => {\n\ttry {\n\t  if (forceServerLoad || !['localhost', '127.0.0.1', ''].includes(location.hostname)) {\n\t\tAppCore.serverLoad();\n\t  } else {\n\t\tAppCore.localLoad();\n\t  }\n  \n\t  AppCore.setupEventListeners();\n\t  document.body.classList.add('loaded');\n  \n\t} catch (error) {\n\t  console.error('Error during initialization:', error);\n\t}\n  };\n\ndocument.addEventListener('DOMContentLoaded', () => init(false));"],"names":["showErrorMessage","message","el","document","getElementById","style","display","trim","length","textContent","console","error","localStorageClear","localStorage","clear","setItem","location","reload","toggleMode","body","newMode","getItem","removeAttribute","querySelector","setAttribute","toggleSettingsVisibility","settingsToggle","classList","toggle","whichFontSize","text","baseSize","arguments","undefined","ratio","toString","sizes","Math","round","pow","calculateTypeScale","charCount","saveData","id","value","Storage","content","getStoredContent","elementId","defaultContent","_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","asyncGeneratorStep","_asyncToGenerator","apply","_next","_throw","font","onFontLoaded","loadedFont","fontFamilySource","fontFamily","_ref","_callee","reject","_document$querySelect","fontFace","fontFaceRule","currentStage","_context","log","concat","window","FontFace","format","outlinesFormat","load","fonts","add","createElement","head","appendChild","ready","displayFontData","includes","hostname","dataset","stage","proofingPhase","setStage","t0","_x","_x2","onReadFile","event","files","target","fileButtonParent","innerHTML","navGroup","generateFontNavigation","generateFontButtons","Array","from","container","firstButton","click","setFont","_ref3","_callee3","fontPath","fontName","_context3","opentype","err","_x4","_x5","_ref4","_callee4","_document$querySelect2","tablename","styles","nameHtml","postScriptName","version","formattedVersion","modifiedDate","formattedDate","_context4","tables","t1","names","en","fontRevision","modified","Date","toLocaleDateString","_x6","article","stageButtons","warn","pendingStage","fetch","response","json","proof","html","generateStageHtml","buttonHtml","generateStageButtons","initTypeScale","applyNameAndVersion","showNameAndVersion","lockDimensions","applyLockProofDimensions","gsubFeatures","gsub","features","taglist","filter","feature","tag","map","title","textClass","testAreaID","itemID","sliderID","_getStoredStyles","getStoredStyles","fontSize","lineHeight","letterSpacing","fvarStyle","inlineStyle","generateFvarStyle","generateSliders","generateVariableSliders","generateStyleButtons","generateFeatureCheckboxes","generateProofContent","_document$getElementB","_document$getElementB2","_document$querySelect3","typeScale","parseFloat","getItemFontSize","getItemLineHeight","columnCount","columnGap","fvar","axes","axis","storedValue","defaultValue","join","hasCustomLineHeight","hasCustomFontSize","minValue","maxValue","generateFontButton","_ref5","_callee5","mode","fontType","isVariable","button","_args5","_context5","replace","split","toUpperCase","isVariableFont","URL","createObjectURL","className","onclick","querySelectorAll","btn","remove","_x7","_ref6","_callee6","arrayBuffer","parsedFont","_context6","parse","_x8","updateColumns","passStyleValue","uniqueTags","Set","sample","savedContent","savedTitle","generateTestAreaValues","styleMap","property","_style$split$map2","_slicedToArray","label","formattedValue","formatStyleValue","updateInlineText","fontSizeSlider","lineHeightSlider","letterSpacingSlider","currentStyles","entries","_ref7","_ref8","prop","val","elementIdSuffix","element","displayValue","slider","testarea","styleValue","removeStyleValue","removeItem","_document$getElementB4","_document$getElementB5","getGlobalLineHeight","valueDisplay","localLoad","data","arr","uniqueFonts","sort","preventDefaults","preventDefault","stopPropagation","highlight","unhighlight","handleDrop","handleFiles","dataTransfer","filesOrEvent","Event","uploadPromises","file","setTimeout","uploadFile","all","handleFileButtonClick","contains","parentNode","children","child","sibling","handleStageButtonClick","toggleToolsVisibility","setupPasteHandling","addEventListener","clipboardData","getData","selection","getSelection","rangeCount","range","getRangeAt","deleteContents","insertNode","createTextNode","dispatchEvent","_ref9","_callee7","chipsContainer","_iterator","_step","_font2","_args7","_context7","_createForOfIteratorHelper","_x9","prevButton","navigateFonts","nextButton","direction","buttons","activeButton","currentIndex","indexOf","_document$getElementB7","_document$getElementB8","item","itemLineHeight","itemFontSize","fontSizeVal","valuesDisplay","newSize","_ref10","_ref11","updateAllTypeScales","_document$getElementB9","_document$getElementB10","updateItemLineHeightDisplay","updateAllLineHeights","globalLineHeight","isChecked","headerNames","existingFooter","footer","toggleNameAndVersion","checked","toggleLockProofDimensions","storedSize","_document$getElementB11","lineHeightVal","_ref12","_ref13","reason","AppCore","passfvarValue","fvarSupport","fvarcss","_document$getElementB3","tagValue","fontVariationSettings","passfeatValue","featureSupport","featSupport","featcss","fontFeatureSettings","insertField","aboveHere","original","clone","cloneNode","now","input","insertBefore","height","overflow","transition","scrollHeight","saveEditableContent","innerText","saveInputValue","init","forceServerLoad","dragDropArea","fileInput","eventName","fileButtons","toolsToggle","modeToggle","localStorageClearButton","addNameAndVersionCheckbox","lockProofDimensionsCheckbox","savedState","aspectRatioSelect","savedRatio","baseFontInput","savedBaseSize","lineHeightInput","savedLineHeight","savedMode","typeScaleSelect"],"sourceRoot":""}