{"version":3,"file":"application.js","mappings":"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","sources":["webpack://idiotproof/./src/js/utils.js","webpack://idiotproof/./src/js/config.js","webpack://idiotproof/./src/js/app-core.js","webpack://idiotproof/./src/js/index.js"],"sourcesContent":["import { CONFIG } from './config.js';\n  \n  // utils.js\n  export const getFormattedDate = () => {\n    const now = new Date();\n    return now.toJSON().slice(0, 10).replace(/-/g, '/');\n  };\n  \n  export const preserveUnique = (arr) => {\n    return [...new Set(arr)];\n  };\n  \n  export const showErrorMessage = (message) => {\n    const el = document.getElementById('message');\n    if (el) {\n      el.style.display = message && message.trim().length > 0 ? 'block' : 'none';\n      el.textContent = message;\n    } else {\n      console.error('Message element not found. Error message:', message);\n    }\n  };\n  \n  export const uint8ToBase64 = (buffer) => {\n    const chunk = 8192;\n    let result = '';\n    for (let i = 0; i < buffer.length; i += chunk) {\n      const slice = buffer.subarray(i, i + chunk);\n      result += String.fromCharCode.apply(null, slice);\n    }\n    return btoa(result);\n  };\n  \n  export const sanitizeId = (id) => {\n    return id.replace(/[^a-z0-9]/gi, '_').toLowerCase();\n  };\n\n  export const localStorageClear = () => {\n    localStorage.clear();\n    localStorage.setItem('proofingPhase', CONFIG.defaultProofingPhase);\n    location.reload();\n  };\n\n  export function toggleMode() {\n    const body = document.body;\n    const currentMode = localStorage.getItem('colorMode') || 'light';\n    const newMode = currentMode === 'light' ? 'dark' : 'light';\n    \n    // Save the new mode\n    localStorage.setItem('colorMode', newMode);\n    \n    // Update UI\n    if (newMode === 'light') {\n      body.removeAttribute('data-theme');\n      document.querySelector('#btn__mode-toggle .material-symbols-outlined').textContent = 'light_mode';\n    } else {\n      body.setAttribute('data-theme', 'dark');\n      document.querySelector('#btn__mode-toggle .material-symbols-outlined').textContent = 'dark_mode';\n    }\n  }\n  export function toggleSettingsVisibility() {\n    const settingsToggle = document.getElementById('btn__settings-toggle');\n    const body = document.body;\n    body.classList.toggle('settings-visible');\n    settingsToggle.classList.toggle('settings-visible');\n  }\n\n  export function toggleUi() {\n\tconst toggleUIButton = document.getElementById('btn__ui-toggle');\n\tconst body = document.body;\n  \n\tbody.classList.toggle('ui-hidden');\n\tthis.classList.toggle('ui-hidden');\n\t\n\t// Optionally, you can save the state to localStorage\n\tlocalStorage.setItem('uiHidden', body.classList.contains('ui-hidden'));\n  \n\t// Check if the UI was hidden in a previous session\n\tif (localStorage.getItem('uiHidden') === 'true') {\n\t  body.classList.add('ui-hidden');\n\t  toggleUIButton.classList.add('ui-hidden');\n\t}\n  }\n  \n  export const calculateTypeScale = (baseSize = 14, ratio = 1.618, steps = 6) => {\n    const sizes = {\n      't__size-xxl': Math.round(baseSize * Math.pow(ratio, 5)),\n      't__size-xl':  Math.round(baseSize * Math.pow(ratio, 4)),\n      't__size-l':   Math.round(baseSize * Math.pow(ratio, 3)),\n      't__size-m':   Math.round(baseSize * Math.pow(ratio, 2)),\n      't__size-s':   Math.round(baseSize * Math.pow(ratio, 1)),\n      't__size-xs':  baseSize\n    };\n    return sizes;\n  };\n  \n  export const whichFontSize = (text, baseSize = 14, ratio = 1.618) => {\n    if (!text) return baseSize.toString();\n  \n    const sizes = calculateTypeScale(baseSize, ratio);\n    \n    const charCount = text.length;\n    if (charCount < 25) return sizes['t__size-xxl'];\n    if (charCount < 50) return sizes['t__size-xl'];\n    if (charCount < 95) return sizes['t__size-l'];\n    if (charCount < 200) return sizes['t__size-m'];\n    if (charCount < 1000) return sizes['t__size-s'];\n    return sizes['t__size-xs'];\n  };\n  \n  export const removeElementsByClass = (className) => {\n    document.querySelectorAll(`.${className}`).forEach(el => el.remove());\n  };\n  \n  export const removeElementById = (id) => {\n    const element = document.getElementById(id);\n    if (element) {\n      element.style.transition = 'opacity 0.5s ease';\n      element.style.opacity = '0';\n      setTimeout(() => element.remove(), 500);\n    }\n  };\n  \n  export const saveData = (id, value) => {\n    if (typeof Storage !== 'undefined') {\n      if (value !== 'thisContent') {\n        localStorage.setItem(id, value);\n      } else {\n        const content = document.getElementById(id).textContent;\n        localStorage.setItem(id, content);\n      }\n    }\n  };\n  \n  // Save content of a contenteditable element to localStorage\n  export const saveEditableContent = (elementId) => {\n    const element = document.getElementById(elementId);\n    if (!element) {\n      console.warn(`Element with ID ${elementId} not found`);\n      return;\n    }\n    \n    const content = element.innerText;\n    localStorage.setItem(elementId, content);\n  };\n\n  // Save value of an input element to localStorage\n  export const saveInputValue = (elementId) => {\n    const element = document.getElementById(elementId);\n    if (!element) {\n      console.warn(`Element with ID ${elementId} not found`);\n      return;\n    }\n    \n    localStorage.setItem(elementId, element.value);\n  };\n\n  // Get content from localStorage or return default\n  export const getStoredContent = (elementId, defaultContent = '') => {\n    return localStorage.getItem(elementId) || defaultContent;\n  };\n  \n  export function initColorMode() {\n\tconst savedMode = localStorage.getItem('colorMode') || 'light';\n\tconst body = document.body;\n  \n\tif (savedMode === 'dark') {\n\t  body.setAttribute('data-theme', 'dark');\n\t  document.querySelector('#btn__mode-toggle .material-symbols-outlined').textContent = 'dark_mode';\n\t} else {\n\t  body.removeAttribute('data-theme');\n\t  document.querySelector('#btn__mode-toggle .material-symbols-outlined').textContent = 'light_mode';\n\t}\n  }\n  ","// config.js\nexport const CONFIG = {\n    defaultProofingPhase: 'Hamburgers',\n    fontFormats: {\n      truetype: 'ttf',\n      opentype: 'otf',\n    },\n    jsonPath: 'src/js/proof.json',\n  };","import { CONFIG } from './config.js';\nimport { getFormattedDate,\n\tpreserveUnique,\n\tshowErrorMessage,\n\tuint8ToBase64,\n\tlocalStorageClear,\n\twhichFontSize,\n\tremoveElementsByClass,\n\tsaveData,\n\ttoggleMode,\n\ttoggleSettingsVisibility,\n\ttoggleUi,\n\tsaveEditableContent,\n\tsaveInputValue,\n\tgetStoredContent,\n\tcalculateTypeScale,\n\tinitColorMode  } from './utils.js';\n\n// Re-export localStorageClear\nexport { localStorageClear };\n\nlet font = null;\nconst fontFormats = {\n    truetype: 'ttf',\n    opentype: 'otf',\n};\n\nexport const onFontLoaded = (loadedFont, fontFamilySource, fontFamily) => {\n\treturn new Promise((resolve, reject) => {\n\t  try {\n\t\tfont = loadedFont;\n\t\tconsole.log(`Font assigned globally: ${fontFamily}`);\n\t\t\n\t\t// Create and apply the font-face rule\n\t\tconst fontFaceRule = `\n\t\t  @font-face {\n\t\t\tfont-family: '${fontFamily}';\n\t\t\tsrc: url('${fontFamilySource}') format('${loadedFont.outlinesFormat === 'truetype' ? 'truetype' : 'opentype'}');\n\t\t  }\n\t\t`;\n\t\tconst style = document.createElement('style');\n\t\tstyle.textContent = fontFaceRule;\n\t\tdocument.head.appendChild(style);\n\t\tconsole.log(`Font-face rule applied: ${fontFaceRule}`);\n  \n\t\twindow.fontFamily = fontFamily;\n\t\tconsole.log(`Window.fontFamily set to: ${fontFamily}`);\n  \n\t\tdisplayFontData(fontFamily);\n  \n\t\tif (['localhost', '127.0.0.1', ''].includes(location.hostname)) {\n\t\t  localStorage.setItem('fontFamily', fontFamily);\n\t\t  localStorage.setItem('fontFamilySource', fontFamilySource);\n\t\t  console.log(`Font information saved to localStorage`);\n\t\t}\n  \n\t\t// If there's a pending stage, set it now\n\t\tif (window.pendingStage) {\n\t\t  setStage(window.pendingStage);\n\t\t  window.pendingStage = null;\n\t\t} else {\n\t\t  // Set a default stage if none is pending\n\t\t  setStage('Hamburgers');  // or whatever your default stage should be\n\t\t}\n\t\t\n\t\tconsole.log(`Stage set successfully`);\n\t\tresolve();\n\t  } catch (error) {\n\t\tconsole.error('Error in onFontLoaded:', error);\n\t\t\n\t\treject(error);\n\t  }\n\t});\n  };\n\nexport const onReadFile = (event) => {\n\tconst files = event.target.files;\n\tconst fileButtonParent = document.getElementById('section__header-file-buttons');\n\tfileButtonParent.innerHTML = '';\n\n\t// First add navigation\n\tconst navGroup = generateFontNavigation();\n\tfileButtonParent.appendChild(navGroup);\n\n\t// Then add font buttons\n\tgenerateFontButtons(Array.from(files), 'server')\n\t  .then(container => {\n\t\tfileButtonParent.appendChild(container);\n\t\t// Activate the first button automatically\n\t\tconst firstButton = container.querySelector('.btn__setfont');\n\t\tif (firstButton) {\n\t\t  firstButton.click();\n\t\t}\n\t  });\n};\n\n  const readSingleFile = (file) => {\n\treturn new Promise((resolve, reject) => {\n\t  const reader = new FileReader();\n\t  \n\t  reader.onload = async (e) => {\n\t\ttry {\n\t\t  console.log(`File read successfully: ${file.name}`);\n\t\t  const font = opentype.parse(e.target.result);\n\t\t  console.log(`Font parsed successfully: ${font.names.postScriptName.en}`);\n\t\t  const fontFamily = font.names.postScriptName.en;\n\t\t  const fontFamilySource = `fonts/${fontFamily}`;\n\t\t  \n\t\t  await onFontLoaded(font, fontFamilySource, fontFamily);\n  \n\t\t  font.file = {\n\t\t\tname: file.name,\n\t\t\tlastModified: file.lastModified,\n\t\t\tsize: file.size,\n\t\t\ttype: file.type,\n\t\t  };\n\t\t  font.type = 'user:local';\n  \n\t\t  const tempUint8array = new Uint8Array(e.target.result);\n\t\t  const isVariableFont = font.tables.fvar !== undefined;\n  \n\t\t  // Set the @font-face rule\n\t\t  const fontFaceRule = `@font-face {font-family:'${fontFamily}'; src: url('data:font/ttf;base64,${uint8ToBase64(tempUint8array)}') format('truetype');}`;\n\t\t  document.getElementById('style__fontface').innerHTML += fontFaceRule;\n\t\t  console.log(`Font-face rule added: ${fontFaceRule}`);\n  \n\t\t  console.log(`Loaded font: ${fontFamily}, Variable: ${isVariableFont}`);\n  \n\t\t  showErrorMessage('');\n\t\t  resolve();\n\t\t} catch (err) {\n\t\t  console.error('Error parsing font:', err);\n\t\t  showErrorMessage(`Error loading font: ${err.message}`);\n\t\t  reject(err);\n\t\t}\n\t  };\n  \n\t  reader.onerror = (err) => {\n\t\tconsole.error('Error reading file:', err);\n\t\tshowErrorMessage(err.toString());\n\t\treject(err);\n\t  };\n  \n\t  reader.readAsArrayBuffer(file);\n\t});\n  };\n\nexport const setFont = (fontPath, fontName) => {\n\tconsole.log(`Attempting to load font: ${fontName} from ${fontPath}`);\n\topentype.load(fontPath, (err, loadedFont) => {\n\t  if (err) {\n\t\tconsole.error('Error loading font:', err);\n\t\tshowErrorMessage(`Error loading font: ${err}`);\n\t  } else {\n\t\tconsole.log(`Font loaded successfully: ${fontName}`);\n\t\tfont = loadedFont; // Ensure this is set globally\n\t\ttry {\n\t\t  onFontLoaded(loadedFont, fontPath, fontName);\n\t\t  // After the font is loaded and processed, set the stage\n\t\t  setStage(localStorage.getItem('proofingPhase') || 'Hamburgers');\n\t\t} catch (error) {\n\t\t  console.error('Error in onFontLoaded:', error);\n\t\t  showErrorMessage(`Error processing font: ${error}`);\n\t\t}\n\t  }\n\t});\n  };\n\nexport const displayFontData = (fontFamily) => {\n    var tablename, table, property, value, tag;\n    var styles = '';\n\n    for (tablename in font.tables) {\n        table = font.tables[tablename];\n\n        if (tablename === 'cmap') {\n            var gim = font.tables.cmap.glyphIndexMap;\n            var gimLength = Object.keys(gim).length;\n            if (gimLength <= 100) {\n                window.proofingPhase = \"Hamburgers\";\n            } else if (gimLength >= 400) {\n                window.proofingPhase = \"Diacritics\";\n            } else {\n                window.proofingPhase = \"Spacing\";\n            }\n        }\n        // Determine if TTF or OTF\n        var fontFormat = font.outlinesFormat;\n        fontFormat = fontFormats[fontFormat];\n        // Inserting header data: font name, foundry name, etc.\n        if (tablename === 'name') {\n                let nameHtml = '';\n                if (font.names.designer) {\n                    var designerName = font.names.designer.en;\n                } else {\n                    var designerName = \"No Designer Name :(\";\n                }\n                if (font.names.postScriptName) {\n                    var postScriptName = font.names.postScriptName.en;\n                } else {\n                    var postScriptName = \"Font Name\";\n                }\n                nameHtml += '<div class=\"section__header-name d-flex-grow t__left\" contenteditable=\"true\" spellcheck=\"false\">'+designerName+'</div>';\n\n                nameHtml += '<div class=\"section__header-name d-flex-grow t__center\" spellcheck=\"false\">'+postScriptName+'</div>';\n                styles += `.t__importedfontfamily { font-family: \"${fontFamily}\" }`;\n                nameHtml += '<div class=\"section__header-name  d-flex-grow t__right\">'+getFormattedDate()+'</div>';\n                document.getElementById('section__header-names').innerHTML = nameHtml;\n                continue;\n        }\n    }\n    //Inject css of necessary features\n    document.getElementById('style__fontfamily').innerHTML = styles;\n    \n    //setStage\n    if (localStorage.getItem('proofingPhase')) {\n            // Check for local storage settings\n            setStage(localStorage.getItem('proofingPhase'));\n    } else {\n            setStage(window.proofingPhase);\n    }\n};\n\nexport const setStage = (stage) => {\n\tconst article = document.getElementById('section__article-app');\n\tconst stageButtons = document.getElementById('section__header-stage-buttons');\n\t\n\tif (!font) {\n\t  console.warn('Font not loaded yet. Deferring stage setting.');\n\t  // Store the stage to set later\n\t  window.pendingStage = stage;\n\t  return;\n\t}\n  \n\tfetch(CONFIG.jsonPath)\n\t  .then(response => response.json())\n\t  .then(proof => {\n\t\tconst html = generateStageHtml(proof, stage);\n\t\tconst buttonHtml = generateStageButtons(proof, stage);\n  \n\t\tarticle.innerHTML = html;\n\t\tstageButtons.innerHTML = buttonHtml;\n\t\tdocument.getElementById('style__opentype-features').innerHTML = '';\n\t\t\n\t\tsaveData('proofingPhase', stage);\n  \n\t\t// Initialize type scale after rendering\n\t\tinitTypeScale();\n\t  })\n\t  .catch(error => console.error('Error loading JSON:', error));\n  };\n  \n  const generateStageHtml = (proof, stage) => {\n    if (!proof[stage]) {\n      return '<div class=\"item d-flex t__center\"><div class=\"item__proof\">No features found! :...(</div></div>';\n    }\n  \n    const gsubFeatures = font.tables.gsub.features;\n    const taglist = Object.values(gsubFeatures)\n\t\t.filter(feature => typeof feature === 'object' && feature.tag)\n\t\t.map(feature => feature.tag)\n\t\t.filter(tag => proof[\"Features\"][tag] !== undefined);\n  \n    let html = '';\n  \n    for (const title in proof[stage]) {\n      if (stage === \"Features\" && !taglist.includes(title)) {\n        continue;\n      }\n  \n      const textClass = whichFontSize(proof[stage][title]);\n      const testAreaID = `section__proofing-${title}`;\n      const itemID = `item--${title}`;\n      const sliderID = `${itemID}`;\n      \n      const { fontSize, lineHeight, letterSpacing, inlineStyle } = getStoredStyles(sliderID, textClass);\n      const fvarStyle = generateFvarStyle(itemID);\n  \n      html += `\n        <div id=\"${itemID}\" class=\"item\">\n          <button class=\"btn btn-link add-item-above chip\" onclick=\"insertField('${itemID}')\">+ Add Proof Window</button>\n          <div class=\"item__container d-flex\">\n            <div class=\"item__sliders pt-2\">\n              <div class=\"item__sliders-wrapper\">\n                ${generateSliders(itemID, sliderID, fontSize, lineHeight, letterSpacing)}\n                ${generateVariableSliders(itemID, sliderID)}\n                ${generateStyleButtons(itemID)}\n                ${generateFeatureCheckboxes(itemID, proof, taglist)}\n                <button class=\"btn btn-secondary d-flex align-items-center mt-5\" title=\"Apply these styles to all visible proof sheets.\" onclick=\"passStyleValue('${itemID}','idiocracy','global')\">Apply all <span class=\"material-symbols-outlined\">globe</span></button>\n              </div>\n            </div>\n            <div class=\"item__proof ratio-letter\">\n              <button class=\"btn btn-link remove-item-this invisible\" onclick=\"removeElementsByID('${itemID}')\">×</button>\n              ${generateProofContent(stage, title, proof, testAreaID, fvarStyle, textClass)}\n            </div>\n          </div>\n        </div>\n      `;\n    }\n\treturn html;\n  };\n  \n// Modify the getStoredStyles function to include column properties\nconst getStoredStyles = (itemID, textClass) => {\n  // Get the current type scale ratio\n  const typeScale = parseFloat(document.getElementById('select__type-scale')?.value || 1.618);\n  \n  // Use whichFontSize to calculate the font size based on the text\n  const content = document.querySelector(`#${itemID} .testarea`)?.textContent || textClass;\n  \n  // Check if there's a stored fontSize, otherwise calculate it\n  const fontSize = localStorage.getItem(`${itemID}-fontSize`) || whichFontSize(content);\n  \n  const lineHeight = localStorage.getItem(`${itemID}-lineHeight`) || '1.2';\n  const letterSpacing = localStorage.getItem(`${itemID}-letterSpacing`) || '0em';\n  const columnCount = localStorage.getItem(`${itemID}-column-count`) || '1';\n  const columnGap = localStorage.getItem(`${itemID}-column-gap`) || '1em';\n\n  const inlineStyle = `\n    font-size: ${fontSize}pt;\n    line-height: ${lineHeight};\n    letter-spacing: ${letterSpacing};\n    column-count: ${columnCount};\n    column-gap: ${columnGap};\n  `;\n\n  return { fontSize, lineHeight, letterSpacing, columnCount, columnGap, inlineStyle };\n};\n  \n  const generateFvarStyle = (itemID) => {\n    let fvarStyle = '';\n    if (font.tables.fvar) {\n      const fvarSupport = font.tables.fvar.axes.map(axis => axis.tag);\n      fvarStyle = 'font-variation-settings: ' + \n        font.tables.fvar.axes.map(axis => {\n          const storedValue = localStorage.getItem(`${itemID}-${axis.tag}-val`);\n          const value = storedValue !== null ? storedValue : axis.defaultValue;\n          return `'${axis.tag}' ${value}`;\n        }).join(', ') + ';';\n    }\n    return fvarStyle;\n  };\n  \n  const generateSliders = (itemID, sliderID, fontSize, lineHeight, letterSpacing) => `\n    <label for=\"${sliderID}-fontSize\">Font Size </label>\n    <span class=\"t__right text-small\" id=\"${sliderID}-fontSize-val\">${fontSize}pt</span>\n    <input id=\"${sliderID}-fontSize\" type=\"range\" class=\"slider\" min=\"4\" max=\"160\" step=\"2\" value=\"${fontSize}\" oninput=\"passStyleValue('${itemID}', 'fontSize', this.value)\">\n    \n    <label for=\"${sliderID}-lineHeight\">Line Height </label>\n    <span class=\"t__right text-small\" id=\"${sliderID}-lineHeight-val\">${lineHeight}</span>\n    <input id=\"${sliderID}-lineHeight\" type=\"range\" class=\"slider\" min=\"0.6\" max=\"3.0\" step=\"0.01\" value=\"${lineHeight}\" oninput=\"passStyleValue('${itemID}', 'lineHeight', this.value)\">\n    \n    <label for=\"${sliderID}-letterSpacing\">Letter Spacing </label>\n    <span class=\"t__right text-small\" id=\"${sliderID}-letterSpacing-val\">${letterSpacing}</span>\n    <input id=\"${sliderID}-letterSpacing\" type=\"range\" class=\"slider\" min=\"-0.4\" max=\"0.4\" step=\"0.01\" value=\"${letterSpacing}\" oninput=\"passStyleValue('${itemID}', 'letterSpacing', this.value)\">\n  `;\n  \n  const generateVariableSliders = (itemID, sliderID) => {\n    if (!font.tables.fvar) return '';\n  \n    return font.tables.fvar.axes.map(axis => {\n      const storedValue = localStorage.getItem(`${itemID}-${axis.tag}-val`);\n      const value = storedValue !== null ? storedValue : axis.defaultValue;\n      return `\n        <label for=\"${sliderID}-${axis.tag}\">${axis.name.en} </label>\n        <span class=\"t__right text-small\" id=\"${sliderID}-${axis.tag}-val\">${value}</span>\n        <input id=\"${sliderID}-${axis.tag}\" type=\"range\" class=\"slider\" min=\"${axis.minValue}\" max=\"${axis.maxValue}\" value=\"${value}\" oninput=\"passfvarValue('${itemID}', '${axis.tag}', this.value, '${font.tables.fvar.axes.map(a => a.tag).join(',')}')\">\n      `;\n    }).join('');\n  };\n  \n  export const generateFontButton = async (font, mode = 'local') => {\n\tlet fontName, fontPath, fontType, displayName, isVariable;\n  \n\tif (mode === 'local') {\n\t  fontName = font.replace('.', '-');\n\t  fontPath = `fonts/${font}`;\n\t  displayName = font.replace('-', ' ').replace(/\\.[^/.]+$/, \"\");\n\t  fontType = font.split('.').pop().toUpperCase();\n\t  isVariable = await isVariableFont(fontPath);\n\t} else { // server mode\n\t  fontName = font.name.replace('.', '-');\n\t  fontPath = URL.createObjectURL(font);\n\t  displayName = font.name.replace('-', ' ').replace(/\\.[^/.]+$/, \"\");\n\t  fontType = font.name.split('.').pop().toUpperCase();\n\t  isVariable = await isVariableFont(font);\n\t}\n  \n\tif (isVariable) {\n\t  fontType = 'VF';\n\t}\n  \n\tconst button = document.createElement('div');\n\tbutton.className = 'btn__setfont chip btn d-flex justify-content-between';\n\tbutton.title = mode === 'local' ? font : font.name;\n\tbutton.id = `btn__setfont-${fontName}`;\n\tbutton.innerHTML = `${displayName}<span class=\"d-flex-grow text-small text-right\">${fontType}</span>`;\n\tbutton.onclick = () => {\n\t  // Remove active class from all buttons\n\t  document.querySelectorAll('.btn__setfont').forEach(btn => {\n\t    btn.classList.remove('active');\n\t    btn.classList.remove('visited'); // Remove visited from all buttons\n\t  });\n\t  // Add active class to clicked button\n\t  button.classList.add('active');\n\t  button.classList.add('visited'); // Add visited only when clicked\n\t  setFont(fontPath, fontName);\n\t};\n  \n\treturn button;\n  };\n  \n  const isVariableFont = async (font) => {\n\ttry {\n\t  let arrayBuffer;\n\t  if (typeof font === 'string') {\n\t\t// Local mode: font is a path\n\t\tconst response = await fetch(font);\n\t\tarrayBuffer = await response.arrayBuffer();\n\t  } else {\n\t\t// Server mode: font is a File object\n\t\tarrayBuffer = await font.arrayBuffer();\n\t  }\n\t  const parsedFont = opentype.parse(arrayBuffer);\n\t  return parsedFont.tables.fvar !== undefined;\n\t} catch (error) {\n\t  console.error('Error checking if font is variable:', error);\n\t  return false;\n\t}\n  };\n  \n  const generateFontFaces = (fonts) => {\n\treturn fonts.map(font => {\n\t  const fontName = font.replace('.', '-');\n\t  return `@font-face { font-family: \"${fontName}\"; src: url(\"fonts/${font}\");}`;\n\t}).join('\\n');\n  };\n\n  // Add new function to handle column updates\nwindow.updateColumns = (itemID) => {\n\tconst columnCount = document.getElementById(`${itemID}-column-count`).value;\n\tconst columnGap = document.getElementById(`${itemID}-column-gap`).value;\n\t\n\tpassStyleValue(itemID, 'column-count', columnCount);\n\tpassStyleValue(itemID, 'column-gap', columnGap);\n  };\n\n  const generateStyleButtons = (itemID) => `\n  <div id=\"btn__wrapper-case\">\n    <label>Case</label>\n    <div class=\"d-flex g-1 btn__wrapper\">\n      <button class=\"btn btn-link textTransform-uppercase\" title=\"Uppercase\" onclick=\"passStyleValue('${itemID}','textTransform', 'uppercase')\">TT</button>\n      <button class=\"btn btn-link textTransform-capitalize\" title=\"Capitalize\" onclick=\"passStyleValue('${itemID}','textTransform', 'capitalize')\">Tt</button>\n      <button class=\"btn btn-link textTransform-lowercase\" title=\"Lowercase\" onclick=\"passStyleValue('${itemID}','textTransform', 'lowercase')\">tt</button>\n    </div>\n  </div>\n  <div id=\"btn__wrapper-columns\">\n    <label>Columns</label>\n    <div class=\"d-flex g-1 btn__wrapper\">\n\t<span class=\"text-small\">Count</span>\n      <input class=\"input\" type=\"number\" id=\"${itemID}-column-count\" min=\"1\" max=\"6\" value=\"1\" onchange=\"updateColumns('${itemID}')\" style=\"width: 50px;\">\n\t<span class=\"text-small\">Gap</span>\n      <input class=\"input\" type=\"text\" id=\"${itemID}-column-gap\" value=\"10px\" onchange=\"updateColumns('${itemID}')\" style=\"width: 50px;\">\n    </div>\n  </div>\n`;\n\n\n  \nconst generateFeatureCheckboxes = (itemID, proof, taglist) => {\n\tconst uniqueTags = [...new Set(taglist)];\n\treturn `\n\t  <label>Features</label>  \n\t  <div class=\"btn__wrapper d-flex flex-wrap g-0\">\n\t\t${uniqueTags.map(tag => {\n\t\t  const name = proof[\"Features\"][tag][\"abstract\"];\n\t\t  return `\n\t\t\t<div class=\"chip d-flex align-items-center justify-content-between d-flex-grow\" onclick=\"document.getElementById('${itemID}-checkbox-${tag}').click()\">\n\t\t\t  <input id=\"${itemID}-checkbox-${tag}\" type=\"checkbox\" onclick=\"passfeatValue('${itemID}', '${tag}', '${uniqueTags.join(',')}')\">\n\t\t\t  <span class=\"d-flex-grow\">${name}</span>\n\t\t\t  <span class=\"tag-label text-small\">${tag}</span>\n\t\t\t</div>\n\t\t  `;\n\t\t}).join('')}\n\t  </div>\n\t`;\n  };\n  \n  \n  const generateProofContent = (stage, title, proof, testAreaID, fvarStyle, textClass) => {\n    // Add safety checks\n    if (!proof || !proof[stage] || !proof[stage][title]) {\n      console.warn('Missing proof data:', { stage, title });\n      return '';\n    }\n\n    const savedContent = getStoredContent(testAreaID, proof[stage][title]) || '';\n    const savedTitle = getStoredContent(`${testAreaID}-title`, title) || '';\n    const fontSize = whichFontSize(savedContent);\n  \n    // Get other style values\n    const lineHeight = localStorage.getItem(`${testAreaID}-lineHeight`) || '1.2';\n    const letterSpacing = localStorage.getItem(`${testAreaID}-letterSpacing`) || '0em';\n    const columnCount = localStorage.getItem(`${testAreaID}-column-count`) || '1';\n    const columnGap = localStorage.getItem(`${testAreaID}-column-gap`) || '1em';\n  \n    const inlineStyle = `\n      font-size: ${fontSize}pt;\n      line-height: ${lineHeight};\n      letter-spacing: ${letterSpacing};\n      column-count: ${columnCount};\n      column-gap: ${columnGap};\n    `;\n  \n    const html = `\n      <div class=\"d-flex justify-content-between\">\n        <h6 class=\"h6\" contentEditable=\"true\" \n            id=\"${testAreaID}-title\"\n            onkeyup=\"saveEditableContent('${testAreaID}-title')\">${savedTitle}</h6>\n        <span class=\"testarea-values small\">${generateTestAreaValues(inlineStyle)}</span>\n      </div>\n      <div class=\"testarea-container\">\n        <div id=\"${testAreaID}\" \n             style=\"${inlineStyle} ${fvarStyle}\" \n             class=\"t__importedfontfamily testarea\" \n             contenteditable=\"true\" \n             spellcheck=\"false\" \n             onkeyup=\"saveEditableContent('${testAreaID}')\">\n          ${savedContent}\n        </div>\n      </div>\n    `;\n  \n    return html;\n  };\n  \n  const formatStyleValue = (property, value) => {\n    switch (property) {\n      case 'font-size':\n        return value;\n      case 'line-height':\n        return value;\n      case 'letter-spacing':\n        return value.replace('em', '');\n      default:\n        return value;\n    }\n  };\n  \n  const generateTestAreaValues = (inlineStyle) => {\n    // Only show these core properties\n    const styleMap = {\n      'font-size': 'Size',\n      'line-height': 'Leading',\n      'letter-spacing': 'Tracking'\n    };\n\n    const styles = inlineStyle.split(';')\n      .filter(s => s.trim())\n      // Only process styles that are in our styleMap\n      .filter(style => {\n        const property = style.split(':')[0].trim();\n        return styleMap.hasOwnProperty(property);\n      });\n\n    return styles.map(style => {\n      const [property, value] = style.split(':').map(s => s.trim());\n      const label = styleMap[property];\n      const formattedValue = formatStyleValue(property, value);\n      return `<span class=\"${property}\">${label}: ${formattedValue}</span>`;\n    }).join(' · ');\n  };\n  \n  const updateInlineText = (itemID, property, value) => {\n\tconst container = document.querySelector(`#${itemID} .testarea-values`);\n\tif (!container) return;\n\n\t// Get current values from localStorage\n\tconst fontSize = localStorage.getItem(`${itemID}-fontSize`) || '14';\n\tconst lineHeight = localStorage.getItem(`${itemID}-lineHeight`) || '1.2';\n\tconst letterSpacing = localStorage.getItem(`${itemID}-letterSpacing`) || '0';\n\n\tconst currentStyles = {\n\t  'font-size': `${fontSize}pt`,\n\t  'line-height': lineHeight,\n\t  'letter-spacing': `${letterSpacing}em`\n\t};\n\n\tconst inlineStyle = Object.entries(currentStyles)\n\t  .map(([prop, val]) => `${prop}: ${val}`)\n\t  .join('; ');\n\n\tcontainer.innerHTML = generateTestAreaValues(inlineStyle);\n  };\n\n// Global functions\n\nexport const insertField = (aboveHere) => {\n\tconst original = document.getElementById(aboveHere);\n\tconst clone = original.cloneNode(true);\n\t\n\t// Reset any unique IDs or input values in the clone\n\tclone.id = `${aboveHere}-clone-${Date.now()}`;\n\tclone.querySelectorAll('[id]').forEach(el => {\n\t  el.id = `${el.id}-clone-${Date.now()}`;\n\t});\n\tclone.querySelectorAll('input').forEach(input => {\n\t  input.value = '';\n\t});\n  \n\toriginal.parentNode.insertBefore(clone, original);\n\t\n\t// Animate the insertion\n\tclone.style.height = '0px';\n\tclone.style.overflow = 'hidden';\n\tclone.style.transition = 'height 0.6s ease';\n\t\n\tsetTimeout(() => {\n\t  clone.style.height = `${clone.scrollHeight}px`;\n\t}, 0);\n\t\n\tsetTimeout(() => {\n\t  clone.style.height = 'auto';\n\t  clone.style.overflow = 'visible';\n\t}, 600);\n  };\n  \n  export const passStyleValue = (itemID, property, value) => {\n\tconst elementIdSuffix = `-${property}-val`;\n\tconst element = document.querySelector(`[id$=\"${itemID}${elementIdSuffix}\"]`);\n\t\n\t// Save to localStorage\n\tif (['fontSize', 'lineHeight', 'letterSpacing', 'column-count', 'column-gap'].includes(property)) {\n\t  localStorage.setItem(`${itemID}-${property}`, value);\n\t  if (property === 'fontSize') value += 'pt';\n\t  if (property === 'letterSpacing') value += 'em';\n\t  if (element) element.textContent = value;\n\t}\n\n\t// Update the testarea\n\tconst testarea = document.querySelector(`#${itemID} .testarea`);\n\tif (testarea) {\n\t  testarea.style[property] = value;\n\t}\n\n\t// Update the testarea-values display\n\tupdateInlineText(itemID, property, value);\n  \n\t// Only update active button for non-slider properties\n\tif (!['fontSize', 'lineHeight', 'letterSpacing', 'column-count', 'column-gap'].includes(property)) {\n\t  updateActiveButton(property, value);\n\t}\n  };\n  \n  export const passfvarValue = (itemID, property, value, fvarSupport) => {\n    const element = document.getElementById(`${itemID}-${property}-val`);\n    if (element) {\n        element.textContent = value;\n    } else {\n        console.warn(`Element with ID ${itemID}-${property}-val not found.`);\n    }\n\n    saveData(`${itemID}-${property}-val`, value);\n\n    const fvarSupportArray = fvarSupport.split(',');\n    let fvarcss = fvarSupportArray.map(tag => {\n        const tagValue = tag === property ? value : document.getElementById(`${itemID}-${tag}`)?.value; // Use optional chaining\n        return `'${tag}' ${tagValue}`;\n    }).join(', ');\n\n    const testarea = document.querySelector(`#${itemID} .testarea`);\n    if (testarea) {\n        testarea.style.fontVariationSettings = fvarcss;\n    } else {\n        console.warn(`Test area with ID ${itemID} not found.`);\n    }\n\n    updateInlineText(itemID, 'fvar', fvarcss);\n};\n  \n  export const passfeatValue = (itemID, feature, featureSupport) => {\n\tconst featSupport = featureSupport.split(',');\n\tlet featcss = \"\";\n  \n\tfor (let f = 0; f < featSupport.length; f++) {\n\t  if (document.getElementById(`${itemID}-checkbox-${featSupport[f]}`).checked) {\n\t\tfeatcss += `'${featSupport[f]}',`;\n\t  }\n\t}\n\tfeatcss = featcss.replace(/,\\s*$/, \"\");\n\tdocument.querySelector(`#${itemID} .testarea`).style.fontFeatureSettings = featcss;\n  };\n  \n  const updateActiveButton = (property, value) => {\n\tdocument.querySelectorAll(`.btn.${property}-${value}`).forEach(btn => {\n\t  btn.classList.add('active');\n\t  \n\t  // Find the parent wrapper\n\t  const wrapper = btn.closest('.btn__wrapper');\n\t  \n\t  if (wrapper) {\n\t\t// If we found a wrapper, remove 'active' class from all sibling buttons\n\t\twrapper.querySelectorAll('.btn').forEach(sibling => {\n\t\t  if (sibling !== btn) sibling.classList.remove('active');\n\t\t});\n\t  } else {\n\t\t// Fallback: remove 'active' class from all buttons with the same property\n\t\tdocument.querySelectorAll(`.btn[class*=\"${property}-\"]`).forEach(sibling => {\n\t\t  if (sibling !== btn) sibling.classList.remove('active');\n\t\t});\n\t  }\n\t});\n  };\n\n// generate buttons\nexport const generateStageButtons = (proof, currentStage) => {\n    return Object.keys(proof).map(stage => {\n      const isActive = stage === currentStage ? 'active' : '';\n      return `\n        <div class=\"tab-item ${isActive} tab__setstage\" onclick=\"setStage('${stage}')\">\n          <a href=\"#\" class=\"stage-button\">${stage}</a>\n        </div>\n      `;\n    }).join('');\n  };\n\n  // localload vs server\n\n  export const localLoad = () => {\n\tconst fileButtonParent = document.getElementById('section__header-file-buttons');\n\t\n\tfetch('../src/txt/fonts.txt')\n\t  .then(response => response.text())\n\t  .then(data => {\n\t\tconst fonts = data.split('fonts/')\n\t\t  .filter(font => font.trim() !== '')\n\t\t  .map(font => font.trim());\n  \n\t\tconst uniqueFonts = preserveUnique(fonts.sort());\n\t\t\n\t\tif (uniqueFonts.length === 0) {\n\t\t  // Only show the message if no fonts are found\n\t\t  fileButtonParent.innerHTML = 'Place fonts you want to proof into <code>/fonts</code> to begin';\n\t\t} else {\n\t\t  // First add navigation\n\t\t  const navGroup = generateFontNavigation();\n\t\t  fileButtonParent.appendChild(navGroup);\n\t\t  \n\t\t  // Then add font buttons\n\t\t  generateFontButtons(uniqueFonts, 'local')\n\t\t    .then(container => {\n\t\t      fileButtonParent.appendChild(container);\n\t\t      // Set the default font\n\t\t      const fontFamilySource = localStorage.getItem('fontFamilySource') || \n\t\t        `fonts/${uniqueFonts[uniqueFonts.length - 1]}`;\n\t\t      const fontFamily = localStorage.getItem('fontFamily') || \n\t\t        fontFamilySource.replace('.', '-');\n\t\t      setFont(fontFamilySource, fontFamily);\n\t\t    });\n\t\t}\n\t  })\n\t  .catch(error => {\n\t\tconsole.error('Error loading fonts:', error);\n\t\t// Show the message if there's an error loading fonts\n\t\tfileButtonParent.innerHTML = 'Place fonts you want to proof into <code>/fonts</code> to begin';\n\t  });\n  };\n  \n  export const serverLoad = () => {\n\tconst fileButtonParent = document.getElementById('section__header-file-buttons');\n\t\n\t// Load the default Gooper font\n\tsetFont('fonts/gooper-VF.ttf', 'gooper-VF-ttf');\n\tdocument.getElementById('style__fontface').innerHTML = '@font-face { font-family: \"gooper-VF-ttf\"; src: url(\"fonts/gooper-VF.ttf\");}';\n  \n\tconst dragDropHtml = `\n\t  <div id=\"drag-drop-area\" class=\"drag-drop-area\">\n\t\t<p>Drag & drop font files here</p>\n\t\t<p>or</p>\n\t\t<label for=\"fontInput\" class=\"file-input-label\">Choose Files</label>\n\t\t<input id=\"fontInput\" type=\"file\" class=\"file-input\" multiple accept=\".ttf,.otf\" />\n\t  </div>\n\t`;\n\n\tfileButtonParent.innerHTML = dragDropHtml;\n  \n\tconst dragDropArea = document.getElementById('drag-drop-area');\n\tconst fileInput = document.getElementById('fontInput');\n  \n\t// Prevent default drag behaviors\n\t['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {\n\t  dragDropArea.addEventListener(eventName, preventDefaults, false);\n\t  document.body.addEventListener(eventName, preventDefaults, false);\n\t});\n  \n\t// Highlight drop area when item is dragged over it\n\t['dragenter', 'dragover'].forEach(eventName => {\n\t  dragDropArea.addEventListener(eventName, highlight, false);\n\t});\n  \n\t['dragleave', 'drop'].forEach(eventName => {\n\t  dragDropArea.addEventListener(eventName, unhighlight, false);\n\t});\n  \n\t// Handle dropped files\n\tdragDropArea.addEventListener('drop', handleDrop, false);\n  \n\t// Handle selected files\n\tfileInput.addEventListener('change', handleFiles, false);\n  };\n  \n  function preventDefaults(e) {\n\te.preventDefault();\n\te.stopPropagation();\n  }\n  \n  function highlight(e) {\n\tdocument.getElementById('drag-drop-area').classList.add('highlight');\n  }\n  \n  function unhighlight(e) {\n\tdocument.getElementById('drag-drop-area').classList.remove('highlight');\n  }\n  \n  function handleDrop(e) {\n\tconst dt = e.dataTransfer;\n\tconst files = dt.files;\n\thandleFiles(files);\n  }\n  \n  function handleFiles(filesOrEvent) {\n\tlet files;\n\tif (filesOrEvent instanceof Event) {\n\t  files = filesOrEvent.target.files;\n\t} else {\n\t  files = filesOrEvent;\n\t}\n  \n\tfiles = Array.from(files);\n\t\n\t// Process all files\n\tconst uploadPromises = files.map(file => uploadFile(file));\n  \n\t// After all files are processed, select the first font chip\n\tPromise.all(uploadPromises).then(() => {\n\t  setTimeout(() => {\n\t\tconst firstButton = document.querySelector('.btn__setfont');\n\t\tif (firstButton) {\n\t\t  firstButton.click();\n\t\t}\n\t  }, 100); // Short delay to ensure DOM is updated\n\t});\n  }\n  \n  function uploadFile(file) {\n\treturn new Promise((resolve) => {\n\t  onReadFile({ target: { files: [file] } });\n\t  // Assume onReadFile is asynchronous and use a setTimeout to simulate its completion\n\t  setTimeout(resolve, 50);\n\t});\n  }\n  \n  // Make sure onReadFile returns a Promise or is modified to work with this approach\n  \n  function previewFile(file) {\n\tconst reader = new FileReader();\n\treader.readAsDataURL(file);\n\treader.onloadend = function() {\n\t  const img = document.createElement('img');\n\t  img.src = reader.result;\n\t  document.getElementById('drag-drop-area').appendChild(img);\n\t}\n  }\n  \n  export const setupEventListeners = () => {\n\tconst fileButtons = document.getElementById('section__header-file-buttons');\n\tconst stageButtons = document.getElementById('section__header-stage-buttons');\n\tconst toolsToggle = document.getElementById('btn__view-tools-toggle');\n\tconst modeToggle = document.getElementById('btn__mode-toggle');\n\tconst localStorageClearButton = document.getElementById('btn__reset-local-storage');\n\tconst settingsToggle = document.getElementById('btn__settings-toggle');\n  \n\tif (fileButtons) {\n\t  fileButtons.addEventListener('click', handleFileButtonClick);\n\t}\n\tif (stageButtons) {\n\t  stageButtons.addEventListener('click', handleStageButtonClick);\n\t}\n\tif (toolsToggle) {\n\t  toolsToggle.addEventListener('click', toggleToolsVisibility);\n\t}\n\tif (modeToggle) {\n\t\tmodeToggle.addEventListener('click', toggleMode);\n\t}\n\tif (localStorageClearButton) {\n\t\tlocalStorageClearButton.addEventListener('click', localStorageClear);\n\t}\n\tif (settingsToggle) {\n\t\tsettingsToggle.addEventListener('click', toggleSettingsVisibility);\n\t}\n\tsetupPasteHandling();\n\n\t// Add aspect ratio select listener\n\tconst aspectRatioSelect = document.getElementById('select__aspect-ratio');\n\tif (aspectRatioSelect) {\n\t\t// Set initial value\n\t\tconst proofs = document.querySelectorAll('.item__proof');\n\t\tproofs.forEach(proof => proof.classList.add('ratio-letter'));\n\n\t\t// Watch for changes\n\t\taspectRatioSelect.addEventListener('change', (e) => {\n\t\t\tconst ratio = e.target.value;\n\t\t\tconst proofs = document.querySelectorAll('.item__proof');\n\t\t\t\n\t\t\tproofs.forEach(proof => {\n\t\t\t\tproof.classList.remove('ratio-letter', 'ratio-a4');\n\t\t\t\tproof.classList.add(ratio === '8.5:11' ? 'ratio-letter' : 'ratio-a4');\n\t\t\t});\n\n\t\t\tlocalStorage.setItem('preferred-ratio', ratio);\n\t\t});\n\n\t\t// Restore saved preference if it exists\n\t\tconst savedRatio = localStorage.getItem('preferred-ratio');\n\t\tif (savedRatio) {\n\t\t\taspectRatioSelect.value = savedRatio;\n\t\t\taspectRatioSelect.dispatchEvent(new Event('change'));\n\t\t}\n\t}\n\n\t// Add base font size input listener\n\tconst baseFontInput = document.getElementById('input__base-font-size');\n\tif (baseFontInput) {\n\t\tbaseFontInput.addEventListener('change', (e) => {\n\t\t\tconst baseSize = parseFloat(e.target.value);\n\t\t\tlocalStorage.setItem('base-font-size', baseSize);\n\t\t\tupdateAllTypeScales();\n\t\t});\n\n\t\t// Restore saved base font size\n\t\tconst savedBaseSize = localStorage.getItem('base-font-size') || '14';\n\t\tbaseFontInput.value = savedBaseSize;\n\t}\n\n\t// Modify type scale select listener\n\tconst typeScaleSelect = document.getElementById('select__type-scale');\n\tif (typeScaleSelect) {\n\t\ttypeScaleSelect.addEventListener('change', () => {\n\t\t\tupdateAllTypeScales();\n\t\t});\n\t}\n\n\t// Initialize color mode from localStorage\n\tinitColorMode();\n  };\n  \n  const handleFileButtonClick = (event) => {\n\tif (event.target.classList.contains('btn__setfont')) {\n\t  event.target.classList.add('active', 'visited');\n\t  // Remove 'active' class from sibling elements\n\t  const siblings = Array.from(event.target.parentNode.children).filter(child => child !== event.target);\n\t  siblings.forEach(sibling => sibling.classList.remove('active'));\n\t}\n  };\n  \n  const handleStageButtonClick = (event) => {\n\tif (event.target.classList.contains('btn__setstage')) {\n\t  event.target.classList.add('active');\n\t  // Remove 'active' class from sibling elements\n\t  const siblings = Array.from(event.target.parentNode.children).filter(child => child !== event.target);\n\t  siblings.forEach(sibling => sibling.classList.remove('active'));\n\t}\n  };\n  \n  const toggleToolsVisibility = () => {\n\tdocument.body.classList.toggle('tools-visible');\n  };\n\nconst setupPasteHandling = () => {\n  document.addEventListener('paste', (e) => {\n    // Only handle paste events in testarea elements\n    if (!e.target.classList.contains('testarea')) {\n      return;\n    }\n\n    // Prevent the default paste\n    e.preventDefault();\n\n    // Get plain text from clipboard\n    const text = (e.clipboardData || window.clipboardData).getData('text/plain');\n\n    // Insert the plain text at cursor position\n    const selection = window.getSelection();\n    if (selection.rangeCount) {\n      const range = selection.getRangeAt(0);\n      range.deleteContents();\n      range.insertNode(document.createTextNode(text));\n    } else {\n      e.target.textContent += text;\n    }\n\n    // Trigger the onkeyup event to save the content\n    const event = new Event('keyup');\n    e.target.dispatchEvent(event);\n  });\n};\n\nexport const generateFontButtons = async (fonts, mode = 'local') => {\n  const container = document.createElement('div');\n  container.className = 'font-buttons-container';\n\n  // Create font chips container\n  const chipsContainer = document.createElement('div');\n  chipsContainer.className = 'font-chips';\n  \n  // Generate individual font buttons\n  for (const font of fonts) {\n    const button = await generateFontButton(font, mode);\n    chipsContainer.appendChild(button);\n  }\n\n  return chipsContainer; // Return only the chips container\n};\n\n// Create a separate function for navigation\nexport const generateFontNavigation = () => {\n  const navGroup = document.createElement('div');\n  navGroup.className = 'btn-group d-flex g-1 mb-2 font-nav-group';\n  \n  const prevButton = document.createElement('button');\n  prevButton.className = 'btn d-flex align-items-center justify-content-between d-flex-grow';\n  prevButton.innerHTML = '<span class=\"material-symbols-outlined\">chevron_left</span> Prev';\n  prevButton.onclick = () => navigateFonts('prev');\n  \n  const nextButton = document.createElement('button');\n  nextButton.className = 'btn d-flex align-items-center justify-content-between d-flex-grow';\n  nextButton.innerHTML = 'Next <span class=\"material-symbols-outlined\">chevron_right</span>';\n  nextButton.onclick = () => navigateFonts('next');\n  \n  navGroup.appendChild(prevButton);\n  navGroup.appendChild(nextButton);\n  \n  return navGroup;\n};\n\nconst navigateFonts = (direction) => {\n  const buttons = document.querySelectorAll('.btn__setfont');\n  const activeButton = document.querySelector('.btn__setfont.active');\n  \n  if (!activeButton || buttons.length <= 1) return;\n  \n  const currentIndex = Array.from(buttons).indexOf(activeButton);\n  let nextIndex;\n  \n  if (direction === 'next') {\n    nextIndex = currentIndex + 1 >= buttons.length ? 0 : currentIndex + 1;\n  } else {\n    nextIndex = currentIndex - 1 < 0 ? buttons.length - 1 : currentIndex - 1;\n  }\n  \n  buttons[nextIndex].click();\n};\n\nconst initAspectRatio = () => {\n  const select = document.getElementById('select__aspect-ratio');\n  const proofs = document.querySelectorAll('.item__proof');\n\n  // Set default on load\n  proofs.forEach(proof => {\n    proof.classList.add('ratio-letter');\n  });\n\n  select.addEventListener('change', (e) => {\n    const ratio = e.target.value;\n    proofs.forEach(proof => {\n      // Remove existing ratio classes\n      proof.classList.remove('ratio-letter', 'ratio-a4');\n      \n      // Add new ratio class\n      switch(ratio) {\n        case '8.5:11':\n          proof.classList.add('ratio-letter');\n          break;\n        case '7:10':\n          proof.classList.add('ratio-a4');\n          break;\n      }\n    });\n\n    // Optionally save preference\n    localStorage.setItem('preferred-ratio', ratio);\n  });\n\n  // Restore saved preference if it exists\n  const savedRatio = localStorage.getItem('preferred-ratio');\n  if (savedRatio) {\n    select.value = savedRatio;\n    select.dispatchEvent(new Event('change'));\n  }\n};\n\n// Use the imported function where needed\nconst getFontSize = (text, ratio = 1.618) => {\n  const sizes = calculateTypeScale(14, ratio);\n  const length = text.length;\n  \n  if (length <= 5) return sizes[0];        // Largest size\n  if (length <= 15) return sizes[1];       // Second largest\n  if (length <= 30) return sizes[2];       // Third largest\n  if (length <= 100) return sizes[3];      // Medium\n  if (length <= 250) return sizes[4];      // Second smallest\n  return sizes[5];                         // Smallest/base size\n};\n\n// Update your proof generation to use the selected scale\nconst generateProof = (text, options = {}) => {\n  const typeScale = parseFloat(document.getElementById('select__type-scale')?.value || 1.618);\n  const fontSize = getFontSize(text, typeScale);\n  \n  // ... rest of your proof generation code ...\n};\n\n// Add this function to initialize the type scale on page load\nconst initTypeScale = () => {\n  const ratio = parseFloat(document.getElementById('select__type-scale')?.value || 1.618);\n  const baseSize = parseFloat(document.getElementById('input__base-font-size')?.value || 14);\n  \n  document.querySelectorAll('.item').forEach(item => {\n    const itemID = item.id;\n    const testarea = item.querySelector('.testarea');\n    const text = testarea?.textContent || '';\n    \n    // Always calculate the initial size based on current settings\n    const newSize = whichFontSize(text, baseSize, ratio);\n    localStorage.setItem(`${itemID}-fontSize`, newSize);\n    \n    if (testarea) {\n      testarea.style.fontSize = `${newSize}pt`;\n    }\n    \n    // Update fontSize slider and its value display\n    const fontSizeSlider = item.querySelector(`#${itemID}-fontSize`);\n    const fontSizeVal = item.querySelector(`#${itemID}-fontSize-val`);\n    if (fontSizeSlider) {\n      fontSizeSlider.value = newSize;\n    }\n    if (fontSizeVal) {\n      fontSizeVal.textContent = `${newSize}pt`;\n    }\n\n    // Update the testarea-values display\n    const valuesDisplay = item.querySelector('.testarea-values');\n    if (valuesDisplay) {\n      const currentStyles = {\n        'font-size': `${newSize}pt`,\n        'line-height': testarea?.style.lineHeight || '1.2',\n        'letter-spacing': testarea?.style.letterSpacing || '0em'\n      };\n\n      const inlineStyle = Object.entries(currentStyles)\n        .map(([prop, val]) => `${prop}: ${val}`)\n        .join('; ');\n\n      valuesDisplay.innerHTML = generateTestAreaValues(inlineStyle);\n    }\n  });\n};\n\n// New function to update all proofs when either base size or ratio changes\nconst updateAllTypeScales = () => {\n\tconst ratio = parseFloat(document.getElementById('select__type-scale')?.value || 1.618);\n\tconst baseSize = parseFloat(document.getElementById('input__base-font-size')?.value || 14);\n\t\n\tlocalStorage.setItem('preferred-scale', ratio);\n\t\n\tdocument.querySelectorAll('.item').forEach(item => {\n\t\tconst itemID = item.id;\n\t\tconst testarea = item.querySelector('.testarea');\n\t\tconst text = testarea?.textContent || '';\n\t\tconst newSize = whichFontSize(text, baseSize, ratio);\n\t\t\n\t\t// Update the testarea font size\n\t\tif (testarea) {\n\t\t\ttestarea.style.fontSize = `${newSize}pt`;\n\t\t}\n\t\t\n\t\t// Update fontSize slider and its value display\n\t\tconst fontSizeSlider = item.querySelector(`#${itemID}-fontSize`);\n\t\tconst fontSizeVal = item.querySelector(`#${itemID}-fontSize-val`);\n\t\tif (fontSizeSlider) {\n\t\t\tfontSizeSlider.value = newSize;\n\t\t\tlocalStorage.setItem(`${itemID}-fontSize`, newSize);\n\t\t}\n\t\tif (fontSizeVal) {\n\t\t\tfontSizeVal.textContent = `${newSize}pt`;\n\t\t}\n\n\t\t// Update the testarea-values display\n\t\tconst valuesDisplay = item.querySelector('.testarea-values');\n\t\tif (valuesDisplay) {\n\t\t\tconst currentStyles = {\n\t\t\t\t'font-size': `${newSize}pt`,\n\t\t\t\t'line-height': testarea?.style.lineHeight || '1.2',\n\t\t\t\t'letter-spacing': testarea?.style.letterSpacing || '0em'\n\t\t\t};\n\n\t\t\tconst inlineStyle = Object.entries(currentStyles)\n\t\t\t\t.map(([prop, val]) => `${prop}: ${val}`)\n\t\t\t\t.join('; ');\n\n\t\t\tvaluesDisplay.innerHTML = generateTestAreaValues(inlineStyle);\n\t\t}\n\t});\n};\n","import { CONFIG } from './config.js';\nimport * as AppCore from './app-core.js';\nimport { localStorageClear, saveEditableContent, saveInputValue } from './utils.js';\n\n// Global error handlers\nwindow.addEventListener('unhandledrejection', function(event) {\n  console.error('Unhandled promise rejection:', event.reason);\n});\n\nwindow.addEventListener('error', function(event) {\n  console.error('Uncaught error:', event.error);\n});\n\n// Make functions globally available\nwindow.setFont = AppCore.setFont;\nwindow.onReadFile = AppCore.onReadFile;\nwindow.setStage = AppCore.setStage;\nwindow.passStyleValue = AppCore.passStyleValue;\nwindow.passfvarValue = AppCore.passfvarValue;\nwindow.passfeatValue = AppCore.passfeatValue;\nwindow.insertField = AppCore.insertField;\nwindow.localStorageClear = localStorageClear;\nwindow.saveEditableContent = saveEditableContent;\nwindow.saveInputValue = saveInputValue;\n\nconst init = (forceServerLoad = false) => {\n\ttry {\n\t  if (forceServerLoad || !['localhost', '127.0.0.1', ''].includes(location.hostname)) {\n\t\tAppCore.serverLoad();\n\t  } else {\n\t\tAppCore.localLoad();\n\t  }\n  \n\t  AppCore.setupEventListeners();\n\t  document.body.classList.add('loaded');\n  \n\t} catch (error) {\n\t  console.error('Error during initialization:', error);\n\t}\n  };\n\ndocument.addEventListener('DOMContentLoaded', () => init(true));"],"names":["showErrorMessage","message","el","document","getElementById","style","display","trim","length","textContent","console","error","localStorageClear","localStorage","clear","setItem","location","reload","toggleMode","body","newMode","getItem","removeAttribute","querySelector","setAttribute","toggleSettingsVisibility","settingsToggle","classList","toggle","whichFontSize","text","baseSize","arguments","undefined","ratio","toString","sizes","Math","round","pow","calculateTypeScale","charCount","saveData","id","value","Storage","content","getStoredContent","elementId","defaultContent","_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","asyncGeneratorStep","_asyncToGenerator","apply","_next","_throw","font","fontFormats","truetype","opentype","onReadFile","event","files","target","fileButtonParent","innerHTML","navGroup","generateFontNavigation","appendChild","generateFontButtons","Array","from","container","firstButton","click","setFont","fontPath","fontName","log","concat","load","err","loadedFont","fontFamilySource","fontFamily","reject","fontFaceRule","outlinesFormat","createElement","head","window","displayFontData","includes","hostname","pendingStage","setStage","onFontLoaded","tablename","styles","tables","gim","cmap","glyphIndexMap","gimLength","proofingPhase","fontFormat","nameHtml","names","designer","designerName","en","postScriptName","Date","toJSON","replace","stage","article","stageButtons","warn","fetch","response","json","proof","html","generateStageHtml","buttonHtml","generateStageButtons","initTypeScale","gsubFeatures","gsub","features","taglist","filter","feature","tag","map","title","textClass","testAreaID","itemID","sliderID","_getStoredStyles","getStoredStyles","fontSize","lineHeight","letterSpacing","fvarStyle","inlineStyle","generateFvarStyle","generateSliders","generateVariableSliders","generateStyleButtons","generateFeatureCheckboxes","generateProofContent","parseFloat","_document$getElementB","_document$querySelect","columnCount","columnGap","fvar","axes","axis","storedValue","defaultValue","join","minValue","maxValue","generateFontButton","_ref2","_callee2","mode","fontType","isVariable","button","_args2","_context2","split","toUpperCase","isVariableFont","URL","createObjectURL","className","onclick","querySelectorAll","btn","remove","add","_x2","_ref3","_callee3","arrayBuffer","parsedFont","_context3","parse","t0","_x3","updateColumns","passStyleValue","uniqueTags","Set","savedContent","savedTitle","generateTestAreaValues","styleMap","property","_style$split$map2","_slicedToArray","label","formattedValue","formatStyleValue","updateInlineText","currentStyles","entries","_ref4","_ref5","prop","val","elementIdSuffix","element","testarea","updateActiveButton","wrapper","closest","sibling","currentStage","localLoad","data","arr","fonts","uniqueFonts","sort","preventDefaults","preventDefault","stopPropagation","highlight","unhighlight","handleDrop","handleFiles","dataTransfer","filesOrEvent","Event","uploadPromises","file","setTimeout","uploadFile","all","handleFileButtonClick","contains","parentNode","children","child","handleStageButtonClick","toggleToolsVisibility","setupPasteHandling","addEventListener","clipboardData","getData","selection","getSelection","rangeCount","range","getRangeAt","deleteContents","insertNode","createTextNode","dispatchEvent","_ref6","_callee4","chipsContainer","_iterator","_step","_font2","_args4","_context4","_createForOfIteratorHelper","_x4","prevButton","navigateFonts","nextButton","direction","buttons","activeButton","currentIndex","indexOf","_document$getElementB4","_document$getElementB5","item","newSize","fontSizeSlider","fontSizeVal","valuesDisplay","_ref7","_ref8","updateAllTypeScales","_document$getElementB6","_document$getElementB7","_ref9","_ref10","reason","AppCore","passfvarValue","fvarSupport","fvarcss","_document$getElementB2","tagValue","fontVariationSettings","passfeatValue","featureSupport","featSupport","featcss","checked","fontFeatureSettings","insertField","aboveHere","original","clone","cloneNode","now","input","insertBefore","height","overflow","transition","scrollHeight","saveEditableContent","innerText","saveInputValue","init","forceServerLoad","dragDropArea","fileInput","eventName","fileButtons","toolsToggle","modeToggle","localStorageClearButton","aspectRatioSelect","savedRatio","baseFontInput","savedBaseSize","savedMode","typeScaleSelect"],"sourceRoot":""}